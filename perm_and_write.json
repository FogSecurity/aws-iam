[
    {
        "service": "acm-pca",
        "action": "CreatePermission",
        "iam_action": "acm-pca:CreatePermission"
    },
    {
        "service": "acm-pca",
        "action": "DeletePermission",
        "iam_action": "acm-pca:DeletePermission"
    },
    {
        "service": "acm-pca",
        "action": "DeletePolicy",
        "iam_action": "acm-pca:DeletePolicy"
    },
    {
        "service": "acm-pca",
        "action": "PutPolicy",
        "iam_action": "acm-pca:PutPolicy"
    },
    {
        "service": "apigateway",
        "action": "AddCertificateToDomain",
        "iam_action": "apigateway:AddCertificateToDomain"
    },
    {
        "service": "apigateway",
        "action": "CreateAccessAssociation",
        "iam_action": "apigateway:CreateAccessAssociation"
    },
    {
        "service": "apigateway",
        "action": "RejectAccessAssociation",
        "iam_action": "apigateway:RejectAccessAssociation"
    },
    {
        "service": "apigateway",
        "action": "RemoveCertificateFromDomain",
        "iam_action": "apigateway:RemoveCertificateFromDomain"
    },
    {
        "service": "apigateway",
        "action": "SetWebACL",
        "iam_action": "apigateway:SetWebACL"
    },
    {
        "service": "apigateway",
        "action": "UpdateDomainNameManagementPolicy",
        "iam_action": "apigateway:UpdateDomainNameManagementPolicy"
    },
    {
        "service": "apigateway",
        "action": "UpdateDomainNamePolicy",
        "iam_action": "apigateway:UpdateDomainNamePolicy"
    },
    {
        "service": "apigateway",
        "action": "UpdateRestApiPolicy",
        "iam_action": "apigateway:UpdateRestApiPolicy"
    },
    {
        "service": "appsync",
        "action": "SetWebACL",
        "iam_action": "appsync:SetWebACL"
    },
    {
        "service": "aws-marketplace",
        "action": "DeleteResourcePolicy",
        "iam_action": "aws-marketplace:DeleteResourcePolicy"
    },
    {
        "service": "aws-marketplace",
        "action": "PutResourcePolicy",
        "iam_action": "aws-marketplace:PutResourcePolicy"
    },
    {
        "service": "backup",
        "action": "DeleteBackupVaultAccessPolicy",
        "iam_action": "backup:DeleteBackupVaultAccessPolicy"
    },
    {
        "service": "backup",
        "action": "DeleteBackupVaultSharingPolicy",
        "iam_action": "backup:DeleteBackupVaultSharingPolicy"
    },
    {
        "service": "backup",
        "action": "ListIndexedRecoveryPointsForSearch",
        "iam_action": "backup:ListIndexedRecoveryPointsForSearch"
    },
    {
        "service": "backup",
        "action": "PutBackupVaultAccessPolicy",
        "iam_action": "backup:PutBackupVaultAccessPolicy"
    },
    {
        "service": "backup",
        "action": "PutBackupVaultSharingPolicy",
        "iam_action": "backup:PutBackupVaultSharingPolicy"
    },
    {
        "service": "backup",
        "action": "SearchRecoveryPoint",
        "iam_action": "backup:SearchRecoveryPoint"
    },
    {
        "service": "bedrock",
        "action": "AllowVendedLogDeliveryForResource",
        "iam_action": "bedrock:AllowVendedLogDeliveryForResource"
    },
    {
        "service": "billing",
        "action": "DeleteResourcePolicy",
        "iam_action": "billing:DeleteResourcePolicy"
    },
    {
        "service": "billing",
        "action": "GetResourcePolicy",
        "iam_action": "billing:GetResourcePolicy"
    },
    {
        "service": "billing",
        "action": "PutResourcePolicy",
        "iam_action": "billing:PutResourcePolicy"
    },
    {
        "service": "cleanrooms-ml",
        "action": "PutConfiguredAudienceModelPolicy",
        "iam_action": "cleanrooms-ml:PutConfiguredAudienceModelPolicy"
    },
    {
        "service": "cloudformation",
        "action": "SetStackPolicy",
        "iam_action": "cloudformation:SetStackPolicy"
    },
    {
        "service": "cloudfront",
        "action": "AllowVendedLogDeliveryForResource",
        "iam_action": "cloudfront:AllowVendedLogDeliveryForResource"
    },
    {
        "service": "cloudsearch",
        "action": "UpdateServiceAccessPolicies",
        "iam_action": "cloudsearch:UpdateServiceAccessPolicies"
    },
    {
        "service": "codeartifact",
        "action": "DeleteDomainPermissionsPolicy",
        "iam_action": "codeartifact:DeleteDomainPermissionsPolicy"
    },
    {
        "service": "codeartifact",
        "action": "DeleteRepositoryPermissionsPolicy",
        "iam_action": "codeartifact:DeleteRepositoryPermissionsPolicy"
    },
    {
        "service": "codebuild",
        "action": "DeleteResourcePolicy",
        "iam_action": "codebuild:DeleteResourcePolicy"
    },
    {
        "service": "codebuild",
        "action": "PutResourcePolicy",
        "iam_action": "codebuild:PutResourcePolicy"
    },
    {
        "service": "codeguru-profiler",
        "action": "PutPermission",
        "iam_action": "codeguru-profiler:PutPermission"
    },
    {
        "service": "codeguru-profiler",
        "action": "RemovePermission",
        "iam_action": "codeguru-profiler:RemovePermission"
    },
    {
        "service": "codestar",
        "action": "AssociateTeamMember",
        "iam_action": "codestar:AssociateTeamMember"
    },
    {
        "service": "codestar",
        "action": "CreateProject",
        "iam_action": "codestar:CreateProject"
    },
    {
        "service": "codestar",
        "action": "DeleteProject",
        "iam_action": "codestar:DeleteProject"
    },
    {
        "service": "codestar",
        "action": "DisassociateTeamMember",
        "iam_action": "codestar:DisassociateTeamMember"
    },
    {
        "service": "codestar",
        "action": "UpdateTeamMember",
        "iam_action": "codestar:UpdateTeamMember"
    },
    {
        "service": "codewhisperer",
        "action": "AllowVendedLogDeliveryForResource",
        "iam_action": "codewhisperer:AllowVendedLogDeliveryForResource"
    },
    {
        "service": "datazone",
        "action": "AddPolicyGrant",
        "iam_action": "datazone:AddPolicyGrant"
    },
    {
        "service": "datazone",
        "action": "DeleteDomainSharingPolicy",
        "iam_action": "datazone:DeleteDomainSharingPolicy"
    },
    {
        "service": "datazone",
        "action": "GetIamPortalLoginUrl",
        "iam_action": "datazone:GetIamPortalLoginUrl"
    },
    {
        "service": "datazone",
        "action": "PutDomainSharingPolicy",
        "iam_action": "datazone:PutDomainSharingPolicy"
    },
    {
        "service": "datazone",
        "action": "RemovePolicyGrant",
        "iam_action": "datazone:RemovePolicyGrant"
    },
    {
        "service": "datazone",
        "action": "RevokeSubscription",
        "iam_action": "datazone:RevokeSubscription"
    },
    {
        "service": "deadline",
        "action": "AssociateMemberToFarm",
        "iam_action": "deadline:AssociateMemberToFarm"
    },
    {
        "service": "deadline",
        "action": "AssociateMemberToFleet",
        "iam_action": "deadline:AssociateMemberToFleet"
    },
    {
        "service": "deadline",
        "action": "AssociateMemberToJob",
        "iam_action": "deadline:AssociateMemberToJob"
    },
    {
        "service": "deadline",
        "action": "AssociateMemberToQueue",
        "iam_action": "deadline:AssociateMemberToQueue"
    },
    {
        "service": "deadline",
        "action": "DisassociateMemberFromFarm",
        "iam_action": "deadline:DisassociateMemberFromFarm"
    },
    {
        "service": "deadline",
        "action": "DisassociateMemberFromFleet",
        "iam_action": "deadline:DisassociateMemberFromFleet"
    },
    {
        "service": "deadline",
        "action": "DisassociateMemberFromJob",
        "iam_action": "deadline:DisassociateMemberFromJob"
    },
    {
        "service": "deadline",
        "action": "DisassociateMemberFromQueue",
        "iam_action": "deadline:DisassociateMemberFromQueue"
    },
    {
        "service": "ds",
        "action": "AccessDSData",
        "iam_action": "ds:AccessDSData"
    },
    {
        "service": "dynamodb",
        "action": "DeleteResourcePolicy",
        "iam_action": "dynamodb:DeleteResourcePolicy"
    },
    {
        "service": "dynamodb",
        "action": "PutResourcePolicy",
        "iam_action": "dynamodb:PutResourcePolicy"
    },
    {
        "service": "dynamodb",
        "action": "UpdateAbacStatus",
        "iam_action": "dynamodb:UpdateAbacStatus"
    },
    {
        "service": "ec2",
        "action": "CancelImageLaunchPermission",
        "iam_action": "ec2:CancelImageLaunchPermission"
    },
    {
        "service": "ec2",
        "action": "CreateCoipPoolPermission",
        "iam_action": "ec2:CreateCoipPoolPermission"
    },
    {
        "service": "ec2",
        "action": "CreateLocalGatewayRouteTablePermission",
        "iam_action": "ec2:CreateLocalGatewayRouteTablePermission"
    },
    {
        "service": "ec2",
        "action": "CreateNetworkInterfacePermission",
        "iam_action": "ec2:CreateNetworkInterfacePermission"
    },
    {
        "service": "ec2",
        "action": "DeleteCoipPoolPermission",
        "iam_action": "ec2:DeleteCoipPoolPermission"
    },
    {
        "service": "ec2",
        "action": "DeleteLocalGatewayRouteTablePermission",
        "iam_action": "ec2:DeleteLocalGatewayRouteTablePermission"
    },
    {
        "service": "ec2",
        "action": "DeleteNetworkInterfacePermission",
        "iam_action": "ec2:DeleteNetworkInterfacePermission"
    },
    {
        "service": "ec2",
        "action": "DeleteResourcePolicy",
        "iam_action": "ec2:DeleteResourcePolicy"
    },
    {
        "service": "ec2",
        "action": "DisableImageBlockPublicAccess",
        "iam_action": "ec2:DisableImageBlockPublicAccess"
    },
    {
        "service": "ec2",
        "action": "DisableSnapshotBlockPublicAccess",
        "iam_action": "ec2:DisableSnapshotBlockPublicAccess"
    },
    {
        "service": "ec2",
        "action": "EnableImageBlockPublicAccess",
        "iam_action": "ec2:EnableImageBlockPublicAccess"
    },
    {
        "service": "ec2",
        "action": "EnableSnapshotBlockPublicAccess",
        "iam_action": "ec2:EnableSnapshotBlockPublicAccess"
    },
    {
        "service": "ec2",
        "action": "ModifySnapshotAttribute",
        "iam_action": "ec2:ModifySnapshotAttribute"
    },
    {
        "service": "ec2",
        "action": "ModifyVpcEndpointServicePermissions",
        "iam_action": "ec2:ModifyVpcEndpointServicePermissions"
    },
    {
        "service": "ec2",
        "action": "PutResourcePolicy",
        "iam_action": "ec2:PutResourcePolicy"
    },
    {
        "service": "ec2",
        "action": "ResetSnapshotAttribute",
        "iam_action": "ec2:ResetSnapshotAttribute"
    },
    {
        "service": "ecr",
        "action": "DeleteRegistryPolicy",
        "iam_action": "ecr:DeleteRegistryPolicy"
    },
    {
        "service": "ecr",
        "action": "DeleteRepositoryPolicy",
        "iam_action": "ecr:DeleteRepositoryPolicy"
    },
    {
        "service": "ecr",
        "action": "PutRegistryPolicy",
        "iam_action": "ecr:PutRegistryPolicy"
    },
    {
        "service": "ecr",
        "action": "SetRepositoryPolicy",
        "iam_action": "ecr:SetRepositoryPolicy"
    },
    {
        "service": "ecr-public",
        "action": "SetRepositoryPolicy",
        "iam_action": "ecr-public:SetRepositoryPolicy"
    },
    {
        "service": "elasticfilesystem",
        "action": "DeleteFileSystemPolicy",
        "iam_action": "elasticfilesystem:DeleteFileSystemPolicy"
    },
    {
        "service": "elasticfilesystem",
        "action": "PutFileSystemPolicy",
        "iam_action": "elasticfilesystem:PutFileSystemPolicy"
    },
    {
        "service": "elasticmapreduce",
        "action": "DeleteWorkspaceAccess",
        "iam_action": "elasticmapreduce:DeleteWorkspaceAccess"
    },
    {
        "service": "elasticmapreduce",
        "action": "PutBlockPublicAccessConfiguration",
        "iam_action": "elasticmapreduce:PutBlockPublicAccessConfiguration"
    },
    {
        "service": "elasticmapreduce",
        "action": "PutWorkspaceAccess",
        "iam_action": "elasticmapreduce:PutWorkspaceAccess"
    },
    {
        "service": "entityresolution",
        "action": "AddPolicyStatement",
        "iam_action": "entityresolution:AddPolicyStatement"
    },
    {
        "service": "entityresolution",
        "action": "DeletePolicyStatement",
        "iam_action": "entityresolution:DeletePolicyStatement"
    },
    {
        "service": "entityresolution",
        "action": "PutPolicy",
        "iam_action": "entityresolution:PutPolicy"
    },
    {
        "service": "entityresolution",
        "action": "UseIdNamespace",
        "iam_action": "entityresolution:UseIdNamespace"
    },
    {
        "service": "entityresolution",
        "action": "UseWorkflow",
        "iam_action": "entityresolution:UseWorkflow"
    },
    {
        "service": "events",
        "action": "PutPermission",
        "iam_action": "events:PutPermission"
    },
    {
        "service": "events",
        "action": "RemovePermission",
        "iam_action": "events:RemovePermission"
    },
    {
        "service": "fsx",
        "action": "BypassSnaplockEnterpriseRetention",
        "iam_action": "fsx:BypassSnaplockEnterpriseRetention"
    },
    {
        "service": "fsx",
        "action": "DeleteResourcePolicy",
        "iam_action": "fsx:DeleteResourcePolicy"
    },
    {
        "service": "fsx",
        "action": "GetResourcePolicy",
        "iam_action": "fsx:GetResourcePolicy"
    },
    {
        "service": "fsx",
        "action": "ManageBackupPrincipalAssociations",
        "iam_action": "fsx:ManageBackupPrincipalAssociations"
    },
    {
        "service": "fsx",
        "action": "PutResourcePolicy",
        "iam_action": "fsx:PutResourcePolicy"
    },
    {
        "service": "glacier",
        "action": "AbortVaultLock",
        "iam_action": "glacier:AbortVaultLock"
    },
    {
        "service": "glacier",
        "action": "CompleteVaultLock",
        "iam_action": "glacier:CompleteVaultLock"
    },
    {
        "service": "glacier",
        "action": "DeleteVaultAccessPolicy",
        "iam_action": "glacier:DeleteVaultAccessPolicy"
    },
    {
        "service": "glacier",
        "action": "InitiateVaultLock",
        "iam_action": "glacier:InitiateVaultLock"
    },
    {
        "service": "glacier",
        "action": "SetDataRetrievalPolicy",
        "iam_action": "glacier:SetDataRetrievalPolicy"
    },
    {
        "service": "glacier",
        "action": "SetVaultAccessPolicy",
        "iam_action": "glacier:SetVaultAccessPolicy"
    },
    {
        "service": "glue",
        "action": "BatchGetStageFiles",
        "iam_action": "glue:BatchGetStageFiles"
    },
    {
        "service": "glue",
        "action": "DeleteResourcePolicy",
        "iam_action": "glue:DeleteResourcePolicy"
    },
    {
        "service": "glue",
        "action": "DeregisterDataPreview",
        "iam_action": "glue:DeregisterDataPreview"
    },
    {
        "service": "glue",
        "action": "DescribeConnectionType",
        "iam_action": "glue:DescribeConnectionType"
    },
    {
        "service": "glue",
        "action": "DescribeEntity",
        "iam_action": "glue:DescribeEntity"
    },
    {
        "service": "glue",
        "action": "GetDataPreviewStatement",
        "iam_action": "glue:GetDataPreviewStatement"
    },
    {
        "service": "glue",
        "action": "GetEnvironment",
        "iam_action": "glue:GetEnvironment"
    },
    {
        "service": "glue",
        "action": "GetExecutors",
        "iam_action": "glue:GetExecutors"
    },
    {
        "service": "glue",
        "action": "GetExecutorsThreads",
        "iam_action": "glue:GetExecutorsThreads"
    },
    {
        "service": "glue",
        "action": "GetLogParsingStatus",
        "iam_action": "glue:GetLogParsingStatus"
    },
    {
        "service": "glue",
        "action": "GetNotebookInstanceStatus",
        "iam_action": "glue:GetNotebookInstanceStatus"
    },
    {
        "service": "glue",
        "action": "GetQueries",
        "iam_action": "glue:GetQueries"
    },
    {
        "service": "glue",
        "action": "GetQuery",
        "iam_action": "glue:GetQuery"
    },
    {
        "service": "glue",
        "action": "GetRecipeAction",
        "iam_action": "glue:GetRecipeAction"
    },
    {
        "service": "glue",
        "action": "GetStage",
        "iam_action": "glue:GetStage"
    },
    {
        "service": "glue",
        "action": "GetStageAttempt",
        "iam_action": "glue:GetStageAttempt"
    },
    {
        "service": "glue",
        "action": "GetStageAttemptTaskList",
        "iam_action": "glue:GetStageAttemptTaskList"
    },
    {
        "service": "glue",
        "action": "GetStageAttemptTaskSummary",
        "iam_action": "glue:GetStageAttemptTaskSummary"
    },
    {
        "service": "glue",
        "action": "GetStageFiles",
        "iam_action": "glue:GetStageFiles"
    },
    {
        "service": "glue",
        "action": "GetStages",
        "iam_action": "glue:GetStages"
    },
    {
        "service": "glue",
        "action": "GetStorage",
        "iam_action": "glue:GetStorage"
    },
    {
        "service": "glue",
        "action": "GetStorageUnit",
        "iam_action": "glue:GetStorageUnit"
    },
    {
        "service": "glue",
        "action": "GlueNotebookAuthorize",
        "iam_action": "glue:GlueNotebookAuthorize"
    },
    {
        "service": "glue",
        "action": "GlueNotebookRefreshCredentials",
        "iam_action": "glue:GlueNotebookRefreshCredentials"
    },
    {
        "service": "glue",
        "action": "ListConnectionTypes",
        "iam_action": "glue:ListConnectionTypes"
    },
    {
        "service": "glue",
        "action": "ListEntities",
        "iam_action": "glue:ListEntities"
    },
    {
        "service": "glue",
        "action": "PutResourcePolicy",
        "iam_action": "glue:PutResourcePolicy"
    },
    {
        "service": "glue",
        "action": "RefreshOAuth2Tokens",
        "iam_action": "glue:RefreshOAuth2Tokens"
    },
    {
        "service": "glue",
        "action": "RequestLogParsing",
        "iam_action": "glue:RequestLogParsing"
    },
    {
        "service": "glue",
        "action": "RunDataPreviewStatement",
        "iam_action": "glue:RunDataPreviewStatement"
    },
    {
        "service": "glue",
        "action": "SendRecipeAction",
        "iam_action": "glue:SendRecipeAction"
    },
    {
        "service": "glue",
        "action": "StartNotebook",
        "iam_action": "glue:StartNotebook"
    },
    {
        "service": "glue",
        "action": "TerminateNotebook",
        "iam_action": "glue:TerminateNotebook"
    },
    {
        "service": "glue",
        "action": "TestConnection",
        "iam_action": "glue:TestConnection"
    },
    {
        "service": "glue",
        "action": "UseGlueStudio",
        "iam_action": "glue:UseGlueStudio"
    },
    {
        "service": "grafana",
        "action": "UpdatePermissions",
        "iam_action": "grafana:UpdatePermissions"
    },
    {
        "service": "greengrass",
        "action": "AssociateServiceRoleToAccount",
        "iam_action": "greengrass:AssociateServiceRoleToAccount"
    },
    {
        "service": "health",
        "action": "DisableHealthServiceAccessForOrganization",
        "iam_action": "health:DisableHealthServiceAccessForOrganization"
    },
    {
        "service": "health",
        "action": "EnableHealthServiceAccessForOrganization",
        "iam_action": "health:EnableHealthServiceAccessForOrganization"
    },
    {
        "service": "iam",
        "action": "AttachGroupPolicy",
        "iam_action": "iam:AttachGroupPolicy"
    },
    {
        "service": "iam",
        "action": "AttachRolePolicy",
        "iam_action": "iam:AttachRolePolicy"
    },
    {
        "service": "iam",
        "action": "AttachUserPolicy",
        "iam_action": "iam:AttachUserPolicy"
    },
    {
        "service": "iam",
        "action": "CreatePolicy",
        "iam_action": "iam:CreatePolicy"
    },
    {
        "service": "iam",
        "action": "CreatePolicyVersion",
        "iam_action": "iam:CreatePolicyVersion"
    },
    {
        "service": "iam",
        "action": "DeleteAccountPasswordPolicy",
        "iam_action": "iam:DeleteAccountPasswordPolicy"
    },
    {
        "service": "iam",
        "action": "DeleteGroupPolicy",
        "iam_action": "iam:DeleteGroupPolicy"
    },
    {
        "service": "iam",
        "action": "DeletePolicy",
        "iam_action": "iam:DeletePolicy"
    },
    {
        "service": "iam",
        "action": "DeletePolicyVersion",
        "iam_action": "iam:DeletePolicyVersion"
    },
    {
        "service": "iam",
        "action": "DeleteRolePermissionsBoundary",
        "iam_action": "iam:DeleteRolePermissionsBoundary"
    },
    {
        "service": "iam",
        "action": "DeleteRolePolicy",
        "iam_action": "iam:DeleteRolePolicy"
    },
    {
        "service": "iam",
        "action": "DeleteUserPermissionsBoundary",
        "iam_action": "iam:DeleteUserPermissionsBoundary"
    },
    {
        "service": "iam",
        "action": "DeleteUserPolicy",
        "iam_action": "iam:DeleteUserPolicy"
    },
    {
        "service": "iam",
        "action": "DetachGroupPolicy",
        "iam_action": "iam:DetachGroupPolicy"
    },
    {
        "service": "iam",
        "action": "DetachRolePolicy",
        "iam_action": "iam:DetachRolePolicy"
    },
    {
        "service": "iam",
        "action": "DetachUserPolicy",
        "iam_action": "iam:DetachUserPolicy"
    },
    {
        "service": "iam",
        "action": "PutGroupPolicy",
        "iam_action": "iam:PutGroupPolicy"
    },
    {
        "service": "iam",
        "action": "PutRolePermissionsBoundary",
        "iam_action": "iam:PutRolePermissionsBoundary"
    },
    {
        "service": "iam",
        "action": "PutRolePolicy",
        "iam_action": "iam:PutRolePolicy"
    },
    {
        "service": "iam",
        "action": "PutUserPermissionsBoundary",
        "iam_action": "iam:PutUserPermissionsBoundary"
    },
    {
        "service": "iam",
        "action": "PutUserPolicy",
        "iam_action": "iam:PutUserPolicy"
    },
    {
        "service": "iam",
        "action": "SetDefaultPolicyVersion",
        "iam_action": "iam:SetDefaultPolicyVersion"
    },
    {
        "service": "iam",
        "action": "UpdateAssumeRolePolicy",
        "iam_action": "iam:UpdateAssumeRolePolicy"
    },
    {
        "service": "identity-sync",
        "action": "AllowVendedLogDeliveryForResource",
        "iam_action": "identity-sync:AllowVendedLogDeliveryForResource"
    },
    {
        "service": "imagebuilder",
        "action": "PutComponentPolicy",
        "iam_action": "imagebuilder:PutComponentPolicy"
    },
    {
        "service": "imagebuilder",
        "action": "PutContainerRecipePolicy",
        "iam_action": "imagebuilder:PutContainerRecipePolicy"
    },
    {
        "service": "imagebuilder",
        "action": "PutImagePolicy",
        "iam_action": "imagebuilder:PutImagePolicy"
    },
    {
        "service": "imagebuilder",
        "action": "PutImageRecipePolicy",
        "iam_action": "imagebuilder:PutImageRecipePolicy"
    },
    {
        "service": "iot",
        "action": "AttachPolicy",
        "iam_action": "iot:AttachPolicy"
    },
    {
        "service": "iot",
        "action": "AttachPrincipalPolicy",
        "iam_action": "iot:AttachPrincipalPolicy"
    },
    {
        "service": "iot",
        "action": "CreatePolicy",
        "iam_action": "iot:CreatePolicy"
    },
    {
        "service": "iot",
        "action": "CreatePolicyVersion",
        "iam_action": "iot:CreatePolicyVersion"
    },
    {
        "service": "iot",
        "action": "DeletePolicy",
        "iam_action": "iot:DeletePolicy"
    },
    {
        "service": "iot",
        "action": "DeletePolicyVersion",
        "iam_action": "iot:DeletePolicyVersion"
    },
    {
        "service": "iot",
        "action": "DetachPolicy",
        "iam_action": "iot:DetachPolicy"
    },
    {
        "service": "iot",
        "action": "DetachPrincipalPolicy",
        "iam_action": "iot:DetachPrincipalPolicy"
    },
    {
        "service": "iot",
        "action": "SetDefaultAuthorizer",
        "iam_action": "iot:SetDefaultAuthorizer"
    },
    {
        "service": "iot",
        "action": "SetDefaultPolicyVersion",
        "iam_action": "iot:SetDefaultPolicyVersion"
    },
    {
        "service": "iotfleetwise",
        "action": "GenerateCommandPayload",
        "iam_action": "iotfleetwise:GenerateCommandPayload"
    },
    {
        "service": "kms",
        "action": "CreateGrant",
        "iam_action": "kms:CreateGrant"
    },
    {
        "service": "kms",
        "action": "PutKeyPolicy",
        "iam_action": "kms:PutKeyPolicy"
    },
    {
        "service": "kms",
        "action": "RetireGrant",
        "iam_action": "kms:RetireGrant"
    },
    {
        "service": "kms",
        "action": "RevokeGrant",
        "iam_action": "kms:RevokeGrant"
    },
    {
        "service": "lakeformation",
        "action": "BatchGrantPermissions",
        "iam_action": "lakeformation:BatchGrantPermissions"
    },
    {
        "service": "lakeformation",
        "action": "BatchRevokePermissions",
        "iam_action": "lakeformation:BatchRevokePermissions"
    },
    {
        "service": "lakeformation",
        "action": "GrantPermissions",
        "iam_action": "lakeformation:GrantPermissions"
    },
    {
        "service": "lakeformation",
        "action": "PutDataLakeSettings",
        "iam_action": "lakeformation:PutDataLakeSettings"
    },
    {
        "service": "lakeformation",
        "action": "RevokePermissions",
        "iam_action": "lakeformation:RevokePermissions"
    },
    {
        "service": "lambda",
        "action": "AddLayerVersionPermission",
        "iam_action": "lambda:AddLayerVersionPermission"
    },
    {
        "service": "lambda",
        "action": "AddPermission",
        "iam_action": "lambda:AddPermission"
    },
    {
        "service": "lambda",
        "action": "DisableReplication",
        "iam_action": "lambda:DisableReplication"
    },
    {
        "service": "lambda",
        "action": "EnableReplication",
        "iam_action": "lambda:EnableReplication"
    },
    {
        "service": "lambda",
        "action": "RemoveLayerVersionPermission",
        "iam_action": "lambda:RemoveLayerVersionPermission"
    },
    {
        "service": "lambda",
        "action": "RemovePermission",
        "iam_action": "lambda:RemovePermission"
    },
    {
        "service": "license-manager",
        "action": "UpdateServiceSettings",
        "iam_action": "license-manager:UpdateServiceSettings"
    },
    {
        "service": "logs",
        "action": "DeleteResourcePolicy",
        "iam_action": "logs:DeleteResourcePolicy"
    },
    {
        "service": "logs",
        "action": "PutResourcePolicy",
        "iam_action": "logs:PutResourcePolicy"
    },
    {
        "service": "managedblockchain",
        "action": "GET",
        "iam_action": "managedblockchain:GET"
    },
    {
        "service": "managedblockchain",
        "action": "Invoke",
        "iam_action": "managedblockchain:Invoke"
    },
    {
        "service": "managedblockchain",
        "action": "POST",
        "iam_action": "managedblockchain:POST"
    },
    {
        "service": "mediastore",
        "action": "DeleteContainerPolicy",
        "iam_action": "mediastore:DeleteContainerPolicy"
    },
    {
        "service": "mediastore",
        "action": "PutContainerPolicy",
        "iam_action": "mediastore:PutContainerPolicy"
    },
    {
        "service": "mediatailor",
        "action": "DeleteChannelPolicy",
        "iam_action": "mediatailor:DeleteChannelPolicy"
    },
    {
        "service": "mediatailor",
        "action": "PutChannelPolicy",
        "iam_action": "mediatailor:PutChannelPolicy"
    },
    {
        "service": "monitron",
        "action": "AssociateProjectAdminUser",
        "iam_action": "monitron:AssociateProjectAdminUser"
    },
    {
        "service": "monitron",
        "action": "CreateProjectUserAssociation",
        "iam_action": "monitron:CreateProjectUserAssociation"
    },
    {
        "service": "monitron",
        "action": "CreateUserAccessRoleAssociation",
        "iam_action": "monitron:CreateUserAccessRoleAssociation"
    },
    {
        "service": "monitron",
        "action": "DeleteProjectUserAssociation",
        "iam_action": "monitron:DeleteProjectUserAssociation"
    },
    {
        "service": "monitron",
        "action": "DeleteUserAccessRoleAssociation",
        "iam_action": "monitron:DeleteUserAccessRoleAssociation"
    },
    {
        "service": "monitron",
        "action": "DisassociateProjectAdminUser",
        "iam_action": "monitron:DisassociateProjectAdminUser"
    },
    {
        "service": "monitron",
        "action": "ListProjectAdminUsers",
        "iam_action": "monitron:ListProjectAdminUsers"
    },
    {
        "service": "mpa",
        "action": "DeleteResourcePolicy",
        "iam_action": "mpa:DeleteResourcePolicy"
    },
    {
        "service": "mpa",
        "action": "PutResourcePolicy",
        "iam_action": "mpa:PutResourcePolicy"
    },
    {
        "service": "opensearch",
        "action": "ApplicationAccessAll",
        "iam_action": "opensearch:ApplicationAccessAll"
    },
    {
        "service": "opsworks",
        "action": "SetPermission",
        "iam_action": "opsworks:SetPermission"
    },
    {
        "service": "opsworks",
        "action": "UpdateUserProfile",
        "iam_action": "opsworks:UpdateUserProfile"
    },
    {
        "service": "qbusiness",
        "action": "AllowVendedLogDeliveryForResource",
        "iam_action": "qbusiness:AllowVendedLogDeliveryForResource"
    },
    {
        "service": "quicksight",
        "action": "DescribeDataSetPermissions",
        "iam_action": "quicksight:DescribeDataSetPermissions"
    },
    {
        "service": "quicksight",
        "action": "DescribeDataSourcePermissions",
        "iam_action": "quicksight:DescribeDataSourcePermissions"
    },
    {
        "service": "quicksight",
        "action": "DescribeTopicPermissions",
        "iam_action": "quicksight:DescribeTopicPermissions"
    },
    {
        "service": "quicksight",
        "action": "UpdateAnalysisPermissions",
        "iam_action": "quicksight:UpdateAnalysisPermissions"
    },
    {
        "service": "quicksight",
        "action": "UpdateDashboardPermissions",
        "iam_action": "quicksight:UpdateDashboardPermissions"
    },
    {
        "service": "quicksight",
        "action": "UpdateDataSetPermissions",
        "iam_action": "quicksight:UpdateDataSetPermissions"
    },
    {
        "service": "quicksight",
        "action": "UpdateDataSourcePermissions",
        "iam_action": "quicksight:UpdateDataSourcePermissions"
    },
    {
        "service": "quicksight",
        "action": "UpdateFolderPermissions",
        "iam_action": "quicksight:UpdateFolderPermissions"
    },
    {
        "service": "quicksight",
        "action": "UpdateTemplatePermissions",
        "iam_action": "quicksight:UpdateTemplatePermissions"
    },
    {
        "service": "quicksight",
        "action": "UpdateThemePermissions",
        "iam_action": "quicksight:UpdateThemePermissions"
    },
    {
        "service": "quicksight",
        "action": "UpdateTopicPermissions",
        "iam_action": "quicksight:UpdateTopicPermissions"
    },
    {
        "service": "ram",
        "action": "EnableSharingWithAwsOrganization",
        "iam_action": "ram:EnableSharingWithAwsOrganization"
    },
    {
        "service": "rds",
        "action": "AuthorizeDBSecurityGroupIngress",
        "iam_action": "rds:AuthorizeDBSecurityGroupIngress"
    },
    {
        "service": "rds-db",
        "action": "connect",
        "iam_action": "rds-db:connect"
    },
    {
        "service": "redshift",
        "action": "AuthorizeDataShare",
        "iam_action": "redshift:AuthorizeDataShare"
    },
    {
        "service": "redshift",
        "action": "AuthorizeEndpointAccess",
        "iam_action": "redshift:AuthorizeEndpointAccess"
    },
    {
        "service": "redshift",
        "action": "AuthorizeSnapshotAccess",
        "iam_action": "redshift:AuthorizeSnapshotAccess"
    },
    {
        "service": "redshift",
        "action": "CreateClusterUser",
        "iam_action": "redshift:CreateClusterUser"
    },
    {
        "service": "redshift",
        "action": "CreateSnapshotCopyGrant",
        "iam_action": "redshift:CreateSnapshotCopyGrant"
    },
    {
        "service": "redshift",
        "action": "DeauthorizeDataShare",
        "iam_action": "redshift:DeauthorizeDataShare"
    },
    {
        "service": "redshift",
        "action": "DeleteResourcePolicy",
        "iam_action": "redshift:DeleteResourcePolicy"
    },
    {
        "service": "redshift",
        "action": "JoinGroup",
        "iam_action": "redshift:JoinGroup"
    },
    {
        "service": "redshift",
        "action": "ModifyClusterIamRoles",
        "iam_action": "redshift:ModifyClusterIamRoles"
    },
    {
        "service": "redshift",
        "action": "PutResourcePolicy",
        "iam_action": "redshift:PutResourcePolicy"
    },
    {
        "service": "redshift",
        "action": "RejectDataShare",
        "iam_action": "redshift:RejectDataShare"
    },
    {
        "service": "redshift",
        "action": "RevokeEndpointAccess",
        "iam_action": "redshift:RevokeEndpointAccess"
    },
    {
        "service": "redshift",
        "action": "RevokeSnapshotAccess",
        "iam_action": "redshift:RevokeSnapshotAccess"
    },
    {
        "service": "resource-explorer-2",
        "action": "DeleteResourcePolicy",
        "iam_action": "resource-explorer-2:DeleteResourcePolicy"
    },
    {
        "service": "resource-explorer-2",
        "action": "PutResourcePolicy",
        "iam_action": "resource-explorer-2:PutResourcePolicy"
    },
    {
        "service": "route53resolver",
        "action": "PutFirewallRuleGroupPolicy",
        "iam_action": "route53resolver:PutFirewallRuleGroupPolicy"
    },
    {
        "service": "route53resolver",
        "action": "PutResolverQueryLogConfigPolicy",
        "iam_action": "route53resolver:PutResolverQueryLogConfigPolicy"
    },
    {
        "service": "route53resolver",
        "action": "PutResolverRulePolicy",
        "iam_action": "route53resolver:PutResolverRulePolicy"
    },
    {
        "service": "s3",
        "action": "AssociateAccessGrantsIdentityCenter",
        "iam_action": "s3:AssociateAccessGrantsIdentityCenter"
    },
    {
        "service": "s3",
        "action": "BypassGovernanceRetention",
        "iam_action": "s3:BypassGovernanceRetention"
    },
    {
        "service": "s3",
        "action": "CreateAccessGrant",
        "iam_action": "s3:CreateAccessGrant"
    },
    {
        "service": "s3",
        "action": "CreateAccessGrantsInstance",
        "iam_action": "s3:CreateAccessGrantsInstance"
    },
    {
        "service": "s3",
        "action": "CreateAccessGrantsLocation",
        "iam_action": "s3:CreateAccessGrantsLocation"
    },
    {
        "service": "s3",
        "action": "DeleteAccessGrant",
        "iam_action": "s3:DeleteAccessGrant"
    },
    {
        "service": "s3",
        "action": "DeleteAccessGrantsInstance",
        "iam_action": "s3:DeleteAccessGrantsInstance"
    },
    {
        "service": "s3",
        "action": "DeleteAccessGrantsInstanceResourcePolicy",
        "iam_action": "s3:DeleteAccessGrantsInstanceResourcePolicy"
    },
    {
        "service": "s3",
        "action": "DeleteAccessGrantsLocation",
        "iam_action": "s3:DeleteAccessGrantsLocation"
    },
    {
        "service": "s3",
        "action": "DeleteAccessPointPolicy",
        "iam_action": "s3:DeleteAccessPointPolicy"
    },
    {
        "service": "s3",
        "action": "DeleteAccessPointPolicyForObjectLambda",
        "iam_action": "s3:DeleteAccessPointPolicyForObjectLambda"
    },
    {
        "service": "s3",
        "action": "DeleteBucketPolicy",
        "iam_action": "s3:DeleteBucketPolicy"
    },
    {
        "service": "s3",
        "action": "DissociateAccessGrantsIdentityCenter",
        "iam_action": "s3:DissociateAccessGrantsIdentityCenter"
    },
    {
        "service": "s3",
        "action": "ObjectOwnerOverrideToBucketOwner",
        "iam_action": "s3:ObjectOwnerOverrideToBucketOwner"
    },
    {
        "service": "s3",
        "action": "PutAccessGrantsInstanceResourcePolicy",
        "iam_action": "s3:PutAccessGrantsInstanceResourcePolicy"
    },
    {
        "service": "s3",
        "action": "PutAccessPointPolicy",
        "iam_action": "s3:PutAccessPointPolicy"
    },
    {
        "service": "s3",
        "action": "PutAccessPointPolicyForObjectLambda",
        "iam_action": "s3:PutAccessPointPolicyForObjectLambda"
    },
    {
        "service": "s3",
        "action": "PutAccessPointPublicAccessBlock",
        "iam_action": "s3:PutAccessPointPublicAccessBlock"
    },
    {
        "service": "s3",
        "action": "PutAccountPublicAccessBlock",
        "iam_action": "s3:PutAccountPublicAccessBlock"
    },
    {
        "service": "s3",
        "action": "PutBucketAcl",
        "iam_action": "s3:PutBucketAcl"
    },
    {
        "service": "s3",
        "action": "PutBucketOwnershipControls",
        "iam_action": "s3:PutBucketOwnershipControls"
    },
    {
        "service": "s3",
        "action": "PutBucketPolicy",
        "iam_action": "s3:PutBucketPolicy"
    },
    {
        "service": "s3",
        "action": "PutBucketPublicAccessBlock",
        "iam_action": "s3:PutBucketPublicAccessBlock"
    },
    {
        "service": "s3",
        "action": "PutMultiRegionAccessPointPolicy",
        "iam_action": "s3:PutMultiRegionAccessPointPolicy"
    },
    {
        "service": "s3",
        "action": "PutObjectAcl",
        "iam_action": "s3:PutObjectAcl"
    },
    {
        "service": "s3",
        "action": "PutObjectVersionAcl",
        "iam_action": "s3:PutObjectVersionAcl"
    },
    {
        "service": "s3",
        "action": "UpdateAccessGrantsLocation",
        "iam_action": "s3:UpdateAccessGrantsLocation"
    },
    {
        "service": "s3-object-lambda",
        "action": "PutObjectAcl",
        "iam_action": "s3-object-lambda:PutObjectAcl"
    },
    {
        "service": "s3-object-lambda",
        "action": "PutObjectVersionAcl",
        "iam_action": "s3-object-lambda:PutObjectVersionAcl"
    },
    {
        "service": "s3-outposts",
        "action": "DeleteAccessPointPolicy",
        "iam_action": "s3-outposts:DeleteAccessPointPolicy"
    },
    {
        "service": "s3-outposts",
        "action": "DeleteBucketPolicy",
        "iam_action": "s3-outposts:DeleteBucketPolicy"
    },
    {
        "service": "s3-outposts",
        "action": "PutAccessPointPolicy",
        "iam_action": "s3-outposts:PutAccessPointPolicy"
    },
    {
        "service": "s3-outposts",
        "action": "PutBucketPolicy",
        "iam_action": "s3-outposts:PutBucketPolicy"
    },
    {
        "service": "s3-outposts",
        "action": "PutObjectAcl",
        "iam_action": "s3-outposts:PutObjectAcl"
    },
    {
        "service": "s3express",
        "action": "DeleteAccessPointPolicy",
        "iam_action": "s3express:DeleteAccessPointPolicy"
    },
    {
        "service": "s3express",
        "action": "DeleteAccessPointScope",
        "iam_action": "s3express:DeleteAccessPointScope"
    },
    {
        "service": "s3express",
        "action": "DeleteBucketPolicy",
        "iam_action": "s3express:DeleteBucketPolicy"
    },
    {
        "service": "s3express",
        "action": "PutAccessPointPolicy",
        "iam_action": "s3express:PutAccessPointPolicy"
    },
    {
        "service": "s3express",
        "action": "PutAccessPointScope",
        "iam_action": "s3express:PutAccessPointScope"
    },
    {
        "service": "s3express",
        "action": "PutBucketPolicy",
        "iam_action": "s3express:PutBucketPolicy"
    },
    {
        "service": "s3tables",
        "action": "DeleteTableBucketPolicy",
        "iam_action": "s3tables:DeleteTableBucketPolicy"
    },
    {
        "service": "s3tables",
        "action": "DeleteTablePolicy",
        "iam_action": "s3tables:DeleteTablePolicy"
    },
    {
        "service": "s3tables",
        "action": "PutTableBucketPolicy",
        "iam_action": "s3tables:PutTableBucketPolicy"
    },
    {
        "service": "s3tables",
        "action": "PutTablePolicy",
        "iam_action": "s3tables:PutTablePolicy"
    },
    {
        "service": "secretsmanager",
        "action": "DeleteResourcePolicy",
        "iam_action": "secretsmanager:DeleteResourcePolicy"
    },
    {
        "service": "secretsmanager",
        "action": "PutResourcePolicy",
        "iam_action": "secretsmanager:PutResourcePolicy"
    },
    {
        "service": "secretsmanager",
        "action": "ValidateResourcePolicy",
        "iam_action": "secretsmanager:ValidateResourcePolicy"
    },
    {
        "service": "servicecatalog",
        "action": "CreatePortfolioShare",
        "iam_action": "servicecatalog:CreatePortfolioShare"
    },
    {
        "service": "servicecatalog",
        "action": "DeletePortfolioShare",
        "iam_action": "servicecatalog:DeletePortfolioShare"
    },
    {
        "service": "servicecatalog",
        "action": "UpdatePortfolioShare",
        "iam_action": "servicecatalog:UpdatePortfolioShare"
    },
    {
        "service": "ses",
        "action": "AllowVendedLogDeliveryForResource",
        "iam_action": "ses:AllowVendedLogDeliveryForResource"
    },
    {
        "service": "ses",
        "action": "CreateEmailIdentityPolicy",
        "iam_action": "ses:CreateEmailIdentityPolicy"
    },
    {
        "service": "ses",
        "action": "DeleteEmailIdentityPolicy",
        "iam_action": "ses:DeleteEmailIdentityPolicy"
    },
    {
        "service": "ses",
        "action": "DeleteIdentityPolicy",
        "iam_action": "ses:DeleteIdentityPolicy"
    },
    {
        "service": "ses",
        "action": "PutIdentityPolicy",
        "iam_action": "ses:PutIdentityPolicy"
    },
    {
        "service": "ses",
        "action": "ReplicateEmailIdentityDkimSigningKey",
        "iam_action": "ses:ReplicateEmailIdentityDkimSigningKey"
    },
    {
        "service": "ses",
        "action": "UpdateEmailIdentityPolicy",
        "iam_action": "ses:UpdateEmailIdentityPolicy"
    },
    {
        "service": "signer",
        "action": "AddProfilePermission",
        "iam_action": "signer:AddProfilePermission"
    },
    {
        "service": "signer",
        "action": "RemoveProfilePermission",
        "iam_action": "signer:RemoveProfilePermission"
    },
    {
        "service": "sms-voice",
        "action": "DeleteResourcePolicy",
        "iam_action": "sms-voice:DeleteResourcePolicy"
    },
    {
        "service": "sms-voice",
        "action": "PutResourcePolicy",
        "iam_action": "sms-voice:PutResourcePolicy"
    },
    {
        "service": "sns",
        "action": "AddPermission",
        "iam_action": "sns:AddPermission"
    },
    {
        "service": "sns",
        "action": "RemovePermission",
        "iam_action": "sns:RemovePermission"
    },
    {
        "service": "sns",
        "action": "SetTopicAttributes",
        "iam_action": "sns:SetTopicAttributes"
    },
    {
        "service": "sqs",
        "action": "AddPermission",
        "iam_action": "sqs:AddPermission"
    },
    {
        "service": "sqs",
        "action": "RemovePermission",
        "iam_action": "sqs:RemovePermission"
    },
    {
        "service": "sqs",
        "action": "SetQueueAttributes",
        "iam_action": "sqs:SetQueueAttributes"
    },
    {
        "service": "ssm",
        "action": "DeleteResourcePolicy",
        "iam_action": "ssm:DeleteResourcePolicy"
    },
    {
        "service": "ssm",
        "action": "ModifyDocumentPermission",
        "iam_action": "ssm:ModifyDocumentPermission"
    },
    {
        "service": "ssm",
        "action": "PutResourcePolicy",
        "iam_action": "ssm:PutResourcePolicy"
    },
    {
        "service": "ssm-contacts",
        "action": "AssociateContact",
        "iam_action": "ssm-contacts:AssociateContact"
    },
    {
        "service": "ssm-incidents",
        "action": "DeleteResourcePolicy",
        "iam_action": "ssm-incidents:DeleteResourcePolicy"
    },
    {
        "service": "ssm-incidents",
        "action": "PutResourcePolicy",
        "iam_action": "ssm-incidents:PutResourcePolicy"
    },
    {
        "service": "sso",
        "action": "AttachCustomerManagedPolicyReferenceToPermissionSet",
        "iam_action": "sso:AttachCustomerManagedPolicyReferenceToPermissionSet"
    },
    {
        "service": "sso",
        "action": "AttachManagedPolicyToPermissionSet",
        "iam_action": "sso:AttachManagedPolicyToPermissionSet"
    },
    {
        "service": "sso",
        "action": "DeletePermissionsBoundaryFromPermissionSet",
        "iam_action": "sso:DeletePermissionsBoundaryFromPermissionSet"
    },
    {
        "service": "sso",
        "action": "DeletePermissionsPolicy",
        "iam_action": "sso:DeletePermissionsPolicy"
    },
    {
        "service": "sso",
        "action": "DetachCustomerManagedPolicyReferenceFromPermissionSet",
        "iam_action": "sso:DetachCustomerManagedPolicyReferenceFromPermissionSet"
    },
    {
        "service": "sso",
        "action": "DetachManagedPolicyFromPermissionSet",
        "iam_action": "sso:DetachManagedPolicyFromPermissionSet"
    },
    {
        "service": "sso",
        "action": "PutPermissionsBoundaryToPermissionSet",
        "iam_action": "sso:PutPermissionsBoundaryToPermissionSet"
    },
    {
        "service": "sso",
        "action": "PutPermissionsPolicy",
        "iam_action": "sso:PutPermissionsPolicy"
    },
    {
        "service": "sso",
        "action": "UpdatePermissionSet",
        "iam_action": "sso:UpdatePermissionSet"
    },
    {
        "service": "vpc-lattice",
        "action": "AssociateViaAWSService",
        "iam_action": "vpc-lattice:AssociateViaAWSService"
    },
    {
        "service": "vpc-lattice",
        "action": "AssociateViaAWSService-EventsAndStates",
        "iam_action": "vpc-lattice:AssociateViaAWSService-EventsAndStates"
    },
    {
        "service": "vpc-lattice",
        "action": "CreateServiceNetworkVpcEndpointAssociation",
        "iam_action": "vpc-lattice:CreateServiceNetworkVpcEndpointAssociation"
    },
    {
        "service": "vpc-lattice",
        "action": "DeleteAuthPolicy",
        "iam_action": "vpc-lattice:DeleteAuthPolicy"
    },
    {
        "service": "vpc-lattice",
        "action": "PutAuthPolicy",
        "iam_action": "vpc-lattice:PutAuthPolicy"
    },
    {
        "service": "waf",
        "action": "CreateWebACL",
        "iam_action": "waf:CreateWebACL"
    },
    {
        "service": "waf",
        "action": "DeletePermissionPolicy",
        "iam_action": "waf:DeletePermissionPolicy"
    },
    {
        "service": "waf",
        "action": "DeleteWebACL",
        "iam_action": "waf:DeleteWebACL"
    },
    {
        "service": "waf",
        "action": "PutPermissionPolicy",
        "iam_action": "waf:PutPermissionPolicy"
    },
    {
        "service": "waf",
        "action": "UpdateWebACL",
        "iam_action": "waf:UpdateWebACL"
    },
    {
        "service": "waf-regional",
        "action": "CreateWebACL",
        "iam_action": "waf-regional:CreateWebACL"
    },
    {
        "service": "waf-regional",
        "action": "DeletePermissionPolicy",
        "iam_action": "waf-regional:DeletePermissionPolicy"
    },
    {
        "service": "waf-regional",
        "action": "DeleteWebACL",
        "iam_action": "waf-regional:DeleteWebACL"
    },
    {
        "service": "waf-regional",
        "action": "PutPermissionPolicy",
        "iam_action": "waf-regional:PutPermissionPolicy"
    },
    {
        "service": "waf-regional",
        "action": "UpdateWebACL",
        "iam_action": "waf-regional:UpdateWebACL"
    },
    {
        "service": "wafv2",
        "action": "DeletePermissionPolicy",
        "iam_action": "wafv2:DeletePermissionPolicy"
    },
    {
        "service": "wafv2",
        "action": "PutPermissionPolicy",
        "iam_action": "wafv2:PutPermissionPolicy"
    },
    {
        "service": "wisdom",
        "action": "AllowVendedLogDeliveryForResource",
        "iam_action": "wisdom:AllowVendedLogDeliveryForResource"
    },
    {
        "service": "workspaces",
        "action": "ModifySelfservicePermissions",
        "iam_action": "workspaces:ModifySelfservicePermissions"
    },
    {
        "service": "workspaces",
        "action": "UpdateConnectionAliasPermission",
        "iam_action": "workspaces:UpdateConnectionAliasPermission"
    },
    {
        "service": "workspaces",
        "action": "UpdateWorkspaceImagePermission",
        "iam_action": "workspaces:UpdateWorkspaceImagePermission"
    },
    {
        "service": "xray",
        "action": "PutEncryptionConfig",
        "iam_action": "xray:PutEncryptionConfig"
    }
]