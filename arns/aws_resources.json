[
    {
        "service": "AWS Account Management",
        "resource": "account",
        "prefix": "account",
        "arn": "arn:${Partition}:account::${Account}:account"
    },
    {
        "service": "AWS Account Management",
        "resource": "accountInOrganization",
        "prefix": "account",
        "arn": "arn:${Partition}:account::${ManagementAccountId}:account/o-${OrganizationId}/${MemberAccountId}"
    },
    {
        "service": "Amazon AI Operations",
        "resource": "investigation-group",
        "prefix": "aiops",
        "arn": "arn:${Partition}:aiops:${Region}:${Account}:investigation-group/${InvestigationGroupId}"
    },
    {
        "service": "Alexa for Business",
        "resource": "profile",
        "prefix": "a4b",
        "arn": "arn:${Partition}:a4b:${Region}:${Account}:profile/${ResourceId}"
    },
    {
        "service": "Alexa for Business",
        "resource": "room",
        "prefix": "a4b",
        "arn": "arn:${Partition}:a4b:${Region}:${Account}:room/${ResourceId}"
    },
    {
        "service": "Alexa for Business",
        "resource": "device",
        "prefix": "a4b",
        "arn": "arn:${Partition}:a4b:${Region}:${Account}:device/${ResourceId}"
    },
    {
        "service": "Alexa for Business",
        "resource": "skillgroup",
        "prefix": "a4b",
        "arn": "arn:${Partition}:a4b:${Region}:${Account}:skill-group/${ResourceId}"
    },
    {
        "service": "Alexa for Business",
        "resource": "user",
        "prefix": "a4b",
        "arn": "arn:${Partition}:a4b:${Region}:${Account}:user/${ResourceId}"
    },
    {
        "service": "Alexa for Business",
        "resource": "addressbook",
        "prefix": "a4b",
        "arn": "arn:${Partition}:a4b:${Region}:${Account}:address-book/${ResourceId}"
    },
    {
        "service": "Alexa for Business",
        "resource": "conferenceprovider",
        "prefix": "a4b",
        "arn": "arn:${Partition}:a4b:${Region}:${Account}:conference-provider/${ResourceId}"
    },
    {
        "service": "Alexa for Business",
        "resource": "contact",
        "prefix": "a4b",
        "arn": "arn:${Partition}:a4b:${Region}:${Account}:contact/${ResourceId}"
    },
    {
        "service": "Alexa for Business",
        "resource": "schedule",
        "prefix": "a4b",
        "arn": "arn:${Partition}:a4b:${Region}:${Account}:schedule/${ResourceId}"
    },
    {
        "service": "Alexa for Business",
        "resource": "networkprofile",
        "prefix": "a4b",
        "arn": "arn:${Partition}:a4b:${Region}:${Account}:network-profile/${ResourceId}"
    },
    {
        "service": "Alexa for Business",
        "resource": "gateway",
        "prefix": "a4b",
        "arn": "arn:${Partition}:a4b:${Region}:${Account}:gateway/${ResourceId}"
    },
    {
        "service": "Alexa for Business",
        "resource": "gatewaygroup",
        "prefix": "a4b",
        "arn": "arn:${Partition}:a4b:${Region}:${Account}:gateway-group/${ResourceId}"
    },
    {
        "service": "AWS Amplify",
        "resource": "apps",
        "prefix": "amplify",
        "arn": "arn:${Partition}:amplify:${Region}:${Account}:apps/${AppId}"
    },
    {
        "service": "AWS Amplify",
        "resource": "branches",
        "prefix": "amplify",
        "arn": "arn:${Partition}:amplify:${Region}:${Account}:apps/${AppId}/branches/${BranchName}"
    },
    {
        "service": "AWS Amplify",
        "resource": "jobs",
        "prefix": "amplify",
        "arn": "arn:${Partition}:amplify:${Region}:${Account}:apps/${AppId}/branches/${BranchName}/jobs/${JobId}"
    },
    {
        "service": "AWS Amplify",
        "resource": "domains",
        "prefix": "amplify",
        "arn": "arn:${Partition}:amplify:${Region}:${Account}:apps/${AppId}/domains/${DomainName}"
    },
    {
        "service": "AWS Amplify",
        "resource": "webhooks",
        "prefix": "amplify",
        "arn": "arn:${Partition}:amplify:${Region}:${Account}:webhooks/${WebhookId}"
    },
    {
        "service": "AWS Amplify Admin",
        "resource": "created-backend",
        "prefix": "amplifybackend",
        "arn": "arn:${Partition}:amplifybackend:${Region}:${Account}:/backend/*"
    },
    {
        "service": "AWS Amplify Admin",
        "resource": "backend",
        "prefix": "amplifybackend",
        "arn": "arn:${Partition}:amplifybackend:${Region}:${Account}:/backend/${AppId}/*"
    },
    {
        "service": "AWS Amplify Admin",
        "resource": "environment",
        "prefix": "amplifybackend",
        "arn": "arn:${Partition}:amplifybackend:${Region}:${Account}:/backend/${AppId}/environments/*"
    },
    {
        "service": "AWS Amplify Admin",
        "resource": "api",
        "prefix": "amplifybackend",
        "arn": "arn:${Partition}:amplifybackend:${Region}:${Account}:/backend/${AppId}/api/*"
    },
    {
        "service": "AWS Amplify Admin",
        "resource": "auth",
        "prefix": "amplifybackend",
        "arn": "arn:${Partition}:amplifybackend:${Region}:${Account}:/backend/${AppId}/auth/*"
    },
    {
        "service": "AWS Amplify Admin",
        "resource": "job",
        "prefix": "amplifybackend",
        "arn": "arn:${Partition}:amplifybackend:${Region}:${Account}:/backend/${AppId}/job/*"
    },
    {
        "service": "AWS Amplify Admin",
        "resource": "config",
        "prefix": "amplifybackend",
        "arn": "arn:${Partition}:amplifybackend:${Region}:${Account}:/backend/${AppId}/config/*"
    },
    {
        "service": "AWS Amplify Admin",
        "resource": "token",
        "prefix": "amplifybackend",
        "arn": "arn:${Partition}:amplifybackend:${Region}:${Account}:/backend/${AppId}/challenge/*"
    },
    {
        "service": "AWS Amplify Admin",
        "resource": "storage",
        "prefix": "amplifybackend",
        "arn": "arn:${Partition}:amplifybackend:${Region}:${Account}:/backend/${AppId}/storage/*"
    },
    {
        "service": "AWS Amplify UI Builder",
        "resource": "CodegenJobResource",
        "prefix": "amplifyuibuilder",
        "arn": "arn:${Partition}:amplifyuibuilder:${Region}:${Account}:app/${AppId}/environment/${EnvironmentName}/codegen-jobs/${Id}"
    },
    {
        "service": "AWS Amplify UI Builder",
        "resource": "ComponentResource",
        "prefix": "amplifyuibuilder",
        "arn": "arn:${Partition}:amplifyuibuilder:${Region}:${Account}:app/${AppId}/environment/${EnvironmentName}/components/${Id}"
    },
    {
        "service": "AWS Amplify UI Builder",
        "resource": "FormResource",
        "prefix": "amplifyuibuilder",
        "arn": "arn:${Partition}:amplifyuibuilder:${Region}:${Account}:app/${AppId}/environment/${EnvironmentName}/forms/${Id}"
    },
    {
        "service": "AWS Amplify UI Builder",
        "resource": "ThemeResource",
        "prefix": "amplifyuibuilder",
        "arn": "arn:${Partition}:amplifyuibuilder:${Region}:${Account}:app/${AppId}/environment/${EnvironmentName}/themes/${Id}"
    },
    {
        "service": "Amazon API Gateway",
        "resource": "execute-api-general",
        "prefix": "execute-api",
        "arn": "arn:${Partition}:execute-api:${Region}:${Account}:${ApiId}/${Stage}/${Method}/${ApiSpecificResourcePath}"
    },
    {
        "service": "Amazon API Gateway",
        "resource": "execute-api-domain",
        "prefix": "execute-api",
        "arn": "arn:${Partition}:execute-api:${Region}:${Account}:/domainnames/${DomainName}+${DomainIdentifier}"
    },
    {
        "service": "Amazon API Gateway Management",
        "resource": "Account",
        "prefix": "apigateway",
        "arn": "arn:${Partition}:apigateway:${Region}::/account"
    },
    {
        "service": "Amazon API Gateway Management",
        "resource": "ApiKey",
        "prefix": "apigateway",
        "arn": "arn:${Partition}:apigateway:${Region}::/apikeys/${ApiKeyId}"
    },
    {
        "service": "Amazon API Gateway Management",
        "resource": "ApiKeys",
        "prefix": "apigateway",
        "arn": "arn:${Partition}:apigateway:${Region}::/apikeys"
    },
    {
        "service": "Amazon API Gateway Management",
        "resource": "Authorizer",
        "prefix": "apigateway",
        "arn": "arn:${Partition}:apigateway:${Region}::/restapis/${RestApiId}/authorizers/${AuthorizerId}"
    },
    {
        "service": "Amazon API Gateway Management",
        "resource": "Authorizers",
        "prefix": "apigateway",
        "arn": "arn:${Partition}:apigateway:${Region}::/restapis/${RestApiId}/authorizers"
    },
    {
        "service": "Amazon API Gateway Management",
        "resource": "BasePathMapping",
        "prefix": "apigateway",
        "arn": "arn:${Partition}:apigateway:${Region}::/domainnames/${DomainName}/basepathmappings/${BasePath}"
    },
    {
        "service": "Amazon API Gateway Management",
        "resource": "BasePathMappings",
        "prefix": "apigateway",
        "arn": "arn:${Partition}:apigateway:${Region}::/domainnames/${DomainName}/basepathmappings"
    },
    {
        "service": "Amazon API Gateway Management",
        "resource": "ClientCertificate",
        "prefix": "apigateway",
        "arn": "arn:${Partition}:apigateway:${Region}::/clientcertificates/${ClientCertificateId}"
    },
    {
        "service": "Amazon API Gateway Management",
        "resource": "ClientCertificates",
        "prefix": "apigateway",
        "arn": "arn:${Partition}:apigateway:${Region}::/clientcertificates"
    },
    {
        "service": "Amazon API Gateway Management",
        "resource": "Deployment",
        "prefix": "apigateway",
        "arn": "arn:${Partition}:apigateway:${Region}::/restapis/${RestApiId}/deployments/${DeploymentId}"
    },
    {
        "service": "Amazon API Gateway Management",
        "resource": "Deployments",
        "prefix": "apigateway",
        "arn": "arn:${Partition}:apigateway:${Region}::/restapis/${RestApiId}/deployments"
    },
    {
        "service": "Amazon API Gateway Management",
        "resource": "DocumentationPart",
        "prefix": "apigateway",
        "arn": "arn:${Partition}:apigateway:${Region}::/restapis/${RestApiId}/documentation/parts/${DocumentationPartId}"
    },
    {
        "service": "Amazon API Gateway Management",
        "resource": "DocumentationParts",
        "prefix": "apigateway",
        "arn": "arn:${Partition}:apigateway:${Region}::/restapis/${RestApiId}/documentation/parts"
    },
    {
        "service": "Amazon API Gateway Management",
        "resource": "DocumentationVersion",
        "prefix": "apigateway",
        "arn": "arn:${Partition}:apigateway:${Region}::/restapis/${RestApiId}/documentation/versions/${DocumentationVersionId}"
    },
    {
        "service": "Amazon API Gateway Management",
        "resource": "DocumentationVersions",
        "prefix": "apigateway",
        "arn": "arn:${Partition}:apigateway:${Region}::/restapis/${RestApiId}/documentation/versions"
    },
    {
        "service": "Amazon API Gateway Management",
        "resource": "DomainName",
        "prefix": "apigateway",
        "arn": "arn:${Partition}:apigateway:${Region}::/domainnames/${DomainName}"
    },
    {
        "service": "Amazon API Gateway Management",
        "resource": "DomainNames",
        "prefix": "apigateway",
        "arn": "arn:${Partition}:apigateway:${Region}::/domainnames"
    },
    {
        "service": "Amazon API Gateway Management",
        "resource": "DomainNameAccessAssociation",
        "prefix": "apigateway",
        "arn": "arn:${Partition}:apigateway:${Region}:${Account}:/domainnameaccessassociations/domainname/${DomainName}/${SourceType}/${SourceId}"
    },
    {
        "service": "Amazon API Gateway Management",
        "resource": "DomainNameAccessAssociations",
        "prefix": "apigateway",
        "arn": "arn:${Partition}:apigateway:${Region}:${Account}:/domainnameaccessassociations"
    },
    {
        "service": "Amazon API Gateway Management",
        "resource": "GatewayResponse",
        "prefix": "apigateway",
        "arn": "arn:${Partition}:apigateway:${Region}::/restapis/${RestApiId}/gatewayresponses/${ResponseType}"
    },
    {
        "service": "Amazon API Gateway Management",
        "resource": "GatewayResponses",
        "prefix": "apigateway",
        "arn": "arn:${Partition}:apigateway:${Region}::/restapis/${RestApiId}/gatewayresponses"
    },
    {
        "service": "Amazon API Gateway Management",
        "resource": "Integration",
        "prefix": "apigateway",
        "arn": "arn:${Partition}:apigateway:${Region}::/restapis/${RestApiId}/resources/${ResourceId}/methods/${HttpMethodType}/integration"
    },
    {
        "service": "Amazon API Gateway Management",
        "resource": "IntegrationResponse",
        "prefix": "apigateway",
        "arn": "arn:${Partition}:apigateway:${Region}::/restapis/${RestApiId}/resources/${ResourceId}/methods/${HttpMethodType}/integration/responses/${StatusCode}"
    },
    {
        "service": "Amazon API Gateway Management",
        "resource": "Method",
        "prefix": "apigateway",
        "arn": "arn:${Partition}:apigateway:${Region}::/restapis/${RestApiId}/resources/${ResourceId}/methods/${HttpMethodType}"
    },
    {
        "service": "Amazon API Gateway Management",
        "resource": "MethodResponse",
        "prefix": "apigateway",
        "arn": "arn:${Partition}:apigateway:${Region}::/restapis/${RestApiId}/resources/${ResourceId}/methods/${HttpMethodType}/responses/${StatusCode}"
    },
    {
        "service": "Amazon API Gateway Management",
        "resource": "Model",
        "prefix": "apigateway",
        "arn": "arn:${Partition}:apigateway:${Region}::/restapis/${RestApiId}/models/${ModelName}"
    },
    {
        "service": "Amazon API Gateway Management",
        "resource": "Models",
        "prefix": "apigateway",
        "arn": "arn:${Partition}:apigateway:${Region}::/restapis/${RestApiId}/models"
    },
    {
        "service": "Amazon API Gateway Management",
        "resource": "PrivateBasePathMapping",
        "prefix": "apigateway",
        "arn": "arn:${Partition}:apigateway:${Region}::/domainnames/${DomainName}+${DomainIdentifier}/basepathmappings/${BasePath}"
    },
    {
        "service": "Amazon API Gateway Management",
        "resource": "PrivateBasePathMappings",
        "prefix": "apigateway",
        "arn": "arn:${Partition}:apigateway:${Region}::/domainnames/${DomainName}+${DomainIdentifier}/basepathmappings"
    },
    {
        "service": "Amazon API Gateway Management",
        "resource": "PrivateDomainName",
        "prefix": "apigateway",
        "arn": "arn:${Partition}:apigateway:${Region}:${Account}:/domainnames/${DomainName}+${DomainIdentifier}"
    },
    {
        "service": "Amazon API Gateway Management",
        "resource": "RequestValidator",
        "prefix": "apigateway",
        "arn": "arn:${Partition}:apigateway:${Region}::/restapis/${RestApiId}/requestvalidators/${RequestValidatorId}"
    },
    {
        "service": "Amazon API Gateway Management",
        "resource": "RequestValidators",
        "prefix": "apigateway",
        "arn": "arn:${Partition}:apigateway:${Region}::/restapis/${RestApiId}/requestvalidators"
    },
    {
        "service": "Amazon API Gateway Management",
        "resource": "Resource",
        "prefix": "apigateway",
        "arn": "arn:${Partition}:apigateway:${Region}::/restapis/${RestApiId}/resources/${ResourceId}"
    },
    {
        "service": "Amazon API Gateway Management",
        "resource": "Resources",
        "prefix": "apigateway",
        "arn": "arn:${Partition}:apigateway:${Region}::/restapis/${RestApiId}/resources"
    },
    {
        "service": "Amazon API Gateway Management",
        "resource": "RestApi",
        "prefix": "apigateway",
        "arn": "arn:${Partition}:apigateway:${Region}::/restapis/${RestApiId}"
    },
    {
        "service": "Amazon API Gateway Management",
        "resource": "RestApis",
        "prefix": "apigateway",
        "arn": "arn:${Partition}:apigateway:${Region}::/restapis"
    },
    {
        "service": "Amazon API Gateway Management",
        "resource": "Sdk",
        "prefix": "apigateway",
        "arn": "arn:${Partition}:apigateway:${Region}::/restapis/${RestApiId}/stages/${StageName}/sdks/${SdkType}"
    },
    {
        "service": "Amazon API Gateway Management",
        "resource": "Stage",
        "prefix": "apigateway",
        "arn": "arn:${Partition}:apigateway:${Region}::/restapis/${RestApiId}/stages/${StageName}"
    },
    {
        "service": "Amazon API Gateway Management",
        "resource": "Stages",
        "prefix": "apigateway",
        "arn": "arn:${Partition}:apigateway:${Region}::/restapis/${RestApiId}/stages"
    },
    {
        "service": "Amazon API Gateway Management",
        "resource": "Template",
        "prefix": "apigateway",
        "arn": "arn:${Partition}:apigateway:${Region}::/restapis/models/${ModelName}/template"
    },
    {
        "service": "Amazon API Gateway Management",
        "resource": "UsagePlan",
        "prefix": "apigateway",
        "arn": "arn:${Partition}:apigateway:${Region}::/usageplans/${UsagePlanId}"
    },
    {
        "service": "Amazon API Gateway Management",
        "resource": "UsagePlans",
        "prefix": "apigateway",
        "arn": "arn:${Partition}:apigateway:${Region}::/usageplans"
    },
    {
        "service": "Amazon API Gateway Management",
        "resource": "UsagePlanKey",
        "prefix": "apigateway",
        "arn": "arn:${Partition}:apigateway:${Region}::/usageplans/${UsagePlanId}/keys/${Id}"
    },
    {
        "service": "Amazon API Gateway Management",
        "resource": "UsagePlanKeys",
        "prefix": "apigateway",
        "arn": "arn:${Partition}:apigateway:${Region}::/usageplans/${UsagePlanId}/keys"
    },
    {
        "service": "Amazon API Gateway Management",
        "resource": "VpcLink",
        "prefix": "apigateway",
        "arn": "arn:${Partition}:apigateway:${Region}::/vpclinks/${VpcLinkId}"
    },
    {
        "service": "Amazon API Gateway Management",
        "resource": "VpcLinks",
        "prefix": "apigateway",
        "arn": "arn:${Partition}:apigateway:${Region}::/vpclinks"
    },
    {
        "service": "Amazon API Gateway Management",
        "resource": "Tags",
        "prefix": "apigateway",
        "arn": "arn:${Partition}:apigateway:${Region}::/tags/${UrlEncodedResourceARN}"
    },
    {
        "service": "Amazon API Gateway Management V2",
        "resource": "AccessLogSettings",
        "prefix": "apigateway",
        "arn": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/stages/${StageName}/accesslogsettings"
    },
    {
        "service": "Amazon API Gateway Management V2",
        "resource": "Api",
        "prefix": "apigateway",
        "arn": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}"
    },
    {
        "service": "Amazon API Gateway Management V2",
        "resource": "Apis",
        "prefix": "apigateway",
        "arn": "arn:${Partition}:apigateway:${Region}::/apis"
    },
    {
        "service": "Amazon API Gateway Management V2",
        "resource": "ApiMapping",
        "prefix": "apigateway",
        "arn": "arn:${Partition}:apigateway:${Region}::/domainnames/${DomainName}/apimappings/${ApiMappingId}"
    },
    {
        "service": "Amazon API Gateway Management V2",
        "resource": "ApiMappings",
        "prefix": "apigateway",
        "arn": "arn:${Partition}:apigateway:${Region}::/domainnames/${DomainName}/apimappings"
    },
    {
        "service": "Amazon API Gateway Management V2",
        "resource": "Authorizer",
        "prefix": "apigateway",
        "arn": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/authorizers/${AuthorizerId}"
    },
    {
        "service": "Amazon API Gateway Management V2",
        "resource": "Authorizers",
        "prefix": "apigateway",
        "arn": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/authorizers"
    },
    {
        "service": "Amazon API Gateway Management V2",
        "resource": "AuthorizersCache",
        "prefix": "apigateway",
        "arn": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/stages/${StageName}/cache/authorizers"
    },
    {
        "service": "Amazon API Gateway Management V2",
        "resource": "Cors",
        "prefix": "apigateway",
        "arn": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/cors"
    },
    {
        "service": "Amazon API Gateway Management V2",
        "resource": "Deployment",
        "prefix": "apigateway",
        "arn": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/deployments/${DeploymentId}"
    },
    {
        "service": "Amazon API Gateway Management V2",
        "resource": "Deployments",
        "prefix": "apigateway",
        "arn": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/deployments"
    },
    {
        "service": "Amazon API Gateway Management V2",
        "resource": "ExportedAPI",
        "prefix": "apigateway",
        "arn": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/exports/${Specification}"
    },
    {
        "service": "Amazon API Gateway Management V2",
        "resource": "Integration",
        "prefix": "apigateway",
        "arn": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/integrations/${IntegrationId}"
    },
    {
        "service": "Amazon API Gateway Management V2",
        "resource": "Integrations",
        "prefix": "apigateway",
        "arn": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/integrations"
    },
    {
        "service": "Amazon API Gateway Management V2",
        "resource": "IntegrationResponse",
        "prefix": "apigateway",
        "arn": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/integrations/${IntegrationId}/integrationresponses/${IntegrationResponseId}"
    },
    {
        "service": "Amazon API Gateway Management V2",
        "resource": "IntegrationResponses",
        "prefix": "apigateway",
        "arn": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/integrations/${IntegrationId}/integrationresponses"
    },
    {
        "service": "Amazon API Gateway Management V2",
        "resource": "Model",
        "prefix": "apigateway",
        "arn": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/models/${ModelId}"
    },
    {
        "service": "Amazon API Gateway Management V2",
        "resource": "Models",
        "prefix": "apigateway",
        "arn": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/models"
    },
    {
        "service": "Amazon API Gateway Management V2",
        "resource": "ModelTemplate",
        "prefix": "apigateway",
        "arn": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/models/${ModelId}/template"
    },
    {
        "service": "Amazon API Gateway Management V2",
        "resource": "Route",
        "prefix": "apigateway",
        "arn": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/routes/${RouteId}"
    },
    {
        "service": "Amazon API Gateway Management V2",
        "resource": "Routes",
        "prefix": "apigateway",
        "arn": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/routes"
    },
    {
        "service": "Amazon API Gateway Management V2",
        "resource": "RouteResponse",
        "prefix": "apigateway",
        "arn": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/routes/${RouteId}/routeresponses/${RouteResponseId}"
    },
    {
        "service": "Amazon API Gateway Management V2",
        "resource": "RouteResponses",
        "prefix": "apigateway",
        "arn": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/routes/${RouteId}/routeresponses"
    },
    {
        "service": "Amazon API Gateway Management V2",
        "resource": "RouteRequestParameter",
        "prefix": "apigateway",
        "arn": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/routes/${RouteId}/requestparameters/${RequestParameterKey}"
    },
    {
        "service": "Amazon API Gateway Management V2",
        "resource": "RouteSettings",
        "prefix": "apigateway",
        "arn": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/stages/${StageName}/routesettings/${RouteKey}"
    },
    {
        "service": "Amazon API Gateway Management V2",
        "resource": "Stage",
        "prefix": "apigateway",
        "arn": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/stages/${StageName}"
    },
    {
        "service": "Amazon API Gateway Management V2",
        "resource": "Stages",
        "prefix": "apigateway",
        "arn": "arn:${Partition}:apigateway:${Region}::/apis/${ApiId}/stages"
    },
    {
        "service": "AWS App Mesh",
        "resource": "mesh",
        "prefix": "appmesh",
        "arn": "arn:${Partition}:appmesh:${Region}:${Account}:mesh/${MeshName}"
    },
    {
        "service": "AWS App Mesh",
        "resource": "virtualService",
        "prefix": "appmesh",
        "arn": "arn:${Partition}:appmesh:${Region}:${Account}:mesh/${MeshName}/virtualService/${VirtualServiceName}"
    },
    {
        "service": "AWS App Mesh",
        "resource": "virtualNode",
        "prefix": "appmesh",
        "arn": "arn:${Partition}:appmesh:${Region}:${Account}:mesh/${MeshName}/virtualNode/${VirtualNodeName}"
    },
    {
        "service": "AWS App Mesh",
        "resource": "virtualRouter",
        "prefix": "appmesh",
        "arn": "arn:${Partition}:appmesh:${Region}:${Account}:mesh/${MeshName}/virtualRouter/${VirtualRouterName}"
    },
    {
        "service": "AWS App Mesh",
        "resource": "route",
        "prefix": "appmesh",
        "arn": "arn:${Partition}:appmesh:${Region}:${Account}:mesh/${MeshName}/virtualRouter/${VirtualRouterName}/route/${RouteName}"
    },
    {
        "service": "AWS App Mesh",
        "resource": "virtualGateway",
        "prefix": "appmesh",
        "arn": "arn:${Partition}:appmesh:${Region}:${Account}:mesh/${MeshName}/virtualGateway/${VirtualGatewayName}"
    },
    {
        "service": "AWS App Mesh",
        "resource": "gatewayRoute",
        "prefix": "appmesh",
        "arn": "arn:${Partition}:appmesh:${Region}:${Account}:mesh/${MeshName}/virtualGateway/${VirtualGatewayName}/gatewayRoute/${GatewayRouteName}"
    },
    {
        "service": "AWS App Mesh Preview",
        "resource": "mesh",
        "prefix": "appmesh-preview",
        "arn": "arn:${Partition}:appmesh-preview:${Region}:${Account}:mesh/${MeshName}"
    },
    {
        "service": "AWS App Mesh Preview",
        "resource": "virtualService",
        "prefix": "appmesh-preview",
        "arn": "arn:${Partition}:appmesh-preview:${Region}:${Account}:mesh/${MeshName}/virtualService/${VirtualServiceName}"
    },
    {
        "service": "AWS App Mesh Preview",
        "resource": "virtualNode",
        "prefix": "appmesh-preview",
        "arn": "arn:${Partition}:appmesh-preview:${Region}:${Account}:mesh/${MeshName}/virtualNode/${VirtualNodeName}"
    },
    {
        "service": "AWS App Mesh Preview",
        "resource": "virtualRouter",
        "prefix": "appmesh-preview",
        "arn": "arn:${Partition}:appmesh-preview:${Region}:${Account}:mesh/${MeshName}/virtualRouter/${VirtualRouterName}"
    },
    {
        "service": "AWS App Mesh Preview",
        "resource": "route",
        "prefix": "appmesh-preview",
        "arn": "arn:${Partition}:appmesh-preview:${Region}:${Account}:mesh/${MeshName}/virtualRouter/${VirtualRouterName}/route/${RouteName}"
    },
    {
        "service": "AWS App Mesh Preview",
        "resource": "virtualGateway",
        "prefix": "appmesh-preview",
        "arn": "arn:${Partition}:appmesh-preview:${Region}:${Account}:mesh/${MeshName}/virtualGateway/${VirtualGatewayName}"
    },
    {
        "service": "AWS App Mesh Preview",
        "resource": "gatewayRoute",
        "prefix": "appmesh-preview",
        "arn": "arn:${Partition}:appmesh-preview:${Region}:${Account}:mesh/${MeshName}/virtualGateway/${VirtualGatewayName}/gatewayRoute/${GatewayRouteName}"
    },
    {
        "service": "AWS App Runner",
        "resource": "service",
        "prefix": "apprunner",
        "arn": "arn:${Partition}:apprunner:${Region}:${Account}:service/${ServiceName}/${ServiceId}"
    },
    {
        "service": "AWS App Runner",
        "resource": "connection",
        "prefix": "apprunner",
        "arn": "arn:${Partition}:apprunner:${Region}:${Account}:connection/${ConnectionName}/${ConnectionId}"
    },
    {
        "service": "AWS App Runner",
        "resource": "autoscalingconfiguration",
        "prefix": "apprunner",
        "arn": "arn:${Partition}:apprunner:${Region}:${Account}:autoscalingconfiguration/${AutoscalingConfigurationName}/${AutoscalingConfigurationVersion}/${AutoscalingConfigurationId}"
    },
    {
        "service": "AWS App Runner",
        "resource": "observabilityconfiguration",
        "prefix": "apprunner",
        "arn": "arn:${Partition}:apprunner:${Region}:${Account}:observabilityconfiguration/${ObservabilityConfigurationName}/${ObservabilityConfigurationVersion}/${ObservabilityConfigurationId}"
    },
    {
        "service": "AWS App Runner",
        "resource": "vpcconnector",
        "prefix": "apprunner",
        "arn": "arn:${Partition}:apprunner:${Region}:${Account}:vpcconnector/${VpcConnectorName}/${VpcConnectorVersion}/${VpcConnectorId}"
    },
    {
        "service": "AWS App Runner",
        "resource": "vpcingressconnection",
        "prefix": "apprunner",
        "arn": "arn:${Partition}:apprunner:${Region}:${Account}:vpcingressconnection/${VpcIngressConnectionName}/${VpcIngressConnectionId}"
    },
    {
        "service": "AWS App Studio",
        "resource": "instance",
        "prefix": "appstudio",
        "arn": "arn:${Partition}:appstudio:${Region}:${Account}:instance/${InstanceId}"
    },
    {
        "service": "AWS App Studio",
        "resource": "application",
        "prefix": "appstudio",
        "arn": "arn:${Partition}:appstudio:${Region}:${Account}:application/${ApplicationId}"
    },
    {
        "service": "AWS App Studio",
        "resource": "connector",
        "prefix": "appstudio",
        "arn": "arn:${Partition}:appstudio:${Region}:${Account}:connector/${ConnectionId}"
    },
    {
        "service": "AWS AppConfig",
        "resource": "application",
        "prefix": "appconfig",
        "arn": "arn:${Partition}:appconfig:${Region}:${Account}:application/${ApplicationId}"
    },
    {
        "service": "AWS AppConfig",
        "resource": "environment",
        "prefix": "appconfig",
        "arn": "arn:${Partition}:appconfig:${Region}:${Account}:application/${ApplicationId}/environment/${EnvironmentId}"
    },
    {
        "service": "AWS AppConfig",
        "resource": "configurationprofile",
        "prefix": "appconfig",
        "arn": "arn:${Partition}:appconfig:${Region}:${Account}:application/${ApplicationId}/configurationprofile/${ConfigurationProfileId}"
    },
    {
        "service": "AWS AppConfig",
        "resource": "deploymentstrategy",
        "prefix": "appconfig",
        "arn": "arn:${Partition}:appconfig:${Region}:${Account}:deploymentstrategy/${DeploymentStrategyId}"
    },
    {
        "service": "AWS AppConfig",
        "resource": "deployment",
        "prefix": "appconfig",
        "arn": "arn:${Partition}:appconfig:${Region}:${Account}:application/${ApplicationId}/environment/${EnvironmentId}/deployment/${DeploymentNumber}"
    },
    {
        "service": "AWS AppConfig",
        "resource": "hostedconfigurationversion",
        "prefix": "appconfig",
        "arn": "arn:${Partition}:appconfig:${Region}:${Account}:application/${ApplicationId}/configurationprofile/${ConfigurationProfileId}/hostedconfigurationversion/${VersionNumber}"
    },
    {
        "service": "AWS AppConfig",
        "resource": "configuration",
        "prefix": "appconfig",
        "arn": "arn:${Partition}:appconfig:${Region}:${Account}:application/${ApplicationId}/environment/${EnvironmentId}/configuration/${ConfigurationProfileId}"
    },
    {
        "service": "AWS AppConfig",
        "resource": "extension",
        "prefix": "appconfig",
        "arn": "arn:${Partition}:appconfig:${Region}:${Account}:extension/${ExtensionId}/${ExtensionVersionNumber}"
    },
    {
        "service": "AWS AppConfig",
        "resource": "extensionassociation",
        "prefix": "appconfig",
        "arn": "arn:${Partition}:appconfig:${Region}:${Account}:extensionassociation/${ExtensionAssociationId}"
    },
    {
        "service": "AWS AppFabric",
        "resource": "appbundle",
        "prefix": "appfabric",
        "arn": "arn:${Partition}:appfabric:${Region}:${Account}:appbundle/${AppBundleIdentifier}"
    },
    {
        "service": "AWS AppFabric",
        "resource": "appauthorization",
        "prefix": "appfabric",
        "arn": "arn:${Partition}:appfabric:${Region}:${Account}:appbundle/${AppbundleId}/appauthorization/${AppAuthorizationIdentifier}"
    },
    {
        "service": "AWS AppFabric",
        "resource": "ingestion",
        "prefix": "appfabric",
        "arn": "arn:${Partition}:appfabric:${Region}:${Account}:appbundle/${AppbundleId}/ingestion/${IngestionIdentifier}"
    },
    {
        "service": "AWS AppFabric",
        "resource": "ingestiondestination",
        "prefix": "appfabric",
        "arn": "arn:${Partition}:appfabric:${Region}:${Account}:appbundle/${AppbundleId}/ingestion/${IngestionIdentifier}/ingestiondestination/${IngestionDestinationIdentifier}"
    },
    {
        "service": "Amazon AppFlow",
        "resource": "connectorprofile",
        "prefix": "appflow",
        "arn": "arn:${Partition}:appflow:${Region}:${Account}:connectorprofile/${ProfileName}"
    },
    {
        "service": "Amazon AppFlow",
        "resource": "flow",
        "prefix": "appflow",
        "arn": "arn:${Partition}:appflow:${Region}:${Account}:flow/${FlowName}"
    },
    {
        "service": "Amazon AppFlow",
        "resource": "connector",
        "prefix": "appflow",
        "arn": "arn:${Partition}:appflow:${Region}:${Account}:connector/${ConnectorLabel}"
    },
    {
        "service": "Amazon AppIntegrations",
        "resource": "event-integration",
        "prefix": "app-integrations",
        "arn": "arn:${Partition}:app-integrations:${Region}:${Account}:event-integration/${EventIntegrationName}"
    },
    {
        "service": "Amazon AppIntegrations",
        "resource": "event-integration-association",
        "prefix": "app-integrations",
        "arn": "arn:${Partition}:app-integrations:${Region}:${Account}:event-integration-association/${EventIntegrationName}/${ResourceId}"
    },
    {
        "service": "Amazon AppIntegrations",
        "resource": "data-integration",
        "prefix": "app-integrations",
        "arn": "arn:${Partition}:app-integrations:${Region}:${Account}:data-integration/${DataIntegrationId}"
    },
    {
        "service": "Amazon AppIntegrations",
        "resource": "data-integration-association",
        "prefix": "app-integrations",
        "arn": "arn:${Partition}:app-integrations:${Region}:${Account}:data-integration-association/${DataIntegrationId}/${ResourceId}"
    },
    {
        "service": "Amazon AppIntegrations",
        "resource": "application",
        "prefix": "app-integrations",
        "arn": "arn:${Partition}:app-integrations:${Region}:${Account}:application/${ApplicationId}"
    },
    {
        "service": "Amazon AppIntegrations",
        "resource": "application-association",
        "prefix": "app-integrations",
        "arn": "arn:${Partition}:app-integrations:${Region}:${Account}:application-association/${ApplicationId}/${ApplicationAssociationId}"
    },
    {
        "service": "AWS Application Auto Scaling",
        "resource": "ScalableTarget",
        "prefix": "application-autoscaling",
        "arn": "arn:${Partition}:application-autoscaling:${Region}:${Account}:scalable-target/${ResourceId}"
    },
    {
        "service": "AWS Application Migration Service",
        "resource": "JobResource",
        "prefix": "mgn",
        "arn": "arn:${Partition}:mgn:${Region}:${Account}:job/${JobID}"
    },
    {
        "service": "AWS Application Migration Service",
        "resource": "ReplicationConfigurationTemplateResource",
        "prefix": "mgn",
        "arn": "arn:${Partition}:mgn:${Region}:${Account}:replication-configuration-template/${ReplicationConfigurationTemplateID}"
    },
    {
        "service": "AWS Application Migration Service",
        "resource": "LaunchConfigurationTemplateResource",
        "prefix": "mgn",
        "arn": "arn:${Partition}:mgn:${Region}:${Account}:launch-configuration-template/${LaunchConfigurationTemplateID}"
    },
    {
        "service": "AWS Application Migration Service",
        "resource": "VcenterClientResource",
        "prefix": "mgn",
        "arn": "arn:${Partition}:mgn:${Region}:${Account}:vcenter-client/${VcenterClientID}"
    },
    {
        "service": "AWS Application Migration Service",
        "resource": "SourceServerResource",
        "prefix": "mgn",
        "arn": "arn:${Partition}:mgn:${Region}:${Account}:source-server/${SourceServerID}"
    },
    {
        "service": "AWS Application Migration Service",
        "resource": "ApplicationResource",
        "prefix": "mgn",
        "arn": "arn:${Partition}:mgn:${Region}:${Account}:application/${ApplicationID}"
    },
    {
        "service": "AWS Application Migration Service",
        "resource": "WaveResource",
        "prefix": "mgn",
        "arn": "arn:${Partition}:mgn:${Region}:${Account}:wave/${WaveID}"
    },
    {
        "service": "AWS Application Migration Service",
        "resource": "ImportResource",
        "prefix": "mgn",
        "arn": "arn:${Partition}:mgn:${Region}:${Account}:import/${ImportID}"
    },
    {
        "service": "AWS Application Migration Service",
        "resource": "ExportResource",
        "prefix": "mgn",
        "arn": "arn:${Partition}:mgn:${Region}:${Account}:export/${ExportID}"
    },
    {
        "service": "AWS Application Migration Service",
        "resource": "ConnectorResource",
        "prefix": "mgn",
        "arn": "arn:${Partition}:mgn:${Region}:${Account}:connector/${ConnectorID}"
    },
    {
        "service": "AWS Application Migration Service",
        "resource": "NetworkMigrationDefinitionResource",
        "prefix": "mgn",
        "arn": "arn:${Partition}:mgn:${Region}:${Account}:network-migration-definition/${NetworkMigrationDefinitionID}"
    },
    {
        "service": "Amazon AppStream 2.0",
        "resource": "fleet",
        "prefix": "appstream",
        "arn": "arn:${Partition}:appstream:${Region}:${Account}:fleet/${FleetName}"
    },
    {
        "service": "Amazon AppStream 2.0",
        "resource": "image",
        "prefix": "appstream",
        "arn": "arn:${Partition}:appstream:${Region}:${Account}:image/${ImageName}"
    },
    {
        "service": "Amazon AppStream 2.0",
        "resource": "image-builder",
        "prefix": "appstream",
        "arn": "arn:${Partition}:appstream:${Region}:${Account}:image-builder/${ImageBuilderName}"
    },
    {
        "service": "Amazon AppStream 2.0",
        "resource": "stack",
        "prefix": "appstream",
        "arn": "arn:${Partition}:appstream:${Region}:${Account}:stack/${StackName}"
    },
    {
        "service": "Amazon AppStream 2.0",
        "resource": "app-block",
        "prefix": "appstream",
        "arn": "arn:${Partition}:appstream:${Region}:${Account}:app-block/${AppBlockName}"
    },
    {
        "service": "Amazon AppStream 2.0",
        "resource": "application",
        "prefix": "appstream",
        "arn": "arn:${Partition}:appstream:${Region}:${Account}:application/${ApplicationName}"
    },
    {
        "service": "Amazon AppStream 2.0",
        "resource": "app-block-builder",
        "prefix": "appstream",
        "arn": "arn:${Partition}:appstream:${Region}:${Account}:app-block-builder/${AppBlockBuilderName}"
    },
    {
        "service": "AWS AppSync",
        "resource": "datasource",
        "prefix": "appsync",
        "arn": "arn:${Partition}:appsync:${Region}:${Account}:apis/${GraphQLAPIId}/datasources/${DatasourceName}"
    },
    {
        "service": "AWS AppSync",
        "resource": "domain",
        "prefix": "appsync",
        "arn": "arn:${Partition}:appsync:${Region}:${Account}:domainnames/${DomainName}"
    },
    {
        "service": "AWS AppSync",
        "resource": "graphqlapi",
        "prefix": "appsync",
        "arn": "arn:${Partition}:appsync:${Region}:${Account}:apis/${GraphQLAPIId}"
    },
    {
        "service": "AWS AppSync",
        "resource": "field",
        "prefix": "appsync",
        "arn": "arn:${Partition}:appsync:${Region}:${Account}:apis/${GraphQLAPIId}/types/${TypeName}/fields/${FieldName}"
    },
    {
        "service": "AWS AppSync",
        "resource": "type",
        "prefix": "appsync",
        "arn": "arn:${Partition}:appsync:${Region}:${Account}:apis/${GraphQLAPIId}/types/${TypeName}"
    },
    {
        "service": "AWS AppSync",
        "resource": "function",
        "prefix": "appsync",
        "arn": "arn:${Partition}:appsync:${Region}:${Account}:apis/${GraphQLAPIId}/functions/${FunctionId}"
    },
    {
        "service": "AWS AppSync",
        "resource": "sourceApiAssociation",
        "prefix": "appsync",
        "arn": "arn:${Partition}:appsync:${Region}:${Account}:apis/${MergedGraphQLAPIId}/sourceApiAssociations/${Associationid}"
    },
    {
        "service": "AWS AppSync",
        "resource": "mergedApiAssociation",
        "prefix": "appsync",
        "arn": "arn:${Partition}:appsync:${Region}:${Account}:apis/${SourceGraphQLAPIId}/mergedApiAssociations/${Associationid}"
    },
    {
        "service": "AWS AppSync",
        "resource": "api",
        "prefix": "appsync",
        "arn": "arn:${Partition}:appsync:${Region}:${Account}:apis/${ApiId}"
    },
    {
        "service": "AWS AppSync",
        "resource": "channelNamespace",
        "prefix": "appsync",
        "arn": "arn:${Partition}:appsync:${Region}:${Account}:apis/${ApiId}/channelNamespace/${ChannelNamespaceName}"
    },
    {
        "service": "AWS Artifact",
        "resource": "report-package",
        "prefix": "artifact",
        "arn": "arn:${Partition}:artifact:::report-package/*"
    },
    {
        "service": "AWS Artifact",
        "resource": "customer-agreement",
        "prefix": "artifact",
        "arn": "arn:${Partition}:artifact::${Account}:customer-agreement/*"
    },
    {
        "service": "AWS Artifact",
        "resource": "agreement",
        "prefix": "artifact",
        "arn": "arn:${Partition}:artifact:::agreement/*"
    },
    {
        "service": "AWS Artifact",
        "resource": "report",
        "prefix": "artifact",
        "arn": "arn:${Partition}:artifact:${Region}::report/${ReportId}:${Version}"
    },
    {
        "service": "Amazon Athena",
        "resource": "datacatalog",
        "prefix": "athena",
        "arn": "arn:${Partition}:athena:${Region}:${Account}:datacatalog/${DataCatalogName}"
    },
    {
        "service": "Amazon Athena",
        "resource": "workgroup",
        "prefix": "athena",
        "arn": "arn:${Partition}:athena:${Region}:${Account}:workgroup/${WorkGroupName}"
    },
    {
        "service": "Amazon Athena",
        "resource": "capacity-reservation",
        "prefix": "athena",
        "arn": "arn:${Partition}:athena:${Region}:${Account}:capacity-reservation/${CapacityReservationName}"
    },
    {
        "service": "AWS Audit Manager",
        "resource": "assessment",
        "prefix": "auditmanager",
        "arn": "arn:${Partition}:auditmanager:${Region}:${Account}:assessment/${AssessmentId}"
    },
    {
        "service": "AWS Audit Manager",
        "resource": "assessmentFramework",
        "prefix": "auditmanager",
        "arn": "arn:${Partition}:auditmanager:${Region}:${Account}:assessmentFramework/${AssessmentFrameworkId}"
    },
    {
        "service": "AWS Audit Manager",
        "resource": "assessmentControlSet",
        "prefix": "auditmanager",
        "arn": "arn:${Partition}:auditmanager:${Region}:${Account}:assessment/${AssessmentId}/controlSet/${ControlSetId}"
    },
    {
        "service": "AWS Audit Manager",
        "resource": "control",
        "prefix": "auditmanager",
        "arn": "arn:${Partition}:auditmanager:${Region}:${Account}:control/${ControlId}"
    },
    {
        "service": "Amazon Aurora DSQL",
        "resource": "Cluster",
        "prefix": "dsql",
        "arn": "arn:${Partition}:dsql:${Region}:${Account}:cluster/${Identifier}"
    },
    {
        "service": "AWS B2B Data Interchange",
        "resource": "profile",
        "prefix": "b2bi",
        "arn": "arn:${Partition}:b2bi:${Region}:${Account}:profile/${ResourceId}"
    },
    {
        "service": "AWS B2B Data Interchange",
        "resource": "capability",
        "prefix": "b2bi",
        "arn": "arn:${Partition}:b2bi:${Region}:${Account}:capability/${ResourceId}"
    },
    {
        "service": "AWS B2B Data Interchange",
        "resource": "partnership",
        "prefix": "b2bi",
        "arn": "arn:${Partition}:b2bi:${Region}:${Account}:partnership/${ResourceId}"
    },
    {
        "service": "AWS B2B Data Interchange",
        "resource": "transformer",
        "prefix": "b2bi",
        "arn": "arn:${Partition}:b2bi:${Region}:${Account}:transformer/${ResourceId}"
    },
    {
        "service": "AWS Backup",
        "resource": "backupVault",
        "prefix": "backup",
        "arn": "arn:${Partition}:backup:${Region}:${Account}:backup-vault:${BackupVaultName}"
    },
    {
        "service": "AWS Backup",
        "resource": "backupPlan",
        "prefix": "backup",
        "arn": "arn:${Partition}:backup:${Region}:${Account}:backup-plan:${BackupPlanId}"
    },
    {
        "service": "AWS Backup",
        "resource": "framework",
        "prefix": "backup",
        "arn": "arn:${Partition}:backup:${Region}:${Account}:framework:${FrameworkName}-${FrameworkId}"
    },
    {
        "service": "AWS Backup",
        "resource": "reportPlan",
        "prefix": "backup",
        "arn": "arn:${Partition}:backup:${Region}:${Account}:report-plan:${ReportPlanName}-${ReportPlanId}"
    },
    {
        "service": "AWS Backup",
        "resource": "legalHold",
        "prefix": "backup",
        "arn": "arn:${Partition}:backup:${Region}:${Account}:legal-hold:${LegalHoldId}"
    },
    {
        "service": "AWS Backup",
        "resource": "restoreTestingPlan",
        "prefix": "backup",
        "arn": "arn:${Partition}:backup:${Region}:${Account}:restore-testing-plan:${RestoreTestingPlanName}-${RestoreTestingPlanId}"
    },
    {
        "service": "AWS Backup Gateway",
        "resource": "gateway",
        "prefix": "backup-gateway",
        "arn": "arn:${Partition}:backup-gateway:${Region}:${Account}:gateway/${GatewayId}"
    },
    {
        "service": "AWS Backup Gateway",
        "resource": "hypervisor",
        "prefix": "backup-gateway",
        "arn": "arn:${Partition}:backup-gateway:${Region}:${Account}:hypervisor/${HypervisorId}"
    },
    {
        "service": "AWS Backup Gateway",
        "resource": "virtualmachine",
        "prefix": "backup-gateway",
        "arn": "arn:${Partition}:backup-gateway:${Region}:${Account}:vm/${VirtualmachineId}"
    },
    {
        "service": "AWS Backup Search",
        "resource": "searchJob",
        "prefix": "backup-search",
        "arn": "arn:${Partition}:backup-search:${Region}:${Account}:search-job/${ResourceId}"
    },
    {
        "service": "AWS Backup Search",
        "resource": "searchExportJob",
        "prefix": "backup-search",
        "arn": "arn:${Partition}:backup-search:${Region}:${Account}:search-export-job/${ResourceId}"
    },
    {
        "service": "AWS Batch",
        "resource": "compute-environment",
        "prefix": "batch",
        "arn": "arn:${Partition}:batch:${Region}:${Account}:compute-environment/${ComputeEnvironmentName}"
    },
    {
        "service": "AWS Batch",
        "resource": "job-queue",
        "prefix": "batch",
        "arn": "arn:${Partition}:batch:${Region}:${Account}:job-queue/${JobQueueName}"
    },
    {
        "service": "AWS Batch",
        "resource": "job-definition",
        "prefix": "batch",
        "arn": "arn:${Partition}:batch:${Region}:${Account}:job-definition/${JobDefinitionName}"
    },
    {
        "service": "AWS Batch",
        "resource": "job-definition-revision",
        "prefix": "batch",
        "arn": "arn:${Partition}:batch:${Region}:${Account}:job-definition/${JobDefinitionName}:${Revision}"
    },
    {
        "service": "AWS Batch",
        "resource": "job",
        "prefix": "batch",
        "arn": "arn:${Partition}:batch:${Region}:${Account}:job/${JobId}"
    },
    {
        "service": "AWS Batch",
        "resource": "scheduling-policy",
        "prefix": "batch",
        "arn": "arn:${Partition}:batch:${Region}:${Account}:scheduling-policy/${SchedulingPolicyName}"
    },
    {
        "service": "AWS Batch",
        "resource": "consumable-resource",
        "prefix": "batch",
        "arn": "arn:${Partition}:batch:${Region}:${Account}:consumable-resource/${ConsumableResourceName}"
    },
    {
        "service": "Amazon Bedrock",
        "resource": "foundation-model",
        "prefix": "bedrock",
        "arn": "arn:${Partition}:bedrock:${Region}::foundation-model/${ResourceId}"
    },
    {
        "service": "Amazon Bedrock",
        "resource": "async-invoke",
        "prefix": "bedrock",
        "arn": "arn:${Partition}:bedrock:${Region}:${Account}:async-invoke/${ResourceId}"
    },
    {
        "service": "Amazon Bedrock",
        "resource": "inference-profile",
        "prefix": "bedrock",
        "arn": "arn:${Partition}:bedrock:${Region}:${Account}:inference-profile/${ResourceId}"
    },
    {
        "service": "Amazon Bedrock",
        "resource": "default-prompt-router",
        "prefix": "bedrock",
        "arn": "arn:${Partition}:bedrock:${Region}:${Account}:default-prompt-router/${ResourceId}"
    },
    {
        "service": "Amazon Bedrock",
        "resource": "prompt-router",
        "prefix": "bedrock",
        "arn": "arn:${Partition}:bedrock:${Region}:${Account}:prompt-router/${ResourceId}"
    },
    {
        "service": "Amazon Bedrock",
        "resource": "application-inference-profile",
        "prefix": "bedrock",
        "arn": "arn:${Partition}:bedrock:${Region}:${Account}:application-inference-profile/${ResourceId}"
    },
    {
        "service": "Amazon Bedrock",
        "resource": "custom-model",
        "prefix": "bedrock",
        "arn": "arn:${Partition}:bedrock:${Region}:${Account}:custom-model/${ResourceId}"
    },
    {
        "service": "Amazon Bedrock",
        "resource": "provisioned-model",
        "prefix": "bedrock",
        "arn": "arn:${Partition}:bedrock:${Region}:${Account}:provisioned-model/${ResourceId}"
    },
    {
        "service": "Amazon Bedrock",
        "resource": "model-customization-job",
        "prefix": "bedrock",
        "arn": "arn:${Partition}:bedrock:${Region}:${Account}:model-customization-job/${ResourceId}"
    },
    {
        "service": "Amazon Bedrock",
        "resource": "agent",
        "prefix": "bedrock",
        "arn": "arn:${Partition}:bedrock:${Region}:${Account}:agent/${AgentId}"
    },
    {
        "service": "Amazon Bedrock",
        "resource": "agent-alias",
        "prefix": "bedrock",
        "arn": "arn:${Partition}:bedrock:${Region}:${Account}:agent-alias/${AgentId}/${AgentAliasId}"
    },
    {
        "service": "Amazon Bedrock",
        "resource": "knowledge-base",
        "prefix": "bedrock",
        "arn": "arn:${Partition}:bedrock:${Region}:${Account}:knowledge-base/${KnowledgeBaseId}"
    },
    {
        "service": "Amazon Bedrock",
        "resource": "model-evaluation-job",
        "prefix": "bedrock",
        "arn": "arn:${Partition}:bedrock:${Region}:${Account}:model-evaluation-job/${ResourceId}"
    },
    {
        "service": "Amazon Bedrock",
        "resource": "evaluation-job",
        "prefix": "bedrock",
        "arn": "arn:${Partition}:bedrock:${Region}:${Account}:evaluation-job/${ResourceId}"
    },
    {
        "service": "Amazon Bedrock",
        "resource": "model-invocation-job",
        "prefix": "bedrock",
        "arn": "arn:${Partition}:bedrock:${Region}:${Account}:model-invocation-job/${JobIdentifier}"
    },
    {
        "service": "Amazon Bedrock",
        "resource": "guardrail",
        "prefix": "bedrock",
        "arn": "arn:${Partition}:bedrock:${Region}:${Account}:guardrail/${GuardrailId}"
    },
    {
        "service": "Amazon Bedrock",
        "resource": "guardrail-profile",
        "prefix": "bedrock",
        "arn": "arn:${Partition}:bedrock:${Region}:${Account}:guardrail-profile/${ResourceId}"
    },
    {
        "service": "Amazon Bedrock",
        "resource": "flow",
        "prefix": "bedrock",
        "arn": "arn:${Partition}:bedrock:${Region}:${Account}:flow/${FlowId}"
    },
    {
        "service": "Amazon Bedrock",
        "resource": "flow-alias",
        "prefix": "bedrock",
        "arn": "arn:${Partition}:bedrock:${Region}:${Account}:flow/${FlowId}/alias/${FlowAliasId}"
    },
    {
        "service": "Amazon Bedrock",
        "resource": "flow-execution",
        "prefix": "bedrock",
        "arn": "arn:${Partition}:bedrock:${Region}:${Account}:flow/${FlowId}/alias/${FlowAliasId}/execution/${FlowExecutionId}"
    },
    {
        "service": "Amazon Bedrock",
        "resource": "model-copy-job",
        "prefix": "bedrock",
        "arn": "arn:${Partition}:bedrock:${Region}:${Account}:model-copy-job/${ResourceId}"
    },
    {
        "service": "Amazon Bedrock",
        "resource": "prompt",
        "prefix": "bedrock",
        "arn": "arn:${Partition}:bedrock:${Region}:${Account}:prompt/${PromptId}"
    },
    {
        "service": "Amazon Bedrock",
        "resource": "prompt-version",
        "prefix": "bedrock",
        "arn": "arn:${Partition}:bedrock:${Region}:${Account}:prompt/${PromptId}:${PromptVersion}"
    },
    {
        "service": "Amazon Bedrock",
        "resource": "model-import-job",
        "prefix": "bedrock",
        "arn": "arn:${Partition}:bedrock:${Region}:${Account}:model-import-job/${ResourceId}"
    },
    {
        "service": "Amazon Bedrock",
        "resource": "imported-model",
        "prefix": "bedrock",
        "arn": "arn:${Partition}:bedrock:${Region}:${Account}:imported-model/${ResourceId}"
    },
    {
        "service": "Amazon Bedrock",
        "resource": "bedrock-marketplace-model-endpoint",
        "prefix": "bedrock",
        "arn": "arn:${Partition}:bedrock:${Region}:${Account}:marketplace/model-endpoint/all-access"
    },
    {
        "service": "Amazon Bedrock",
        "resource": "data-automation-project",
        "prefix": "bedrock",
        "arn": "arn:${Partition}:bedrock:${Region}:${Account}:data-automation-project/${ProjectId}"
    },
    {
        "service": "Amazon Bedrock",
        "resource": "blueprint",
        "prefix": "bedrock",
        "arn": "arn:${Partition}:bedrock:${Region}:${Account}:blueprint/${BlueprintId}"
    },
    {
        "service": "Amazon Bedrock",
        "resource": "data-automation-invocation-job",
        "prefix": "bedrock",
        "arn": "arn:${Partition}:bedrock:${Region}:${Account}:data-automation-invocation/${JobId}"
    },
    {
        "service": "Amazon Bedrock",
        "resource": "data-automation-profile",
        "prefix": "bedrock",
        "arn": "arn:${Partition}:bedrock:${Region}:${Account}:data-automation-profile/${ProfileId}"
    },
    {
        "service": "Amazon Bedrock",
        "resource": "session",
        "prefix": "bedrock",
        "arn": "arn:${Partition}:bedrock:${Region}:${Account}:session/${SessionId}"
    },
    {
        "service": "AWS Billing",
        "resource": "billingview",
        "prefix": "billing",
        "arn": "arn:${Partition}:billing::${Account}:billingview/${ResourceId}"
    },
    {
        "service": "AWS Billing And Cost Management Data Exports",
        "resource": "export",
        "prefix": "bcm-data-exports",
        "arn": "arn:${Partition}:bcm-data-exports:${Region}:${Account}:export/${Identifier}"
    },
    {
        "service": "AWS Billing And Cost Management Data Exports",
        "resource": "table",
        "prefix": "bcm-data-exports",
        "arn": "arn:${Partition}:bcm-data-exports:${Region}:${Account}:table/${Identifier}"
    },
    {
        "service": "AWS Billing And Cost Management Pricing Calculator",
        "resource": "bill-estimate",
        "prefix": "bcm-pricing-calculator",
        "arn": "arn:${Partition}:bcm-pricing-calculator:${Region}:${Account}:bill-estimate/${BillEstimateId}"
    },
    {
        "service": "AWS Billing And Cost Management Pricing Calculator",
        "resource": "bill-scenario",
        "prefix": "bcm-pricing-calculator",
        "arn": "arn:${Partition}:bcm-pricing-calculator:${Region}:${Account}:bill-scenario/${BillScenarioId}"
    },
    {
        "service": "AWS Billing And Cost Management Pricing Calculator",
        "resource": "workload-estimate",
        "prefix": "bcm-pricing-calculator",
        "arn": "arn:${Partition}:bcm-pricing-calculator:${Region}:${Account}:workload-estimate/${WorkloadEstimateId}"
    },
    {
        "service": "AWS Billing Conductor",
        "resource": "billinggroup",
        "prefix": "billingconductor",
        "arn": "arn:${Partition}:billingconductor::${Account}:billinggroup/${BillingGroupId}"
    },
    {
        "service": "AWS Billing Conductor",
        "resource": "pricingplan",
        "prefix": "billingconductor",
        "arn": "arn:${Partition}:billingconductor::${Account}:pricingplan/${PricingPlanId}"
    },
    {
        "service": "AWS Billing Conductor",
        "resource": "pricingrule",
        "prefix": "billingconductor",
        "arn": "arn:${Partition}:billingconductor::${Account}:pricingrule/${PricingRuleId}"
    },
    {
        "service": "AWS Billing Conductor",
        "resource": "customlineitem",
        "prefix": "billingconductor",
        "arn": "arn:${Partition}:billingconductor::${Account}:customlineitem/${CustomLineItemId}"
    },
    {
        "service": "Amazon Braket",
        "resource": "quantum-task",
        "prefix": "braket",
        "arn": "arn:${Partition}:braket:${Region}:${Account}:quantum-task/${RandomId}"
    },
    {
        "service": "Amazon Braket",
        "resource": "job",
        "prefix": "braket",
        "arn": "arn:${Partition}:braket:${Region}:${Account}:job/${JobName}"
    },
    {
        "service": "AWS Budget Service",
        "resource": "budget",
        "prefix": "budgets",
        "arn": "arn:${Partition}:budgets::${Account}:budget/${BudgetName}"
    },
    {
        "service": "AWS Budget Service",
        "resource": "budgetAction",
        "prefix": "budgets",
        "arn": "arn:${Partition}:budgets::${Account}:budget/${BudgetName}/action/${ActionId}"
    },
    {
        "service": "AWS BugBust",
        "resource": "Event",
        "prefix": "bugbust",
        "arn": "arn:${Partition}:bugbust:${Region}:${Account}:events/${EventId}"
    },
    {
        "service": "AWS Certificate Manager",
        "resource": "certificate",
        "prefix": "acm",
        "arn": "arn:${Partition}:acm:${Region}:${Account}:certificate/${CertificateId}"
    },
    {
        "service": "AWS Chatbot",
        "resource": "ChatbotConfiguration",
        "prefix": "chatbot",
        "arn": "arn:${Partition}:chatbot::${Account}:chat-configuration/${ConfigurationType}/${ChatbotConfigurationName}"
    },
    {
        "service": "AWS Chatbot",
        "resource": "custom-action",
        "prefix": "chatbot",
        "arn": "arn:${Partition}:chatbot::${Account}:custom-action/${ActionName}"
    },
    {
        "service": "Amazon Chime",
        "resource": "meeting",
        "prefix": "chime",
        "arn": "arn:${Partition}:chime::${AccountId}:meeting/${MeetingId}"
    },
    {
        "service": "Amazon Chime",
        "resource": "app-instance",
        "prefix": "chime",
        "arn": "arn:${Partition}:chime:${Region}:${AccountId}:app-instance/${AppInstanceId}"
    },
    {
        "service": "Amazon Chime",
        "resource": "app-instance-user",
        "prefix": "chime",
        "arn": "arn:${Partition}:chime:${Region}:${AccountId}:app-instance/${AppInstanceId}/user/${AppInstanceUserId}"
    },
    {
        "service": "Amazon Chime",
        "resource": "app-instance-bot",
        "prefix": "chime",
        "arn": "arn:${Partition}:chime:${Region}:${AccountId}:app-instance/${AppInstanceId}/bot/${AppInstanceBotId}"
    },
    {
        "service": "Amazon Chime",
        "resource": "channel",
        "prefix": "chime",
        "arn": "arn:${Partition}:chime:${Region}:${AccountId}:app-instance/${AppInstanceId}/channel/${ChannelId}"
    },
    {
        "service": "Amazon Chime",
        "resource": "channel-flow",
        "prefix": "chime",
        "arn": "arn:${Partition}:chime:${Region}:${AccountId}:app-instance/${AppInstanceId}/channel-flow/${ChannelFlowId}"
    },
    {
        "service": "Amazon Chime",
        "resource": "media-pipeline",
        "prefix": "chime",
        "arn": "arn:${Partition}:chime:${Region}:${AccountId}:media-pipeline/${MediaPipelineId}"
    },
    {
        "service": "Amazon Chime",
        "resource": "media-insights-pipeline-configuration",
        "prefix": "chime",
        "arn": "arn:${Partition}:chime:${Region}:${AccountId}:media-insights-pipeline-configuration/${ConfigurationName}"
    },
    {
        "service": "Amazon Chime",
        "resource": "media-pipeline-kinesis-video-stream-pool",
        "prefix": "chime",
        "arn": "arn:${Partition}:chime:${Region}:${AccountId}:media-pipeline-kinesis-video-stream-pool/${PoolName}"
    },
    {
        "service": "Amazon Chime",
        "resource": "voice-profile-domain",
        "prefix": "chime",
        "arn": "arn:${Partition}:chime:${Region}:${AccountId}:voice-profile-domain/${VoiceProfileDomainId}"
    },
    {
        "service": "Amazon Chime",
        "resource": "voice-profile",
        "prefix": "chime",
        "arn": "arn:${Partition}:chime:${Region}:${AccountId}:voice-profile/${VoiceProfileId}"
    },
    {
        "service": "Amazon Chime",
        "resource": "voice-connector",
        "prefix": "chime",
        "arn": "arn:${Partition}:chime:${Region}:${AccountId}:vc/${VoiceConnectorId}"
    },
    {
        "service": "Amazon Chime",
        "resource": "sip-media-application",
        "prefix": "chime",
        "arn": "arn:${Partition}:chime:${Region}:${AccountId}:sma/${SipMediaApplicationId}"
    },
    {
        "service": "AWS Clean Rooms",
        "resource": "analysistemplate",
        "prefix": "cleanrooms",
        "arn": "arn:${Partition}:cleanrooms:${Region}:${Account}:membership/${MembershipId}/analysistemplate/${AnalysisTemplateId}"
    },
    {
        "service": "AWS Clean Rooms",
        "resource": "collaboration",
        "prefix": "cleanrooms",
        "arn": "arn:${Partition}:cleanrooms:${Region}:${Account}:collaboration/${CollaborationId}"
    },
    {
        "service": "AWS Clean Rooms",
        "resource": "configuredaudiencemodelassociation",
        "prefix": "cleanrooms",
        "arn": "arn:${Partition}:cleanrooms:${Region}:${Account}:membership/${MembershipId}/configuredaudiencemodelassociation/${ConfiguredAudienceModelAssociationId}"
    },
    {
        "service": "AWS Clean Rooms",
        "resource": "configuredtable",
        "prefix": "cleanrooms",
        "arn": "arn:${Partition}:cleanrooms:${Region}:${Account}:configuredtable/${ConfiguredTableId}"
    },
    {
        "service": "AWS Clean Rooms",
        "resource": "configuredtableassociation",
        "prefix": "cleanrooms",
        "arn": "arn:${Partition}:cleanrooms:${Region}:${Account}:membership/${MembershipId}/configuredtableassociation/${ConfiguredTableAssociationId}"
    },
    {
        "service": "AWS Clean Rooms",
        "resource": "idmappingtable",
        "prefix": "cleanrooms",
        "arn": "arn:${Partition}:cleanrooms:${Region}:${Account}:membership/${MembershipId}/idmappingtable/${IdMappingTableId}"
    },
    {
        "service": "AWS Clean Rooms",
        "resource": "idnamespaceassociation",
        "prefix": "cleanrooms",
        "arn": "arn:${Partition}:cleanrooms:${Region}:${Account}:membership/${MembershipId}/idnamespaceassociation/${IdNamespaceAssociationId}"
    },
    {
        "service": "AWS Clean Rooms",
        "resource": "membership",
        "prefix": "cleanrooms",
        "arn": "arn:${Partition}:cleanrooms:${Region}:${Account}:membership/${MembershipId}"
    },
    {
        "service": "AWS Clean Rooms",
        "resource": "privacybudgettemplate",
        "prefix": "cleanrooms",
        "arn": "arn:${Partition}:cleanrooms:${Region}:${Account}:membership/${MembershipId}/privacybudgettemplate/${PrivacyBudgetTemplateId}"
    },
    {
        "service": "AWS Clean Rooms ML",
        "resource": "trainingdataset",
        "prefix": "cleanrooms-ml",
        "arn": "arn:${Partition}:cleanrooms-ml:${Region}:${Account}:training-dataset/${ResourceId}"
    },
    {
        "service": "AWS Clean Rooms ML",
        "resource": "audiencemodel",
        "prefix": "cleanrooms-ml",
        "arn": "arn:${Partition}:cleanrooms-ml:${Region}:${Account}:audience-model/${ResourceId}"
    },
    {
        "service": "AWS Clean Rooms ML",
        "resource": "configuredaudiencemodel",
        "prefix": "cleanrooms-ml",
        "arn": "arn:${Partition}:cleanrooms-ml:${Region}:${Account}:configured-audience-model/${ResourceId}"
    },
    {
        "service": "AWS Clean Rooms ML",
        "resource": "audiencegenerationjob",
        "prefix": "cleanrooms-ml",
        "arn": "arn:${Partition}:cleanrooms-ml:${Region}:${Account}:audience-generation-job/${ResourceId}"
    },
    {
        "service": "AWS Clean Rooms ML",
        "resource": "ConfiguredModelAlgorithm",
        "prefix": "cleanrooms-ml",
        "arn": "arn:${Partition}:cleanrooms-ml:${Region}:${Account}:configured-model-algorithm/${ResourceId}"
    },
    {
        "service": "AWS Clean Rooms ML",
        "resource": "ConfiguredModelAlgorithmAssociation",
        "prefix": "cleanrooms-ml",
        "arn": "arn:${Partition}:cleanrooms-ml:${Region}:${Account}:membership/${MembershipId}/configured-model-algorithm-association/${ResourceId}"
    },
    {
        "service": "AWS Clean Rooms ML",
        "resource": "MLInputChannel",
        "prefix": "cleanrooms-ml",
        "arn": "arn:${Partition}:cleanrooms-ml:${Region}:${Account}:membership/${MembershipId}/ml-input-channel/${ResourceId}"
    },
    {
        "service": "AWS Clean Rooms ML",
        "resource": "TrainedModel",
        "prefix": "cleanrooms-ml",
        "arn": "arn:${Partition}:cleanrooms-ml:${Region}:${Account}:membership/${MembershipId}/trained-model/${ResourceId}"
    },
    {
        "service": "AWS Clean Rooms ML",
        "resource": "TrainedModelInferenceJob",
        "prefix": "cleanrooms-ml",
        "arn": "arn:${Partition}:cleanrooms-ml:${Region}:${Account}:membership/${MembershipId}/trained-model-inference-job/${ResourceId}"
    },
    {
        "service": "Amazon Cloud Directory",
        "resource": "appliedSchema",
        "prefix": "clouddirectory",
        "arn": "arn:${Partition}:clouddirectory:${Region}:${Account}:directory/${DirectoryId}/schema/${SchemaName}/${Version}"
    },
    {
        "service": "Amazon Cloud Directory",
        "resource": "developmentSchema",
        "prefix": "clouddirectory",
        "arn": "arn:${Partition}:clouddirectory:${Region}:${Account}:schema/development/${SchemaName}"
    },
    {
        "service": "Amazon Cloud Directory",
        "resource": "directory",
        "prefix": "clouddirectory",
        "arn": "arn:${Partition}:clouddirectory:${Region}:${Account}:directory/${DirectoryId}"
    },
    {
        "service": "Amazon Cloud Directory",
        "resource": "publishedSchema",
        "prefix": "clouddirectory",
        "arn": "arn:${Partition}:clouddirectory:${Region}:${Account}:schema/published/${SchemaName}/${Version}"
    },
    {
        "service": "AWS Cloud Map",
        "resource": "namespace",
        "prefix": "servicediscovery",
        "arn": "arn:${Partition}:servicediscovery:${Region}:${Account}:namespace/${NamespaceId}"
    },
    {
        "service": "AWS Cloud Map",
        "resource": "service",
        "prefix": "servicediscovery",
        "arn": "arn:${Partition}:servicediscovery:${Region}:${Account}:service/${ServiceId}"
    },
    {
        "service": "AWS Cloud9",
        "resource": "environment",
        "prefix": "cloud9",
        "arn": "arn:${Partition}:cloud9:${Region}:${Account}:environment:${ResourceId}"
    },
    {
        "service": "AWS CloudFormation",
        "resource": "changeset",
        "prefix": "cloudformation",
        "arn": "arn:${Partition}:cloudformation:${Region}:${Account}:changeSet/${ChangeSetName}/${Id}"
    },
    {
        "service": "AWS CloudFormation",
        "resource": "stack",
        "prefix": "cloudformation",
        "arn": "arn:${Partition}:cloudformation:${Region}:${Account}:stack/${StackName}/${Id}"
    },
    {
        "service": "AWS CloudFormation",
        "resource": "stackset",
        "prefix": "cloudformation",
        "arn": "arn:${Partition}:cloudformation:${Region}:${Account}:stackset/${StackSetName}:${Id}"
    },
    {
        "service": "AWS CloudFormation",
        "resource": "stackset-target",
        "prefix": "cloudformation",
        "arn": "arn:${Partition}:cloudformation:${Region}:${Account}:stackset-target/${StackSetTarget}"
    },
    {
        "service": "AWS CloudFormation",
        "resource": "type",
        "prefix": "cloudformation",
        "arn": "arn:${Partition}:cloudformation:${Region}:${Account}:type/resource/${Type}"
    },
    {
        "service": "AWS CloudFormation",
        "resource": "generatedtemplate",
        "prefix": "cloudformation",
        "arn": "arn:${Partition}:cloudformation:${Region}:${Account}:generatedTemplate/${Id}"
    },
    {
        "service": "AWS CloudFormation",
        "resource": "resourcescan",
        "prefix": "cloudformation",
        "arn": "arn:${Partition}:cloudformation:${Region}:${Account}:resourceScan/${Id}"
    },
    {
        "service": "Amazon CloudFront",
        "resource": "distribution",
        "prefix": "cloudfront",
        "arn": "arn:${Partition}:cloudfront::${Account}:distribution/${DistributionId}"
    },
    {
        "service": "Amazon CloudFront",
        "resource": "streaming-distribution",
        "prefix": "cloudfront",
        "arn": "arn:${Partition}:cloudfront::${Account}:streaming-distribution/${DistributionId}"
    },
    {
        "service": "Amazon CloudFront",
        "resource": "origin-access-identity",
        "prefix": "cloudfront",
        "arn": "arn:${Partition}:cloudfront::${Account}:origin-access-identity/${Id}"
    },
    {
        "service": "Amazon CloudFront",
        "resource": "field-level-encryption-config",
        "prefix": "cloudfront",
        "arn": "arn:${Partition}:cloudfront::${Account}:field-level-encryption-config/${Id}"
    },
    {
        "service": "Amazon CloudFront",
        "resource": "field-level-encryption-profile",
        "prefix": "cloudfront",
        "arn": "arn:${Partition}:cloudfront::${Account}:field-level-encryption-profile/${Id}"
    },
    {
        "service": "Amazon CloudFront",
        "resource": "cache-policy",
        "prefix": "cloudfront",
        "arn": "arn:${Partition}:cloudfront::${Account}:cache-policy/${Id}"
    },
    {
        "service": "Amazon CloudFront",
        "resource": "origin-request-policy",
        "prefix": "cloudfront",
        "arn": "arn:${Partition}:cloudfront::${Account}:origin-request-policy/${Id}"
    },
    {
        "service": "Amazon CloudFront",
        "resource": "realtime-log-config",
        "prefix": "cloudfront",
        "arn": "arn:${Partition}:cloudfront::${Account}:realtime-log-config/${Name}"
    },
    {
        "service": "Amazon CloudFront",
        "resource": "function",
        "prefix": "cloudfront",
        "arn": "arn:${Partition}:cloudfront::${Account}:function/${Name}"
    },
    {
        "service": "Amazon CloudFront",
        "resource": "key-value-store",
        "prefix": "cloudfront",
        "arn": "arn:${Partition}:cloudfront::${Account}:key-value-store/${Name}"
    },
    {
        "service": "Amazon CloudFront",
        "resource": "response-headers-policy",
        "prefix": "cloudfront",
        "arn": "arn:${Partition}:cloudfront::${Account}:response-headers-policy/${Id}"
    },
    {
        "service": "Amazon CloudFront",
        "resource": "origin-access-control",
        "prefix": "cloudfront",
        "arn": "arn:${Partition}:cloudfront::${Account}:origin-access-control/${Id}"
    },
    {
        "service": "Amazon CloudFront",
        "resource": "continuous-deployment-policy",
        "prefix": "cloudfront",
        "arn": "arn:${Partition}:cloudfront::${Account}:continuous-deployment-policy/${Id}"
    },
    {
        "service": "Amazon CloudFront",
        "resource": "anycast-ip-list",
        "prefix": "cloudfront",
        "arn": "arn:${Partition}:cloudfront::${Account}:anycast-ip-list/${Id}"
    },
    {
        "service": "Amazon CloudFront",
        "resource": "vpcorigin",
        "prefix": "cloudfront",
        "arn": "arn:${Partition}:cloudfront::${Account}:vpcorigin/${Id}"
    },
    {
        "service": "Amazon CloudFront",
        "resource": "distribution-tenant",
        "prefix": "cloudfront",
        "arn": "arn:${Partition}:cloudfront::${Account}:distribution-tenant/${Id}"
    },
    {
        "service": "Amazon CloudFront",
        "resource": "connection-group",
        "prefix": "cloudfront",
        "arn": "arn:${Partition}:cloudfront::${Account}:connection-group/${Id}"
    },
    {
        "service": "AWS CloudHSM",
        "resource": "backup",
        "prefix": "cloudhsm",
        "arn": "arn:${Partition}:cloudhsm:${Region}:${Account}:backup/${CloudHsmBackupInstanceName}"
    },
    {
        "service": "AWS CloudHSM",
        "resource": "cluster",
        "prefix": "cloudhsm",
        "arn": "arn:${Partition}:cloudhsm:${Region}:${Account}:cluster/${CloudHsmClusterInstanceName}"
    },
    {
        "service": "Amazon CloudSearch",
        "resource": "domain",
        "prefix": "cloudsearch",
        "arn": "arn:${Partition}:cloudsearch:${Region}:${Account}:domain/${DomainName}"
    },
    {
        "service": "AWS CloudShell",
        "resource": "Environment",
        "prefix": "cloudshell",
        "arn": "arn:${Partition}:cloudshell:${Region}:${Account}:environment/${EnvironmentId}"
    },
    {
        "service": "AWS CloudTrail",
        "resource": "trail",
        "prefix": "cloudtrail",
        "arn": "arn:${Partition}:cloudtrail:${Region}:${Account}:trail/${TrailName}"
    },
    {
        "service": "AWS CloudTrail",
        "resource": "eventdatastore",
        "prefix": "cloudtrail",
        "arn": "arn:${Partition}:cloudtrail:${Region}:${Account}:eventdatastore/${EventDataStoreId}"
    },
    {
        "service": "AWS CloudTrail",
        "resource": "channel",
        "prefix": "cloudtrail",
        "arn": "arn:${Partition}:cloudtrail:${Region}:${Account}:channel/${ChannelId}"
    },
    {
        "service": "AWS CloudTrail",
        "resource": "dashboard",
        "prefix": "cloudtrail",
        "arn": "arn:${Partition}:cloudtrail:${Region}:${Account}:dashboard/${DashboardName}"
    },
    {
        "service": "Amazon CloudWatch",
        "resource": "alarm",
        "prefix": "cloudwatch",
        "arn": "arn:${Partition}:cloudwatch:${Region}:${Account}:alarm:${AlarmName}"
    },
    {
        "service": "Amazon CloudWatch",
        "resource": "dashboard",
        "prefix": "cloudwatch",
        "arn": "arn:${Partition}:cloudwatch::${Account}:dashboard/${DashboardName}"
    },
    {
        "service": "Amazon CloudWatch",
        "resource": "insight-rule",
        "prefix": "cloudwatch",
        "arn": "arn:${Partition}:cloudwatch:${Region}:${Account}:insight-rule/${InsightRuleName}"
    },
    {
        "service": "Amazon CloudWatch",
        "resource": "metric-stream",
        "prefix": "cloudwatch",
        "arn": "arn:${Partition}:cloudwatch:${Region}:${Account}:metric-stream/${MetricStreamName}"
    },
    {
        "service": "Amazon CloudWatch",
        "resource": "slo",
        "prefix": "cloudwatch",
        "arn": "arn:${Partition}:cloudwatch:${Region}:${Account}:slo/${SloName}"
    },
    {
        "service": "Amazon CloudWatch",
        "resource": "service",
        "prefix": "cloudwatch",
        "arn": "arn:${Partition}:cloudwatch:${Region}:${Account}:service/${ServiceName}-${UniqueAttributesHex}"
    },
    {
        "service": "Amazon CloudWatch Application Signals",
        "resource": "slo",
        "prefix": "application-signals",
        "arn": "arn:${Partition}:application-signals:${Region}:${Account}:slo/${SloName}"
    },
    {
        "service": "Amazon CloudWatch Evidently",
        "resource": "Project",
        "prefix": "evidently",
        "arn": "arn:${Partition}:evidently:${Region}:${Account}:project/${ProjectName}"
    },
    {
        "service": "Amazon CloudWatch Evidently",
        "resource": "Feature",
        "prefix": "evidently",
        "arn": "arn:${Partition}:evidently:${Region}:${Account}:project/${ProjectName}/feature/${FeatureName}"
    },
    {
        "service": "Amazon CloudWatch Evidently",
        "resource": "Experiment",
        "prefix": "evidently",
        "arn": "arn:${Partition}:evidently:${Region}:${Account}:project/${ProjectName}/experiment/${ExperimentName}"
    },
    {
        "service": "Amazon CloudWatch Evidently",
        "resource": "Launch",
        "prefix": "evidently",
        "arn": "arn:${Partition}:evidently:${Region}:${Account}:project/${ProjectName}/launch/${LaunchName}"
    },
    {
        "service": "Amazon CloudWatch Evidently",
        "resource": "Segment",
        "prefix": "evidently",
        "arn": "arn:${Partition}:evidently:${Region}:${Account}:segment/${SegmentName}"
    },
    {
        "service": "Amazon CloudWatch Internet Monitor",
        "resource": "HealthEvent",
        "prefix": "internetmonitor",
        "arn": "arn:${Partition}:internetmonitor:${Region}:${Account}:monitor/${MonitorName}/health-event/${EventId}"
    },
    {
        "service": "Amazon CloudWatch Internet Monitor",
        "resource": "Monitor",
        "prefix": "internetmonitor",
        "arn": "arn:${Partition}:internetmonitor:${Region}:${Account}:monitor/${MonitorName}"
    },
    {
        "service": "Amazon CloudWatch Internet Monitor",
        "resource": "InternetEvent",
        "prefix": "internetmonitor",
        "arn": "arn:${Partition}:internetmonitor::${Account}:internet-event/${InternetEventId}"
    },
    {
        "service": "Amazon CloudWatch Logs",
        "resource": "log-group",
        "prefix": "logs",
        "arn": "arn:${Partition}:logs:${Region}:${Account}:log-group:${LogGroupName}"
    },
    {
        "service": "Amazon CloudWatch Logs",
        "resource": "log-stream",
        "prefix": "logs",
        "arn": "arn:${Partition}:logs:${Region}:${Account}:log-group:${LogGroupName}:log-stream:${LogStreamName}"
    },
    {
        "service": "Amazon CloudWatch Logs",
        "resource": "destination",
        "prefix": "logs",
        "arn": "arn:${Partition}:logs:${Region}:${Account}:destination:${DestinationName}"
    },
    {
        "service": "Amazon CloudWatch Logs",
        "resource": "delivery-source",
        "prefix": "logs",
        "arn": "arn:${Partition}:logs:${Region}:${Account}:delivery-source:${DeliverySourceName}"
    },
    {
        "service": "Amazon CloudWatch Logs",
        "resource": "delivery",
        "prefix": "logs",
        "arn": "arn:${Partition}:logs:${Region}:${Account}:delivery:${DeliveryName}"
    },
    {
        "service": "Amazon CloudWatch Logs",
        "resource": "delivery-destination",
        "prefix": "logs",
        "arn": "arn:${Partition}:logs:${Region}:${Account}:delivery-destination:${DeliveryDestinationName}"
    },
    {
        "service": "Amazon CloudWatch Logs",
        "resource": "anomaly-detector",
        "prefix": "logs",
        "arn": "arn:${Partition}:logs:${Region}:${Account}:anomaly-detector:${DetectorId}"
    },
    {
        "service": "Amazon CloudWatch Network Synthetic Monitor",
        "resource": "monitor",
        "prefix": "networkmonitor",
        "arn": "arn:${Partition}:networkmonitor:${Region}:${Account}:monitor/${MonitorName}"
    },
    {
        "service": "Amazon CloudWatch Network Synthetic Monitor",
        "resource": "probe",
        "prefix": "networkmonitor",
        "arn": "arn:${Partition}:networkmonitor:${Region}:${Account}:probe/${ProbeId}"
    },
    {
        "service": "Amazon CloudWatch Observability Access Manager",
        "resource": "Link",
        "prefix": "oam",
        "arn": "arn:${Partition}:oam:${Region}:${Account}:link/${ResourceId}"
    },
    {
        "service": "Amazon CloudWatch Observability Access Manager",
        "resource": "Sink",
        "prefix": "oam",
        "arn": "arn:${Partition}:oam:${Region}:${Account}:sink/${ResourceId}"
    },
    {
        "service": "AWS CloudWatch RUM",
        "resource": "AppMonitorResource",
        "prefix": "rum",
        "arn": "arn:${Partition}:rum:${Region}:${Account}:appmonitor/${Name}"
    },
    {
        "service": "Amazon CloudWatch Synthetics",
        "resource": "canary",
        "prefix": "synthetics",
        "arn": "arn:${Partition}:synthetics:${Region}:${Account}:canary:${CanaryName}"
    },
    {
        "service": "Amazon CloudWatch Synthetics",
        "resource": "group",
        "prefix": "synthetics",
        "arn": "arn:${Partition}:synthetics:${Region}:${Account}:group:${GroupId}"
    },
    {
        "service": "AWS CodeArtifact",
        "resource": "domain",
        "prefix": "codeartifact",
        "arn": "arn:${Partition}:codeartifact:${Region}:${Account}:domain/${DomainName}"
    },
    {
        "service": "AWS CodeArtifact",
        "resource": "repository",
        "prefix": "codeartifact",
        "arn": "arn:${Partition}:codeartifact:${Region}:${Account}:repository/${DomainName}/${RepositoryName}"
    },
    {
        "service": "AWS CodeArtifact",
        "resource": "package-group",
        "prefix": "codeartifact",
        "arn": "arn:${Partition}:codeartifact:${Region}:${Account}:package-group/${DomainName}${EncodedPackageGroupPattern}"
    },
    {
        "service": "AWS CodeArtifact",
        "resource": "package",
        "prefix": "codeartifact",
        "arn": "arn:${Partition}:codeartifact:${Region}:${Account}:package/${DomainName}/${RepositoryName}/${PackageFormat}/${PackageNamespace}/${PackageName}"
    },
    {
        "service": "AWS CodeBuild",
        "resource": "build",
        "prefix": "codebuild",
        "arn": "arn:${Partition}:codebuild:${Region}:${Account}:build/${BuildId}"
    },
    {
        "service": "AWS CodeBuild",
        "resource": "build-batch",
        "prefix": "codebuild",
        "arn": "arn:${Partition}:codebuild:${Region}:${Account}:build-batch/${BuildBatchId}"
    },
    {
        "service": "AWS CodeBuild",
        "resource": "project",
        "prefix": "codebuild",
        "arn": "arn:${Partition}:codebuild:${Region}:${Account}:project/${ProjectName}"
    },
    {
        "service": "AWS CodeBuild",
        "resource": "report-group",
        "prefix": "codebuild",
        "arn": "arn:${Partition}:codebuild:${Region}:${Account}:report-group/${ReportGroupName}"
    },
    {
        "service": "AWS CodeBuild",
        "resource": "report",
        "prefix": "codebuild",
        "arn": "arn:${Partition}:codebuild:${Region}:${Account}:report/${ReportGroupName}:${ReportId}"
    },
    {
        "service": "AWS CodeBuild",
        "resource": "fleet",
        "prefix": "codebuild",
        "arn": "arn:${Partition}:codebuild:${Region}:${Account}:fleet/${FleetName}:${FleetId}"
    },
    {
        "service": "AWS CodeBuild",
        "resource": "sandbox",
        "prefix": "codebuild",
        "arn": "arn:${Partition}:codebuild:${Region}:${Account}:sandbox/${SandboxId}"
    },
    {
        "service": "Amazon CodeCatalyst",
        "resource": "connections",
        "prefix": "codecatalyst",
        "arn": "arn:${Partition}:codecatalyst:${Region}:${Account}:/connections/${ConnectionId}"
    },
    {
        "service": "Amazon CodeCatalyst",
        "resource": "identity-center-applications",
        "prefix": "codecatalyst",
        "arn": "arn:${Partition}:codecatalyst:${Region}:${Account}:/identity-center-applications/${IdentityCenterApplicationId}"
    },
    {
        "service": "Amazon CodeCatalyst",
        "resource": "space",
        "prefix": "codecatalyst",
        "arn": "arn:${Partition}:codecatalyst:::space/${SpaceId}"
    },
    {
        "service": "Amazon CodeCatalyst",
        "resource": "project",
        "prefix": "codecatalyst",
        "arn": "arn:${Partition}:codecatalyst:::space/${SpaceId}/project/${ProjectId}"
    },
    {
        "service": "AWS CodeCommit",
        "resource": "repository",
        "prefix": "codecommit",
        "arn": "arn:${Partition}:codecommit:${Region}:${Account}:${RepositoryName}"
    },
    {
        "service": "AWS CodeConnections",
        "resource": "Connection",
        "prefix": "codeconnections",
        "arn": "arn:${Partition}:codeconnections:${Region}:${Account}:connection/${ConnectionId}"
    },
    {
        "service": "AWS CodeConnections",
        "resource": "Host",
        "prefix": "codeconnections",
        "arn": "arn:${Partition}:codeconnections:${Region}:${Account}:host/${HostId}"
    },
    {
        "service": "AWS CodeConnections",
        "resource": "RepositoryLink",
        "prefix": "codeconnections",
        "arn": "arn:${Partition}:codeconnections:${Region}:${Account}:repository-link/${RepositoryLinkId}"
    },
    {
        "service": "AWS CodeDeploy",
        "resource": "application",
        "prefix": "codedeploy",
        "arn": "arn:${Partition}:codedeploy:${Region}:${Account}:application:${ApplicationName}"
    },
    {
        "service": "AWS CodeDeploy",
        "resource": "deploymentconfig",
        "prefix": "codedeploy",
        "arn": "arn:${Partition}:codedeploy:${Region}:${Account}:deploymentconfig:${DeploymentConfigurationName}"
    },
    {
        "service": "AWS CodeDeploy",
        "resource": "deploymentgroup",
        "prefix": "codedeploy",
        "arn": "arn:${Partition}:codedeploy:${Region}:${Account}:deploymentgroup:${ApplicationName}/${DeploymentGroupName}"
    },
    {
        "service": "AWS CodeDeploy",
        "resource": "instance",
        "prefix": "codedeploy",
        "arn": "arn:${Partition}:codedeploy:${Region}:${Account}:instance:${InstanceName}"
    },
    {
        "service": "Amazon CodeGuru Profiler",
        "resource": "ProfilingGroup",
        "prefix": "codeguru-profiler",
        "arn": "arn:${Partition}:codeguru-profiler:${Region}:${Account}:profilingGroup/${ProfilingGroupName}"
    },
    {
        "service": "Amazon CodeGuru Reviewer",
        "resource": "association",
        "prefix": "codeguru-reviewer",
        "arn": "arn:${Partition}:codeguru-reviewer:${Region}:${Account}:association:${ResourceId}"
    },
    {
        "service": "Amazon CodeGuru Reviewer",
        "resource": "codereview",
        "prefix": "codeguru-reviewer",
        "arn": "arn:${Partition}:codeguru-reviewer:${Region}:${Account}:association:${ResourceId}:codereview:${CodeReviewId}"
    },
    {
        "service": "Amazon CodeGuru Security",
        "resource": "ScanName",
        "prefix": "codeguru-security",
        "arn": "arn:${Partition}:codeguru-security:${Region}:${Account}:scans/${ScanName}"
    },
    {
        "service": "AWS CodePipeline",
        "resource": "action",
        "prefix": "codepipeline",
        "arn": "arn:${Partition}:codepipeline:${Region}:${Account}:${PipelineName}/${StageName}/${ActionName}"
    },
    {
        "service": "AWS CodePipeline",
        "resource": "actiontype",
        "prefix": "codepipeline",
        "arn": "arn:${Partition}:codepipeline:${Region}:${Account}:actiontype:${Owner}/${Category}/${Provider}/${Version}"
    },
    {
        "service": "AWS CodePipeline",
        "resource": "pipeline",
        "prefix": "codepipeline",
        "arn": "arn:${Partition}:codepipeline:${Region}:${Account}:${PipelineName}"
    },
    {
        "service": "AWS CodePipeline",
        "resource": "stage",
        "prefix": "codepipeline",
        "arn": "arn:${Partition}:codepipeline:${Region}:${Account}:${PipelineName}/${StageName}"
    },
    {
        "service": "AWS CodePipeline",
        "resource": "webhook",
        "prefix": "codepipeline",
        "arn": "arn:${Partition}:codepipeline:${Region}:${Account}:webhook:${WebhookName}"
    },
    {
        "service": "AWS CodeStar",
        "resource": "project",
        "prefix": "codestar",
        "arn": "arn:${Partition}:codestar:${Region}:${Account}:project/${ProjectId}"
    },
    {
        "service": "AWS CodeStar Connections",
        "resource": "Connection",
        "prefix": "codestar-connections",
        "arn": "arn:${Partition}:codestar-connections:${Region}:${Account}:connection/${ConnectionId}"
    },
    {
        "service": "AWS CodeStar Connections",
        "resource": "Host",
        "prefix": "codestar-connections",
        "arn": "arn:${Partition}:codestar-connections:${Region}:${Account}:host/${HostId}"
    },
    {
        "service": "AWS CodeStar Connections",
        "resource": "RepositoryLink",
        "prefix": "codestar-connections",
        "arn": "arn:${Partition}:codestar-connections:${Region}:${Account}:repository-link/${RepositoryLinkId}"
    },
    {
        "service": "AWS CodeStar Notifications",
        "resource": "notificationrule",
        "prefix": "codestar-notifications",
        "arn": "arn:${Partition}:codestar-notifications:${Region}:${Account}:notificationrule/${NotificationRuleId}"
    },
    {
        "service": "Amazon CodeWhisperer",
        "resource": "profile",
        "prefix": "codewhisperer",
        "arn": "arn:${Partition}:codewhisperer:${Region}:${Account}:profile/${Identifier}"
    },
    {
        "service": "Amazon CodeWhisperer",
        "resource": "customization",
        "prefix": "codewhisperer",
        "arn": "arn:${Partition}:codewhisperer:${Region}:${Account}:customization/${Identifier}"
    },
    {
        "service": "Amazon Cognito Identity",
        "resource": "identitypool",
        "prefix": "cognito-identity",
        "arn": "arn:${Partition}:cognito-identity:${Region}:${Account}:identitypool/${IdentityPoolId}"
    },
    {
        "service": "Amazon Cognito Sync",
        "resource": "dataset",
        "prefix": "cognito-sync",
        "arn": "arn:${Partition}:cognito-sync:${Region}:${Account}:identitypool/${IdentityPoolId}/identity/${IdentityId}/dataset/${DatasetName}"
    },
    {
        "service": "Amazon Cognito Sync",
        "resource": "identity",
        "prefix": "cognito-sync",
        "arn": "arn:${Partition}:cognito-sync:${Region}:${Account}:identitypool/${IdentityPoolId}/identity/${IdentityId}"
    },
    {
        "service": "Amazon Cognito Sync",
        "resource": "identitypool",
        "prefix": "cognito-sync",
        "arn": "arn:${Partition}:cognito-sync:${Region}:${Account}:identitypool/${IdentityPoolId}"
    },
    {
        "service": "Amazon Cognito User Pools",
        "resource": "userpool",
        "prefix": "cognito-idp",
        "arn": "arn:${Partition}:cognito-idp:${Region}:${Account}:userpool/${UserPoolId}"
    },
    {
        "service": "Amazon Comprehend",
        "resource": "targeted-sentiment-detection-job",
        "prefix": "comprehend",
        "arn": "arn:${Partition}:comprehend:${Region}:${Account}:targeted-sentiment-detection-job/${JobId}"
    },
    {
        "service": "Amazon Comprehend",
        "resource": "document-classifier",
        "prefix": "comprehend",
        "arn": "arn:${Partition}:comprehend:${Region}:${Account}:document-classifier/${DocumentClassifierName}"
    },
    {
        "service": "Amazon Comprehend",
        "resource": "document-classifier-endpoint",
        "prefix": "comprehend",
        "arn": "arn:${Partition}:comprehend:${Region}:${Account}:document-classifier-endpoint/${DocumentClassifierEndpointName}"
    },
    {
        "service": "Amazon Comprehend",
        "resource": "entity-recognizer",
        "prefix": "comprehend",
        "arn": "arn:${Partition}:comprehend:${Region}:${Account}:entity-recognizer/${EntityRecognizerName}"
    },
    {
        "service": "Amazon Comprehend",
        "resource": "entity-recognizer-endpoint",
        "prefix": "comprehend",
        "arn": "arn:${Partition}:comprehend:${Region}:${Account}:entity-recognizer-endpoint/${EntityRecognizerEndpointName}"
    },
    {
        "service": "Amazon Comprehend",
        "resource": "dominant-language-detection-job",
        "prefix": "comprehend",
        "arn": "arn:${Partition}:comprehend:${Region}:${Account}:dominant-language-detection-job/${JobId}"
    },
    {
        "service": "Amazon Comprehend",
        "resource": "entities-detection-job",
        "prefix": "comprehend",
        "arn": "arn:${Partition}:comprehend:${Region}:${Account}:entities-detection-job/${JobId}"
    },
    {
        "service": "Amazon Comprehend",
        "resource": "pii-entities-detection-job",
        "prefix": "comprehend",
        "arn": "arn:${Partition}:comprehend:${Region}:${Account}:pii-entities-detection-job/${JobId}"
    },
    {
        "service": "Amazon Comprehend",
        "resource": "events-detection-job",
        "prefix": "comprehend",
        "arn": "arn:${Partition}:comprehend:${Region}:${Account}:events-detection-job/${JobId}"
    },
    {
        "service": "Amazon Comprehend",
        "resource": "key-phrases-detection-job",
        "prefix": "comprehend",
        "arn": "arn:${Partition}:comprehend:${Region}:${Account}:key-phrases-detection-job/${JobId}"
    },
    {
        "service": "Amazon Comprehend",
        "resource": "sentiment-detection-job",
        "prefix": "comprehend",
        "arn": "arn:${Partition}:comprehend:${Region}:${Account}:sentiment-detection-job/${JobId}"
    },
    {
        "service": "Amazon Comprehend",
        "resource": "topics-detection-job",
        "prefix": "comprehend",
        "arn": "arn:${Partition}:comprehend:${Region}:${Account}:topics-detection-job/${JobId}"
    },
    {
        "service": "Amazon Comprehend",
        "resource": "document-classification-job",
        "prefix": "comprehend",
        "arn": "arn:${Partition}:comprehend:${Region}:${Account}:document-classification-job/${JobId}"
    },
    {
        "service": "Amazon Comprehend",
        "resource": "flywheel",
        "prefix": "comprehend",
        "arn": "arn:${Partition}:comprehend:${Region}:${Account}:flywheel/${FlywheelName}"
    },
    {
        "service": "Amazon Comprehend",
        "resource": "flywheel-dataset",
        "prefix": "comprehend",
        "arn": "arn:${Partition}:comprehend:${Region}:${Account}:flywheel/${FlywheelName}/dataset/${DatasetName}"
    },
    {
        "service": "AWS Config",
        "resource": "AggregationAuthorization",
        "prefix": "config",
        "arn": "arn:${Partition}:config:${Region}:${Account}:aggregation-authorization/${AggregatorAccount}/${AggregatorRegion}"
    },
    {
        "service": "AWS Config",
        "resource": "ConfigurationAggregator",
        "prefix": "config",
        "arn": "arn:${Partition}:config:${Region}:${Account}:config-aggregator/${AggregatorId}"
    },
    {
        "service": "AWS Config",
        "resource": "ConfigRule",
        "prefix": "config",
        "arn": "arn:${Partition}:config:${Region}:${Account}:config-rule/${ConfigRuleId}"
    },
    {
        "service": "AWS Config",
        "resource": "ConformancePack",
        "prefix": "config",
        "arn": "arn:${Partition}:config:${Region}:${Account}:conformance-pack/${ConformancePackName}/${ConformancePackId}"
    },
    {
        "service": "AWS Config",
        "resource": "OrganizationConfigRule",
        "prefix": "config",
        "arn": "arn:${Partition}:config:${Region}:${Account}:organization-config-rule/${OrganizationConfigRuleId}"
    },
    {
        "service": "AWS Config",
        "resource": "OrganizationConformancePack",
        "prefix": "config",
        "arn": "arn:${Partition}:config:${Region}:${Account}:organization-conformance-pack/${OrganizationConformancePackId}"
    },
    {
        "service": "AWS Config",
        "resource": "RemediationConfiguration",
        "prefix": "config",
        "arn": "arn:${Partition}:config:${Region}:${Account}:remediation-configuration/${RemediationConfigurationId}"
    },
    {
        "service": "AWS Config",
        "resource": "StoredQuery",
        "prefix": "config",
        "arn": "arn:${Partition}:config:${Region}:${Account}:stored-query/${StoredQueryName}/${StoredQueryId}"
    },
    {
        "service": "AWS Config",
        "resource": "ConfigurationRecorder",
        "prefix": "config",
        "arn": "arn:${Partition}:config:${Region}:${Account}:configuration-recorder/${RecorderName}/${RecorderId}"
    },
    {
        "service": "Amazon Connect",
        "resource": "instance",
        "prefix": "connect",
        "arn": "arn:${Partition}:connect:${Region}:${Account}:instance/${InstanceId}"
    },
    {
        "service": "Amazon Connect",
        "resource": "contact",
        "prefix": "connect",
        "arn": "arn:${Partition}:connect:${Region}:${Account}:instance/${InstanceId}/contact/${ContactId}"
    },
    {
        "service": "Amazon Connect",
        "resource": "user",
        "prefix": "connect",
        "arn": "arn:${Partition}:connect:${Region}:${Account}:instance/${InstanceId}/agent/${UserId}"
    },
    {
        "service": "Amazon Connect",
        "resource": "routing-profile",
        "prefix": "connect",
        "arn": "arn:${Partition}:connect:${Region}:${Account}:instance/${InstanceId}/routing-profile/${RoutingProfileId}"
    },
    {
        "service": "Amazon Connect",
        "resource": "security-profile",
        "prefix": "connect",
        "arn": "arn:${Partition}:connect:${Region}:${Account}:instance/${InstanceId}/security-profile/${SecurityProfileId}"
    },
    {
        "service": "Amazon Connect",
        "resource": "authentication-profile",
        "prefix": "connect",
        "arn": "arn:${Partition}:connect:${Region}:${Account}:instance/${InstanceId}/authentication-profile/${AuthenticationProfileId}"
    },
    {
        "service": "Amazon Connect",
        "resource": "hierarchy-group",
        "prefix": "connect",
        "arn": "arn:${Partition}:connect:${Region}:${Account}:instance/${InstanceId}/agent-group/${HierarchyGroupId}"
    },
    {
        "service": "Amazon Connect",
        "resource": "queue",
        "prefix": "connect",
        "arn": "arn:${Partition}:connect:${Region}:${Account}:instance/${InstanceId}/queue/${QueueId}"
    },
    {
        "service": "Amazon Connect",
        "resource": "wildcard-queue",
        "prefix": "connect",
        "arn": "arn:${Partition}:connect:${Region}:${Account}:instance/${InstanceId}/queue/*"
    },
    {
        "service": "Amazon Connect",
        "resource": "quick-connect",
        "prefix": "connect",
        "arn": "arn:${Partition}:connect:${Region}:${Account}:instance/${InstanceId}/transfer-destination/${QuickConnectId}"
    },
    {
        "service": "Amazon Connect",
        "resource": "wildcard-quick-connect",
        "prefix": "connect",
        "arn": "arn:${Partition}:connect:${Region}:${Account}:instance/${InstanceId}/transfer-destination/*"
    },
    {
        "service": "Amazon Connect",
        "resource": "contact-flow",
        "prefix": "connect",
        "arn": "arn:${Partition}:connect:${Region}:${Account}:instance/${InstanceId}/contact-flow/${ContactFlowId}"
    },
    {
        "service": "Amazon Connect",
        "resource": "task-template",
        "prefix": "connect",
        "arn": "arn:${Partition}:connect:${Region}:${Account}:instance/${InstanceId}/task-template/${TaskTemplateId}"
    },
    {
        "service": "Amazon Connect",
        "resource": "contact-flow-module",
        "prefix": "connect",
        "arn": "arn:${Partition}:connect:${Region}:${Account}:instance/${InstanceId}/flow-module/${ContactFlowModuleId}"
    },
    {
        "service": "Amazon Connect",
        "resource": "wildcard-contact-flow",
        "prefix": "connect",
        "arn": "arn:${Partition}:connect:${Region}:${Account}:instance/${InstanceId}/contact-flow/*"
    },
    {
        "service": "Amazon Connect",
        "resource": "hours-of-operation",
        "prefix": "connect",
        "arn": "arn:${Partition}:connect:${Region}:${Account}:instance/${InstanceId}/operating-hours/${HoursOfOperationId}"
    },
    {
        "service": "Amazon Connect",
        "resource": "agent-status",
        "prefix": "connect",
        "arn": "arn:${Partition}:connect:${Region}:${Account}:instance/${InstanceId}/agent-state/${AgentStatusId}"
    },
    {
        "service": "Amazon Connect",
        "resource": "wildcard-agent-status",
        "prefix": "connect",
        "arn": "arn:${Partition}:connect:${Region}:${Account}:instance/${InstanceId}/agent-state/*"
    },
    {
        "service": "Amazon Connect",
        "resource": "legacy-phone-number",
        "prefix": "connect",
        "arn": "arn:${Partition}:connect:${Region}:${Account}:instance/${InstanceId}/phone-number/${PhoneNumberId}"
    },
    {
        "service": "Amazon Connect",
        "resource": "wildcard-legacy-phone-number",
        "prefix": "connect",
        "arn": "arn:${Partition}:connect:${Region}:${Account}:instance/${InstanceId}/phone-number/*"
    },
    {
        "service": "Amazon Connect",
        "resource": "phone-number",
        "prefix": "connect",
        "arn": "arn:${Partition}:connect:${Region}:${Account}:phone-number/${PhoneNumberId}"
    },
    {
        "service": "Amazon Connect",
        "resource": "wildcard-phone-number",
        "prefix": "connect",
        "arn": "arn:${Partition}:connect:${Region}:${Account}:phone-number/*"
    },
    {
        "service": "Amazon Connect",
        "resource": "integration-association",
        "prefix": "connect",
        "arn": "arn:${Partition}:connect:${Region}:${Account}:instance/${InstanceId}/integration-association/${IntegrationAssociationId}"
    },
    {
        "service": "Amazon Connect",
        "resource": "use-case",
        "prefix": "connect",
        "arn": "arn:${Partition}:connect:${Region}:${Account}:instance/${InstanceId}/use-case/${UseCaseId}"
    },
    {
        "service": "Amazon Connect",
        "resource": "vocabulary",
        "prefix": "connect",
        "arn": "arn:${Partition}:connect:${Region}:${Account}:instance/${InstanceId}/vocabulary/${VocabularyId}"
    },
    {
        "service": "Amazon Connect",
        "resource": "traffic-distribution-group",
        "prefix": "connect",
        "arn": "arn:${Partition}:connect:${Region}:${Account}:traffic-distribution-group/${TrafficDistributionGroupId}"
    },
    {
        "service": "Amazon Connect",
        "resource": "rule",
        "prefix": "connect",
        "arn": "arn:${Partition}:connect:${Region}:${Account}:instance/${InstanceId}/rule/${RuleId}"
    },
    {
        "service": "Amazon Connect",
        "resource": "evaluation-form",
        "prefix": "connect",
        "arn": "arn:${Partition}:connect:${Region}:${Account}:instance/${InstanceId}/evaluation-form/${FormId}"
    },
    {
        "service": "Amazon Connect",
        "resource": "contact-evaluation",
        "prefix": "connect",
        "arn": "arn:${Partition}:connect:${Region}:${Account}:instance/${InstanceId}/contact-evaluation/${EvaluationId}"
    },
    {
        "service": "Amazon Connect",
        "resource": "prompt",
        "prefix": "connect",
        "arn": "arn:${Partition}:connect:${Region}:${Account}:instance/${InstanceId}/prompt/${PromptId}"
    },
    {
        "service": "Amazon Connect",
        "resource": "customer-managed-view",
        "prefix": "connect",
        "arn": "arn:${Partition}:connect:${Region}:${Account}:instance/${InstanceId}/view/${ViewId}"
    },
    {
        "service": "Amazon Connect",
        "resource": "aws-managed-view",
        "prefix": "connect",
        "arn": "arn:${Partition}:connect:${Region}:aws:view/${ViewId}"
    },
    {
        "service": "Amazon Connect",
        "resource": "qualified-customer-managed-view",
        "prefix": "connect",
        "arn": "arn:${Partition}:connect:${Region}:${Account}:instance/${InstanceId}/view/${ViewId}:${ViewQualifier}"
    },
    {
        "service": "Amazon Connect",
        "resource": "qualified-aws-managed-view",
        "prefix": "connect",
        "arn": "arn:${Partition}:connect:${Region}:aws:view/${ViewId}:${ViewQualifier}"
    },
    {
        "service": "Amazon Connect",
        "resource": "customer-managed-view-version",
        "prefix": "connect",
        "arn": "arn:${Partition}:connect:${Region}:${Account}:instance/${InstanceId}/view/${ViewId}:${ViewVersion}"
    },
    {
        "service": "Amazon Connect",
        "resource": "attached-file",
        "prefix": "connect",
        "arn": "arn:${Partition}:connect:${Region}:${Account}:instance/${InstanceId}/file/${FileId}"
    },
    {
        "service": "Amazon Connect",
        "resource": "email-address",
        "prefix": "connect",
        "arn": "arn:${Partition}:connect:${Region}:${Account}:instance/${InstanceId}/email-address/${EmailAddressId}"
    },
    {
        "service": "Amazon Connect Cases",
        "resource": "Case",
        "prefix": "cases",
        "arn": "arn:${Partition}:cases:${Region}:${Account}:domain/${DomainId}/case/${CaseId}"
    },
    {
        "service": "Amazon Connect Cases",
        "resource": "Domain",
        "prefix": "cases",
        "arn": "arn:${Partition}:cases:${Region}:${Account}:domain/${DomainId}"
    },
    {
        "service": "Amazon Connect Cases",
        "resource": "Field",
        "prefix": "cases",
        "arn": "arn:${Partition}:cases:${Region}:${Account}:domain/${DomainId}/field/${FieldId}"
    },
    {
        "service": "Amazon Connect Cases",
        "resource": "Layout",
        "prefix": "cases",
        "arn": "arn:${Partition}:cases:${Region}:${Account}:domain/${DomainId}/layout/${LayoutId}"
    },
    {
        "service": "Amazon Connect Cases",
        "resource": "RelatedItem",
        "prefix": "cases",
        "arn": "arn:${Partition}:cases:${Region}:${Account}:domain/${DomainId}/case/${CaseId}/related-item/${RelatedItemId}"
    },
    {
        "service": "Amazon Connect Cases",
        "resource": "Template",
        "prefix": "cases",
        "arn": "arn:${Partition}:cases:${Region}:${Account}:domain/${DomainId}/template/${TemplateId}"
    },
    {
        "service": "Amazon Connect Cases",
        "resource": "CaseRule",
        "prefix": "cases",
        "arn": "arn:${Partition}:cases:${Region}:${Account}:domain/${DomainId}/case-rule/${CaseRuleId}"
    },
    {
        "service": "Amazon Connect Customer Profiles",
        "resource": "domains",
        "prefix": "profile",
        "arn": "arn:${Partition}:profile:${Region}:${Account}:domains/${DomainName}"
    },
    {
        "service": "Amazon Connect Customer Profiles",
        "resource": "object-types",
        "prefix": "profile",
        "arn": "arn:${Partition}:profile:${Region}:${Account}:domains/${DomainName}/object-types/${ObjectTypeName}"
    },
    {
        "service": "Amazon Connect Customer Profiles",
        "resource": "integrations",
        "prefix": "profile",
        "arn": "arn:${Partition}:profile:${Region}:${Account}:domains/${DomainName}/integrations/${Uri}"
    },
    {
        "service": "Amazon Connect Customer Profiles",
        "resource": "event-streams",
        "prefix": "profile",
        "arn": "arn:${Partition}:profile:${Region}:${Account}:domains/${DomainName}/event-streams/${EventStreamName}"
    },
    {
        "service": "Amazon Connect Customer Profiles",
        "resource": "calculated-attributes",
        "prefix": "profile",
        "arn": "arn:${Partition}:profile:${Region}:${Account}:domains/${DomainName}/calculated-attributes/${CalculatedAttributeName}"
    },
    {
        "service": "Amazon Connect Customer Profiles",
        "resource": "segment-definitions",
        "prefix": "profile",
        "arn": "arn:${Partition}:profile:${Region}:${Account}:domains/${DomainName}/segment-definitions/${SegmentDefinitionName}"
    },
    {
        "service": "Amazon Connect Customer Profiles",
        "resource": "event-triggers",
        "prefix": "profile",
        "arn": "arn:${Partition}:profile:${Region}:${Account}:domains/${DomainName}/event-triggers/${EventTriggerName}"
    },
    {
        "service": "Amazon Connect Customer Profiles",
        "resource": "layouts",
        "prefix": "profile",
        "arn": "arn:${Partition}:profile:${Region}:${Account}:domains/${DomainName}/layouts/${LayoutDefinitionName}"
    },
    {
        "service": "Amazon Connect Outbound Campaigns",
        "resource": "campaign",
        "prefix": "connect-campaigns",
        "arn": "arn:${Partition}:connect-campaigns:${Region}:${Account}:campaign/${CampaignId}"
    },
    {
        "service": "Amazon Connect Voice ID",
        "resource": "domain",
        "prefix": "voiceid",
        "arn": "arn:${Partition}:voiceid:${Region}:${Account}:domain/${DomainId}"
    },
    {
        "service": "AWS Management Console Mobile App",
        "resource": "DeviceIdentity",
        "prefix": "consoleapp",
        "arn": "arn:${Partition}:consoleapp::${Account}:device/${DeviceId}/identity/${IdentityId}"
    },
    {
        "service": "AWS Control Catalog",
        "resource": "common-control",
        "prefix": "controlcatalog",
        "arn": "arn:${Partition}:controlcatalog:::common-control/${CommonControlId}"
    },
    {
        "service": "AWS Control Catalog",
        "resource": "control",
        "prefix": "controlcatalog",
        "arn": "arn:${Partition}:controlcatalog:::control/${ControlId}"
    },
    {
        "service": "AWS Control Catalog",
        "resource": "domain",
        "prefix": "controlcatalog",
        "arn": "arn:${Partition}:controlcatalog:::domain/${DomainId}"
    },
    {
        "service": "AWS Control Catalog",
        "resource": "objective",
        "prefix": "controlcatalog",
        "arn": "arn:${Partition}:controlcatalog:::objective/${ObjectiveId}"
    },
    {
        "service": "AWS Control Tower",
        "resource": "EnabledControl",
        "prefix": "controltower",
        "arn": "arn:${Partition}:controltower:${Region}:${Account}:enabledcontrol/${EnabledControlId}"
    },
    {
        "service": "AWS Control Tower",
        "resource": "Baseline",
        "prefix": "controltower",
        "arn": "arn:${Partition}:controltower:${Region}::baseline/${BaselineId}"
    },
    {
        "service": "AWS Control Tower",
        "resource": "EnabledBaseline",
        "prefix": "controltower",
        "arn": "arn:${Partition}:controltower:${Region}:${Account}:enabledbaseline/${EnabledBaselineId}"
    },
    {
        "service": "AWS Control Tower",
        "resource": "LandingZone",
        "prefix": "controltower",
        "arn": "arn:${Partition}:controltower:${Region}:${Account}:landingzone/${LandingZoneId}"
    },
    {
        "service": "AWS Cost and Usage Report",
        "resource": "cur",
        "prefix": "cur",
        "arn": "arn:${Partition}:cur:${Region}:${Account}:definition/${ReportName}"
    },
    {
        "service": "AWS Cost Explorer Service",
        "resource": "anomalysubscription",
        "prefix": "ce",
        "arn": "arn:${Partition}:ce::${Account}:anomalysubscription/${Identifier}"
    },
    {
        "service": "AWS Cost Explorer Service",
        "resource": "anomalymonitor",
        "prefix": "ce",
        "arn": "arn:${Partition}:ce::${Account}:anomalymonitor/${Identifier}"
    },
    {
        "service": "AWS Cost Explorer Service",
        "resource": "costcategory",
        "prefix": "ce",
        "arn": "arn:${Partition}:ce::${Account}:costcategory/${Identifier}"
    },
    {
        "service": "AWS Data Exchange",
        "resource": "jobs",
        "prefix": "dataexchange",
        "arn": "arn:${Partition}:dataexchange:${Region}:${Account}:jobs/${JobId}"
    },
    {
        "service": "AWS Data Exchange",
        "resource": "data-sets",
        "prefix": "dataexchange",
        "arn": "arn:${Partition}:dataexchange:${Region}:${Account}:data-sets/${DataSetId}"
    },
    {
        "service": "AWS Data Exchange",
        "resource": "entitled-data-sets",
        "prefix": "dataexchange",
        "arn": "arn:${Partition}:dataexchange:${Region}::data-sets/${DataSetId}"
    },
    {
        "service": "AWS Data Exchange",
        "resource": "revisions",
        "prefix": "dataexchange",
        "arn": "arn:${Partition}:dataexchange:${Region}:${Account}:data-sets/${DataSetId}/revisions/${RevisionId}"
    },
    {
        "service": "AWS Data Exchange",
        "resource": "entitled-revisions",
        "prefix": "dataexchange",
        "arn": "arn:${Partition}:dataexchange:${Region}::data-sets/${DataSetId}/revisions/${RevisionId}"
    },
    {
        "service": "AWS Data Exchange",
        "resource": "assets",
        "prefix": "dataexchange",
        "arn": "arn:${Partition}:dataexchange:${Region}:${Account}:data-sets/${DataSetId}/revisions/${RevisionId}/assets/${AssetId}"
    },
    {
        "service": "AWS Data Exchange",
        "resource": "entitled-assets",
        "prefix": "dataexchange",
        "arn": "arn:${Partition}:dataexchange:${Region}::data-sets/${DataSetId}/revisions/${RevisionId}/assets/${AssetId}"
    },
    {
        "service": "AWS Data Exchange",
        "resource": "event-actions",
        "prefix": "dataexchange",
        "arn": "arn:${Partition}:dataexchange:${Region}:${Account}:event-actions/${EventActionId}"
    },
    {
        "service": "AWS Data Exchange",
        "resource": "data-grants",
        "prefix": "dataexchange",
        "arn": "arn:${Partition}:dataexchange:${Region}:${Account}:data-grants/${DataGrantId}"
    },
    {
        "service": "Amazon Data Lifecycle Manager",
        "resource": "policy",
        "prefix": "dlm",
        "arn": "arn:${Partition}:dlm:${Region}:${Account}:policy/${ResourceName}"
    },
    {
        "service": "AWS Data Pipeline",
        "resource": "pipeline",
        "prefix": "datapipeline",
        "arn": "arn:${Partition}:datapipeline:${Region}:${Account}:pipeline/${PipelineId}"
    },
    {
        "service": "AWS Database Migration Service",
        "resource": "Certificate",
        "prefix": "dms",
        "arn": "arn:${Partition}:dms:${Region}:${Account}:cert:*"
    },
    {
        "service": "AWS Database Migration Service",
        "resource": "DataProvider",
        "prefix": "dms",
        "arn": "arn:${Partition}:dms:${Region}:${Account}:data-provider:*"
    },
    {
        "service": "AWS Database Migration Service",
        "resource": "DataMigration",
        "prefix": "dms",
        "arn": "arn:${Partition}:dms:${Region}:${Account}:data-migration:*"
    },
    {
        "service": "AWS Database Migration Service",
        "resource": "Endpoint",
        "prefix": "dms",
        "arn": "arn:${Partition}:dms:${Region}:${Account}:endpoint:*"
    },
    {
        "service": "AWS Database Migration Service",
        "resource": "EventSubscription",
        "prefix": "dms",
        "arn": "arn:${Partition}:dms:${Region}:${Account}:es:*"
    },
    {
        "service": "AWS Database Migration Service",
        "resource": "InstanceProfile",
        "prefix": "dms",
        "arn": "arn:${Partition}:dms:${Region}:${Account}:instance-profile:*"
    },
    {
        "service": "AWS Database Migration Service",
        "resource": "MigrationProject",
        "prefix": "dms",
        "arn": "arn:${Partition}:dms:${Region}:${Account}:migration-project:*"
    },
    {
        "service": "AWS Database Migration Service",
        "resource": "ReplicationConfig",
        "prefix": "dms",
        "arn": "arn:${Partition}:dms:${Region}:${Account}:replication-config:*"
    },
    {
        "service": "AWS Database Migration Service",
        "resource": "ReplicationInstance",
        "prefix": "dms",
        "arn": "arn:${Partition}:dms:${Region}:${Account}:rep:*"
    },
    {
        "service": "AWS Database Migration Service",
        "resource": "ReplicationSubnetGroup",
        "prefix": "dms",
        "arn": "arn:${Partition}:dms:${Region}:${Account}:subgrp:*"
    },
    {
        "service": "AWS Database Migration Service",
        "resource": "ReplicationTask",
        "prefix": "dms",
        "arn": "arn:${Partition}:dms:${Region}:${Account}:task:*"
    },
    {
        "service": "AWS Database Migration Service",
        "resource": "ReplicationTaskAssessmentRun",
        "prefix": "dms",
        "arn": "arn:${Partition}:dms:${Region}:${Account}:assessment-run:*"
    },
    {
        "service": "AWS Database Migration Service",
        "resource": "ReplicationTaskIndividualAssessment",
        "prefix": "dms",
        "arn": "arn:${Partition}:dms:${Region}:${Account}:individual-assessment:*"
    },
    {
        "service": "AWS DataSync",
        "resource": "agent",
        "prefix": "datasync",
        "arn": "arn:${Partition}:datasync:${Region}:${AccountId}:agent/${AgentId}"
    },
    {
        "service": "AWS DataSync",
        "resource": "location",
        "prefix": "datasync",
        "arn": "arn:${Partition}:datasync:${Region}:${AccountId}:location/${LocationId}"
    },
    {
        "service": "AWS DataSync",
        "resource": "task",
        "prefix": "datasync",
        "arn": "arn:${Partition}:datasync:${Region}:${AccountId}:task/${TaskId}"
    },
    {
        "service": "AWS DataSync",
        "resource": "taskexecution",
        "prefix": "datasync",
        "arn": "arn:${Partition}:datasync:${Region}:${AccountId}:task/${TaskId}/execution/${ExecutionId}"
    },
    {
        "service": "AWS DataSync",
        "resource": "storagesystem",
        "prefix": "datasync",
        "arn": "arn:${Partition}:datasync:${Region}:${AccountId}:system/${StorageSystemId}"
    },
    {
        "service": "AWS DataSync",
        "resource": "discoveryjob",
        "prefix": "datasync",
        "arn": "arn:${Partition}:datasync:${Region}:${AccountId}:system/${StorageSystemId}/job/${DiscoveryJobId}"
    },
    {
        "service": "Amazon DataZone",
        "resource": "domain",
        "prefix": "datazone",
        "arn": "arn:${Partition}:datazone:${Region}:${Account}:domain/${DomainId}"
    },
    {
        "service": "AWS Deadline Cloud",
        "resource": "budget",
        "prefix": "deadline",
        "arn": "arn:${Partition}:deadline:${Region}:${Account}:farm/${FarmId}/budget/${BudgetId}"
    },
    {
        "service": "AWS Deadline Cloud",
        "resource": "farm",
        "prefix": "deadline",
        "arn": "arn:${Partition}:deadline:${Region}:${Account}:farm/${FarmId}"
    },
    {
        "service": "AWS Deadline Cloud",
        "resource": "fleet",
        "prefix": "deadline",
        "arn": "arn:${Partition}:deadline:${Region}:${Account}:farm/${FarmId}/fleet/${FleetId}"
    },
    {
        "service": "AWS Deadline Cloud",
        "resource": "job",
        "prefix": "deadline",
        "arn": "arn:${Partition}:deadline:${Region}:${Account}:farm/${FarmId}/queue/${QueueId}/job/${JobId}"
    },
    {
        "service": "AWS Deadline Cloud",
        "resource": "license-endpoint",
        "prefix": "deadline",
        "arn": "arn:${Partition}:deadline:${Region}:${Account}:license-endpoint/${LicenseEndpointId}"
    },
    {
        "service": "AWS Deadline Cloud",
        "resource": "metered-product",
        "prefix": "deadline",
        "arn": "arn:${Partition}:deadline:${Region}:${Account}:license-endpoint/${LicenseEndpointId}/metered-product/${ProductId}"
    },
    {
        "service": "AWS Deadline Cloud",
        "resource": "monitor",
        "prefix": "deadline",
        "arn": "arn:${Partition}:deadline:${Region}:${Account}:monitor/${MonitorId}"
    },
    {
        "service": "AWS Deadline Cloud",
        "resource": "queue",
        "prefix": "deadline",
        "arn": "arn:${Partition}:deadline:${Region}:${Account}:farm/${FarmId}/queue/${QueueId}"
    },
    {
        "service": "AWS Deadline Cloud",
        "resource": "worker",
        "prefix": "deadline",
        "arn": "arn:${Partition}:deadline:${Region}:${Account}:farm/${FarmId}/fleet/${FleetId}/worker/${WorkerId}"
    },
    {
        "service": "AWS DeepComposer",
        "resource": "model",
        "prefix": "deepcomposer",
        "arn": "arn:${Partition}:deepcomposer:${Region}:${Account}:model/${ModelId}"
    },
    {
        "service": "AWS DeepComposer",
        "resource": "composition",
        "prefix": "deepcomposer",
        "arn": "arn:${Partition}:deepcomposer:${Region}:${Account}:composition/${CompositionId}"
    },
    {
        "service": "AWS DeepComposer",
        "resource": "audio",
        "prefix": "deepcomposer",
        "arn": "arn:${Partition}:deepcomposer:${Region}:${Account}:audio/${AudioId}"
    },
    {
        "service": "AWS DeepRacer",
        "resource": "car",
        "prefix": "deepracer",
        "arn": "arn:${Partition}:deepracer:${Region}:${Account}:car/${ResourceId}"
    },
    {
        "service": "AWS DeepRacer",
        "resource": "evaluation_job",
        "prefix": "deepracer",
        "arn": "arn:${Partition}:deepracer:${Region}:${Account}:evaluation_job/${ResourceId}"
    },
    {
        "service": "AWS DeepRacer",
        "resource": "leaderboard",
        "prefix": "deepracer",
        "arn": "arn:${Partition}:deepracer:${Region}::leaderboard/${ResourceId}"
    },
    {
        "service": "AWS DeepRacer",
        "resource": "leaderboard_evaluation_job",
        "prefix": "deepracer",
        "arn": "arn:${Partition}:deepracer:${Region}:${Account}:leaderboard_evaluation_job/${ResourceId}"
    },
    {
        "service": "AWS DeepRacer",
        "resource": "reinforcement_learning_model",
        "prefix": "deepracer",
        "arn": "arn:${Partition}:deepracer:${Region}:${Account}:model/reinforcement_learning/${ResourceId}"
    },
    {
        "service": "AWS DeepRacer",
        "resource": "track",
        "prefix": "deepracer",
        "arn": "arn:${Partition}:deepracer:${Region}::track/${ResourceId}"
    },
    {
        "service": "AWS DeepRacer",
        "resource": "training_job",
        "prefix": "deepracer",
        "arn": "arn:${Partition}:deepracer:${Region}:${Account}:training_job/${ResourceId}"
    },
    {
        "service": "Amazon Detective",
        "resource": "Graph",
        "prefix": "detective",
        "arn": "arn:${Partition}:detective:${Region}:${Account}:graph:${ResourceId}"
    },
    {
        "service": "AWS Device Farm",
        "resource": "project",
        "prefix": "devicefarm",
        "arn": "arn:${Partition}:devicefarm:${Region}:${Account}:project:${ResourceId}"
    },
    {
        "service": "AWS Device Farm",
        "resource": "run",
        "prefix": "devicefarm",
        "arn": "arn:${Partition}:devicefarm:${Region}:${Account}:run:${ResourceId}"
    },
    {
        "service": "AWS Device Farm",
        "resource": "job",
        "prefix": "devicefarm",
        "arn": "arn:${Partition}:devicefarm:${Region}:${Account}:job:${ResourceId}"
    },
    {
        "service": "AWS Device Farm",
        "resource": "suite",
        "prefix": "devicefarm",
        "arn": "arn:${Partition}:devicefarm:${Region}:${Account}:suite:${ResourceId}"
    },
    {
        "service": "AWS Device Farm",
        "resource": "test",
        "prefix": "devicefarm",
        "arn": "arn:${Partition}:devicefarm:${Region}:${Account}:test:${ResourceId}"
    },
    {
        "service": "AWS Device Farm",
        "resource": "upload",
        "prefix": "devicefarm",
        "arn": "arn:${Partition}:devicefarm:${Region}:${Account}:upload:${ResourceId}"
    },
    {
        "service": "AWS Device Farm",
        "resource": "artifact",
        "prefix": "devicefarm",
        "arn": "arn:${Partition}:devicefarm:${Region}:${Account}:artifact:${ResourceId}"
    },
    {
        "service": "AWS Device Farm",
        "resource": "sample",
        "prefix": "devicefarm",
        "arn": "arn:${Partition}:devicefarm:${Region}:${Account}:sample:${ResourceId}"
    },
    {
        "service": "AWS Device Farm",
        "resource": "networkprofile",
        "prefix": "devicefarm",
        "arn": "arn:${Partition}:devicefarm:${Region}:${Account}:networkprofile:${ResourceId}"
    },
    {
        "service": "AWS Device Farm",
        "resource": "deviceinstance",
        "prefix": "devicefarm",
        "arn": "arn:${Partition}:devicefarm:${Region}::deviceinstance:${ResourceId}"
    },
    {
        "service": "AWS Device Farm",
        "resource": "session",
        "prefix": "devicefarm",
        "arn": "arn:${Partition}:devicefarm:${Region}:${Account}:session:${ResourceId}"
    },
    {
        "service": "AWS Device Farm",
        "resource": "devicepool",
        "prefix": "devicefarm",
        "arn": "arn:${Partition}:devicefarm:${Region}:${Account}:devicepool:${ResourceId}"
    },
    {
        "service": "AWS Device Farm",
        "resource": "device",
        "prefix": "devicefarm",
        "arn": "arn:${Partition}:devicefarm:${Region}::device:${ResourceId}"
    },
    {
        "service": "AWS Device Farm",
        "resource": "instanceprofile",
        "prefix": "devicefarm",
        "arn": "arn:${Partition}:devicefarm:${Region}:${Account}:instanceprofile:${ResourceId}"
    },
    {
        "service": "AWS Device Farm",
        "resource": "vpceconfiguration",
        "prefix": "devicefarm",
        "arn": "arn:${Partition}:devicefarm:${Region}:${Account}:vpceconfiguration:${ResourceId}"
    },
    {
        "service": "AWS Device Farm",
        "resource": "testgrid-project",
        "prefix": "devicefarm",
        "arn": "arn:${Partition}:devicefarm:${Region}:${Account}:testgrid-project:${ResourceId}"
    },
    {
        "service": "AWS Device Farm",
        "resource": "testgrid-session",
        "prefix": "devicefarm",
        "arn": "arn:${Partition}:devicefarm:${Region}:${Account}:testgrid-session:${ResourceId}"
    },
    {
        "service": "AWS Diagnostic tools",
        "resource": "execution",
        "prefix": "ts",
        "arn": "arn:${Partition}:ts::${Account}:execution/${UserId}/${ToolId}/${ExecutionId}"
    },
    {
        "service": "AWS Diagnostic tools",
        "resource": "tool",
        "prefix": "ts",
        "arn": "arn:${Partition}:ts::aws:tool/${ToolId}"
    },
    {
        "service": "AWS Direct Connect",
        "resource": "dxcon",
        "prefix": "directconnect",
        "arn": "arn:${Partition}:directconnect:${Region}:${Account}:dxcon/${ConnectionId}"
    },
    {
        "service": "AWS Direct Connect",
        "resource": "dxlag",
        "prefix": "directconnect",
        "arn": "arn:${Partition}:directconnect:${Region}:${Account}:dxlag/${LagId}"
    },
    {
        "service": "AWS Direct Connect",
        "resource": "dxvif",
        "prefix": "directconnect",
        "arn": "arn:${Partition}:directconnect:${Region}:${Account}:dxvif/${VirtualInterfaceId}"
    },
    {
        "service": "AWS Direct Connect",
        "resource": "dx-gateway",
        "prefix": "directconnect",
        "arn": "arn:${Partition}:directconnect::${Account}:dx-gateway/${DirectConnectGatewayId}"
    },
    {
        "service": "AWS Directory Service",
        "resource": "directory",
        "prefix": "ds",
        "arn": "arn:${Partition}:ds:${Region}:${Account}:directory/${DirectoryId}"
    },
    {
        "service": "Amazon DocumentDB Elastic Clusters",
        "resource": "cluster",
        "prefix": "docdb-elastic",
        "arn": "arn:${Partition}:docdb-elastic:${Region}:${Account}:cluster/${ResourceId}"
    },
    {
        "service": "Amazon DocumentDB Elastic Clusters",
        "resource": "cluster-snapshot",
        "prefix": "docdb-elastic",
        "arn": "arn:${Partition}:docdb-elastic:${Region}:${Account}:cluster-snapshot/${ResourceId}"
    },
    {
        "service": "Amazon DynamoDB",
        "resource": "index",
        "prefix": "dynamodb",
        "arn": "arn:${Partition}:dynamodb:${Region}:${Account}:table/${TableName}/index/${IndexName}"
    },
    {
        "service": "Amazon DynamoDB",
        "resource": "stream",
        "prefix": "dynamodb",
        "arn": "arn:${Partition}:dynamodb:${Region}:${Account}:table/${TableName}/stream/${StreamLabel}"
    },
    {
        "service": "Amazon DynamoDB",
        "resource": "table",
        "prefix": "dynamodb",
        "arn": "arn:${Partition}:dynamodb:${Region}:${Account}:table/${TableName}"
    },
    {
        "service": "Amazon DynamoDB",
        "resource": "backup",
        "prefix": "dynamodb",
        "arn": "arn:${Partition}:dynamodb:${Region}:${Account}:table/${TableName}/backup/${BackupName}"
    },
    {
        "service": "Amazon DynamoDB",
        "resource": "export",
        "prefix": "dynamodb",
        "arn": "arn:${Partition}:dynamodb:${Region}:${Account}:table/${TableName}/export/${ExportName}"
    },
    {
        "service": "Amazon DynamoDB",
        "resource": "global-table",
        "prefix": "dynamodb",
        "arn": "arn:${Partition}:dynamodb::${Account}:global-table/${GlobalTableName}"
    },
    {
        "service": "Amazon DynamoDB",
        "resource": "import",
        "prefix": "dynamodb",
        "arn": "arn:${Partition}:dynamodb:${Region}:${Account}:table/${TableName}/import/${ImportName}"
    },
    {
        "service": "Amazon DynamoDB Accelerator (DAX)",
        "resource": "application",
        "prefix": "dax",
        "arn": "arn:${Partition}:dax:${Region}:${Account}:cache/${ClusterName}"
    },
    {
        "service": "Amazon EC2",
        "resource": "elastic-ip",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:elastic-ip/${AllocationId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "capacity-reservation-fleet",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:capacity-reservation-fleet/${CapacityReservationFleetId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "capacity-reservation",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:capacity-reservation/${CapacityReservationId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "carrier-gateway",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:carrier-gateway/${CarrierGatewayId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "client-vpn-endpoint",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:client-vpn-endpoint/${ClientVpnEndpointId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "customer-gateway",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:customer-gateway/${CustomerGatewayId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "declarative-policies-report",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:declarative-policies-report/${DeclarativePoliciesReportId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "dedicated-host",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:dedicated-host/${DedicatedHostId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "dhcp-options",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:dhcp-options/${DhcpOptionsId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "egress-only-internet-gateway",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:egress-only-internet-gateway/${EgressOnlyInternetGatewayId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "elastic-gpu",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:elastic-gpu/${ElasticGpuId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "export-image-task",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:export-image-task/${ExportImageTaskId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "export-instance-task",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:export-instance-task/${ExportTaskId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "fleet",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:fleet/${FleetId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "fpga-image",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:fpga-image/${FpgaImageId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "host-reservation",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:host-reservation/${HostReservationId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "image",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}::image/${ImageId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "import-image-task",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:import-image-task/${ImportImageTaskId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "import-snapshot-task",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:import-snapshot-task/${ImportSnapshotTaskId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "instance-connect-endpoint",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:instance-connect-endpoint/${InstanceConnectEndpointId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "instance-event-window",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:instance-event-window/${InstanceEventWindowId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "instance",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:instance/${InstanceId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "internet-gateway",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:internet-gateway/${InternetGatewayId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "ipam-external-resource-verification-token",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2::${Account}:ipam-external-resource-verification-token/${IpamExternalResourceVerificationTokenId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "ipam",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2::${Account}:ipam/${IpamId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "ipam-pool",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2::${Account}:ipam-pool/${IpamPoolId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "ipam-resource-discovery-association",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2::${Account}:ipam-resource-discovery-association/${IpamResourceDiscoveryAssociationId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "ipam-resource-discovery",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2::${Account}:ipam-resource-discovery/${IpamResourceDiscoveryId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "ipam-scope",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2::${Account}:ipam-scope/${IpamScopeId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "coip-pool",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:coip-pool/${Ipv4PoolCoipId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "ipv4pool-ec2",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:ipv4pool-ec2/${Ipv4PoolEc2Id}"
    },
    {
        "service": "Amazon EC2",
        "resource": "ipv6pool-ec2",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:ipv6pool-ec2/${Ipv6PoolEc2Id}"
    },
    {
        "service": "Amazon EC2",
        "resource": "key-pair",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:key-pair/${KeyPairName}"
    },
    {
        "service": "Amazon EC2",
        "resource": "launch-template",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:launch-template/${LaunchTemplateId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "local-gateway",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:local-gateway/${LocalGatewayId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "local-gateway-route-table-virtual-interface-group-association",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:local-gateway-route-table-virtual-interface-group-association/${LocalGatewayRouteTableVirtualInterfaceGroupAssociationId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "local-gateway-route-table-vpc-association",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:local-gateway-route-table-vpc-association/${LocalGatewayRouteTableVpcAssociationId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "local-gateway-route-table",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:local-gateway-route-table/${LocalGatewayRoutetableId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "local-gateway-virtual-interface-group",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:local-gateway-virtual-interface-group/${LocalGatewayVirtualInterfaceGroupId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "local-gateway-virtual-interface",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:local-gateway-virtual-interface/${LocalGatewayVirtualInterfaceId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "natgateway",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:natgateway/${NatGatewayId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "network-acl",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:network-acl/${NaclId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "network-insights-access-scope-analysis",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:network-insights-access-scope-analysis/${NetworkInsightsAccessScopeAnalysisId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "network-insights-access-scope",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:network-insights-access-scope/${NetworkInsightsAccessScopeId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "network-insights-analysis",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:network-insights-analysis/${NetworkInsightsAnalysisId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "network-insights-path",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:network-insights-path/${NetworkInsightsPathId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "network-interface",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:network-interface/${NetworkInterfaceId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "outpost-lag",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:outpost-lag/${OutpostLagId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "placement-group",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:placement-group/${PlacementGroupName}"
    },
    {
        "service": "Amazon EC2",
        "resource": "prefix-list",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:prefix-list/${PrefixListId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "replace-root-volume-task",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:replace-root-volume-task/${ReplaceRootVolumeTaskId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "reserved-instances",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:reserved-instances/${ReservationId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "route-server-endpoint",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:route-server-endpoint/${RouteServerEndpointId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "route-server",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:route-server/${RouteServerId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "route-server-peer",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:route-server-peer/${RouteServerPeerId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "route-table",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:route-table/${RouteTableId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "security-group",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:security-group/${SecurityGroupId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "security-group-rule",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:security-group-rule/${SecurityGroupRuleId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "snapshot",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}::snapshot/${SnapshotId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "spot-fleet-request",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:spot-fleet-request/${SpotFleetRequestId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "spot-instances-request",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:spot-instances-request/${SpotInstanceRequestId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "subnet-cidr-reservation",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:subnet-cidr-reservation/${SubnetCidrReservationId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "subnet",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:subnet/${SubnetId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "traffic-mirror-filter",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:traffic-mirror-filter/${TrafficMirrorFilterId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "traffic-mirror-filter-rule",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:traffic-mirror-filter-rule/${TrafficMirrorFilterRuleId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "traffic-mirror-session",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:traffic-mirror-session/${TrafficMirrorSessionId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "traffic-mirror-target",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:traffic-mirror-target/${TrafficMirrorTargetId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "transit-gateway-attachment",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-attachment/${TransitGatewayAttachmentId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "transit-gateway-connect-peer",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-connect-peer/${TransitGatewayConnectPeerId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "transit-gateway",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway/${TransitGatewayId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "transit-gateway-multicast-domain",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-multicast-domain/${TransitGatewayMulticastDomainId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "transit-gateway-policy-table",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-policy-table/${TransitGatewayPolicyTableId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "transit-gateway-route-table-announcement",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-route-table-announcement/${TransitGatewayRouteTableAnnouncementId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "transit-gateway-route-table",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:transit-gateway-route-table/${TransitGatewayRouteTableId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "verified-access-endpoint",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:verified-access-endpoint/${VerifiedAccessEndpointId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "verified-access-endpoint-target",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:verified-access-endpoint-target/${VerifiedAccessEndpointTargetId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "verified-access-group",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:verified-access-group/${VerifiedAccessGroupId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "verified-access-instance",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:verified-access-instance/${VerifiedAccessInstanceId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "verified-access-policy",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:verified-access-policy/${VerifiedAccessPolicyId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "verified-access-trust-provider",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:verified-access-trust-provider/${VerifiedAccessTrustProviderId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "volume",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:volume/${VolumeId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "vpc-block-public-access-exclusion",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:vpc-block-public-access-exclusion/${VpcBlockPublicAccessExclusionId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "vpc-endpoint-connection",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:vpc-endpoint-connection/${VpcEndpointConnectionId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "vpc-endpoint",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:vpc-endpoint/${VpcEndpointId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "vpc-endpoint-service",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:vpc-endpoint-service/${VpcEndpointServiceId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "vpc-endpoint-service-permission",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:vpc-endpoint-service-permission/${VpcEndpointServicePermissionId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "vpc-flow-log",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:vpc-flow-log/${VpcFlowLogId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "vpc",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:vpc/${VpcId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "vpc-peering-connection",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:vpc-peering-connection/${VpcPeeringConnectionId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "vpn-connection-device-type",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:vpn-connection-device-type/${VpnConnectionDeviceTypeId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "vpn-connection",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:vpn-connection/${VpnConnectionId}"
    },
    {
        "service": "Amazon EC2",
        "resource": "vpn-gateway",
        "prefix": "ec2",
        "arn": "arn:${Partition}:ec2:${Region}:${Account}:vpn-gateway/${VpnGatewayId}"
    },
    {
        "service": "Amazon EC2 Auto Scaling",
        "resource": "autoScalingGroup",
        "prefix": "autoscaling",
        "arn": "arn:${Partition}:autoscaling:${Region}:${Account}:autoScalingGroup:${GroupId}:autoScalingGroupName/${GroupFriendlyName}"
    },
    {
        "service": "Amazon EC2 Auto Scaling",
        "resource": "launchConfiguration",
        "prefix": "autoscaling",
        "arn": "arn:${Partition}:autoscaling:${Region}:${Account}:launchConfiguration:${Id}:launchConfigurationName/${LaunchConfigurationName}"
    },
    {
        "service": "Amazon EC2 Image Builder",
        "resource": "component",
        "prefix": "imagebuilder",
        "arn": "arn:${Partition}:imagebuilder:${Region}:${Account}:component/${ComponentName}/${ComponentVersion}/${ComponentBuildVersion}"
    },
    {
        "service": "Amazon EC2 Image Builder",
        "resource": "componentVersion",
        "prefix": "imagebuilder",
        "arn": "arn:${Partition}:imagebuilder:${Region}:${Account}:component/${ComponentName}/${ComponentVersion}"
    },
    {
        "service": "Amazon EC2 Image Builder",
        "resource": "distributionConfiguration",
        "prefix": "imagebuilder",
        "arn": "arn:${Partition}:imagebuilder:${Region}:${Account}:distribution-configuration/${DistributionConfigurationName}"
    },
    {
        "service": "Amazon EC2 Image Builder",
        "resource": "image",
        "prefix": "imagebuilder",
        "arn": "arn:${Partition}:imagebuilder:${Region}:${Account}:image/${ImageName}/${ImageVersion}/${ImageBuildVersion}"
    },
    {
        "service": "Amazon EC2 Image Builder",
        "resource": "imageVersion",
        "prefix": "imagebuilder",
        "arn": "arn:${Partition}:imagebuilder:${Region}:${Account}:image/${ImageName}/${ImageVersion}"
    },
    {
        "service": "Amazon EC2 Image Builder",
        "resource": "imageRecipe",
        "prefix": "imagebuilder",
        "arn": "arn:${Partition}:imagebuilder:${Region}:${Account}:image-recipe/${ImageRecipeName}/${ImageRecipeVersion}"
    },
    {
        "service": "Amazon EC2 Image Builder",
        "resource": "containerRecipe",
        "prefix": "imagebuilder",
        "arn": "arn:${Partition}:imagebuilder:${Region}:${Account}:container-recipe/${ContainerRecipeName}/${ContainerRecipeVersion}"
    },
    {
        "service": "Amazon EC2 Image Builder",
        "resource": "imagePipeline",
        "prefix": "imagebuilder",
        "arn": "arn:${Partition}:imagebuilder:${Region}:${Account}:image-pipeline/${ImagePipelineName}"
    },
    {
        "service": "Amazon EC2 Image Builder",
        "resource": "infrastructureConfiguration",
        "prefix": "imagebuilder",
        "arn": "arn:${Partition}:imagebuilder:${Region}:${Account}:infrastructure-configuration/${ResourceId}"
    },
    {
        "service": "Amazon EC2 Image Builder",
        "resource": "lifecycleExecution",
        "prefix": "imagebuilder",
        "arn": "arn:${Partition}:imagebuilder:${Region}:${Account}:lifecycle-execution/${LifecycleExecutionId}"
    },
    {
        "service": "Amazon EC2 Image Builder",
        "resource": "lifecyclePolicy",
        "prefix": "imagebuilder",
        "arn": "arn:${Partition}:imagebuilder:${Region}:${Account}:lifecycle-policy/${LifecyclePolicyName}"
    },
    {
        "service": "Amazon EC2 Image Builder",
        "resource": "workflow",
        "prefix": "imagebuilder",
        "arn": "arn:${Partition}:imagebuilder:${Region}:${Account}:workflow/${WorkflowType}/${WorkflowName}/${WorkflowVersion}/${WorkflowBuildVersion}"
    },
    {
        "service": "Amazon EC2 Image Builder",
        "resource": "workflowVersion",
        "prefix": "imagebuilder",
        "arn": "arn:${Partition}:imagebuilder:${Region}:${Account}:workflow/${WorkflowType}/${WorkflowName}/${WorkflowVersion}"
    },
    {
        "service": "Amazon EC2 Image Builder",
        "resource": "workflowExecution",
        "prefix": "imagebuilder",
        "arn": "arn:${Partition}:imagebuilder:${Region}:${Account}:workflow-execution/${WorkflowExecutionId}"
    },
    {
        "service": "Amazon EC2 Image Builder",
        "resource": "workflowStepExecution",
        "prefix": "imagebuilder",
        "arn": "arn:${Partition}:imagebuilder:${Region}:${Account}:workflow-step-execution/${WorkflowStepExecutionId}"
    },
    {
        "service": "AWS Elastic Beanstalk",
        "resource": "application",
        "prefix": "elasticbeanstalk",
        "arn": "arn:${Partition}:elasticbeanstalk:${Region}:${Account}:application/${ApplicationName}"
    },
    {
        "service": "AWS Elastic Beanstalk",
        "resource": "applicationversion",
        "prefix": "elasticbeanstalk",
        "arn": "arn:${Partition}:elasticbeanstalk:${Region}:${Account}:applicationversion/${ApplicationName}/${VersionLabel}"
    },
    {
        "service": "AWS Elastic Beanstalk",
        "resource": "configurationtemplate",
        "prefix": "elasticbeanstalk",
        "arn": "arn:${Partition}:elasticbeanstalk:${Region}:${Account}:configurationtemplate/${ApplicationName}/${TemplateName}"
    },
    {
        "service": "AWS Elastic Beanstalk",
        "resource": "environment",
        "prefix": "elasticbeanstalk",
        "arn": "arn:${Partition}:elasticbeanstalk:${Region}:${Account}:environment/${ApplicationName}/${EnvironmentName}"
    },
    {
        "service": "AWS Elastic Beanstalk",
        "resource": "solutionstack",
        "prefix": "elasticbeanstalk",
        "arn": "arn:${Partition}:elasticbeanstalk:${Region}::solutionstack/${SolutionStackName}"
    },
    {
        "service": "AWS Elastic Beanstalk",
        "resource": "platform",
        "prefix": "elasticbeanstalk",
        "arn": "arn:${Partition}:elasticbeanstalk:${Region}::platform/${PlatformNameWithVersion}"
    },
    {
        "service": "Amazon Elastic Container Registry",
        "resource": "repository",
        "prefix": "ecr",
        "arn": "arn:${Partition}:ecr:${Region}:${Account}:repository/${RepositoryName}"
    },
    {
        "service": "Amazon Elastic Container Registry Public",
        "resource": "repository",
        "prefix": "ecr-public",
        "arn": "arn:${Partition}:ecr-public::${Account}:repository/${RepositoryName}"
    },
    {
        "service": "Amazon Elastic Container Registry Public",
        "resource": "registry",
        "prefix": "ecr-public",
        "arn": "arn:${Partition}:ecr-public::${Account}:registry/${RegistryId}"
    },
    {
        "service": "Amazon Elastic Container Service",
        "resource": "cluster",
        "prefix": "ecs",
        "arn": "arn:${Partition}:ecs:${Region}:${Account}:cluster/${ClusterName}"
    },
    {
        "service": "Amazon Elastic Container Service",
        "resource": "container-instance",
        "prefix": "ecs",
        "arn": "arn:${Partition}:ecs:${Region}:${Account}:container-instance/${ClusterName}/${ContainerInstanceId}"
    },
    {
        "service": "Amazon Elastic Container Service",
        "resource": "service",
        "prefix": "ecs",
        "arn": "arn:${Partition}:ecs:${Region}:${Account}:service/${ClusterName}/${ServiceName}"
    },
    {
        "service": "Amazon Elastic Container Service",
        "resource": "service-deployment",
        "prefix": "ecs",
        "arn": "arn:${Partition}:ecs:${Region}:${Account}:service-deployment/${ClusterName}/${ServiceName}/${ServiceDeploymentId}"
    },
    {
        "service": "Amazon Elastic Container Service",
        "resource": "service-revision",
        "prefix": "ecs",
        "arn": "arn:${Partition}:ecs:${Region}:${Account}:service-revision/${ClusterName}/${ServiceName}/${ServiceRevisionId}"
    },
    {
        "service": "Amazon Elastic Container Service",
        "resource": "task",
        "prefix": "ecs",
        "arn": "arn:${Partition}:ecs:${Region}:${Account}:task/${ClusterName}/${TaskId}"
    },
    {
        "service": "Amazon Elastic Container Service",
        "resource": "task-definition",
        "prefix": "ecs",
        "arn": "arn:${Partition}:ecs:${Region}:${Account}:task-definition/${TaskDefinitionFamilyName}:${TaskDefinitionRevisionNumber}"
    },
    {
        "service": "Amazon Elastic Container Service",
        "resource": "capacity-provider",
        "prefix": "ecs",
        "arn": "arn:${Partition}:ecs:${Region}:${Account}:capacity-provider/${CapacityProviderName}"
    },
    {
        "service": "Amazon Elastic Container Service",
        "resource": "task-set",
        "prefix": "ecs",
        "arn": "arn:${Partition}:ecs:${Region}:${Account}:task-set/${ClusterName}/${ServiceName}/${TaskSetId}"
    },
    {
        "service": "AWS Elastic Disaster Recovery",
        "resource": "JobResource",
        "prefix": "drs",
        "arn": "arn:${Partition}:drs:${Region}:${Account}:job/${JobID}"
    },
    {
        "service": "AWS Elastic Disaster Recovery",
        "resource": "RecoveryInstanceResource",
        "prefix": "drs",
        "arn": "arn:${Partition}:drs:${Region}:${Account}:recovery-instance/${RecoveryInstanceID}"
    },
    {
        "service": "AWS Elastic Disaster Recovery",
        "resource": "ReplicationConfigurationTemplateResource",
        "prefix": "drs",
        "arn": "arn:${Partition}:drs:${Region}:${Account}:replication-configuration-template/${ReplicationConfigurationTemplateID}"
    },
    {
        "service": "AWS Elastic Disaster Recovery",
        "resource": "LaunchConfigurationTemplateResource",
        "prefix": "drs",
        "arn": "arn:${Partition}:drs:${Region}:${Account}:launch-configuration-template/${LaunchConfigurationTemplateID}"
    },
    {
        "service": "AWS Elastic Disaster Recovery",
        "resource": "SourceServerResource",
        "prefix": "drs",
        "arn": "arn:${Partition}:drs:${Region}:${Account}:source-server/${SourceServerID}"
    },
    {
        "service": "AWS Elastic Disaster Recovery",
        "resource": "SourceNetworkResource",
        "prefix": "drs",
        "arn": "arn:${Partition}:drs:${Region}:${Account}:source-network/${SourceNetworkID}"
    },
    {
        "service": "Amazon Elastic File System",
        "resource": "file-system",
        "prefix": "elasticfilesystem",
        "arn": "arn:${Partition}:elasticfilesystem:${Region}:${Account}:file-system/${FileSystemId}"
    },
    {
        "service": "Amazon Elastic File System",
        "resource": "access-point",
        "prefix": "elasticfilesystem",
        "arn": "arn:${Partition}:elasticfilesystem:${Region}:${Account}:access-point/${AccessPointId}"
    },
    {
        "service": "Amazon Elastic Kubernetes Service",
        "resource": "cluster",
        "prefix": "eks",
        "arn": "arn:${Partition}:eks:${Region}:${Account}:cluster/${ClusterName}"
    },
    {
        "service": "Amazon Elastic Kubernetes Service",
        "resource": "nodegroup",
        "prefix": "eks",
        "arn": "arn:${Partition}:eks:${Region}:${Account}:nodegroup/${ClusterName}/${NodegroupName}/${UUID}"
    },
    {
        "service": "Amazon Elastic Kubernetes Service",
        "resource": "addon",
        "prefix": "eks",
        "arn": "arn:${Partition}:eks:${Region}:${Account}:addon/${ClusterName}/${AddonName}/${UUID}"
    },
    {
        "service": "Amazon Elastic Kubernetes Service",
        "resource": "fargateprofile",
        "prefix": "eks",
        "arn": "arn:${Partition}:eks:${Region}:${Account}:fargateprofile/${ClusterName}/${FargateProfileName}/${UUID}"
    },
    {
        "service": "Amazon Elastic Kubernetes Service",
        "resource": "identityproviderconfig",
        "prefix": "eks",
        "arn": "arn:${Partition}:eks:${Region}:${Account}:identityproviderconfig/${ClusterName}/${IdentityProviderType}/${IdentityProviderConfigName}/${UUID}"
    },
    {
        "service": "Amazon Elastic Kubernetes Service",
        "resource": "eks-anywhere-subscription",
        "prefix": "eks",
        "arn": "arn:${Partition}:eks:${Region}:${Account}:eks-anywhere-subscription/${UUID}"
    },
    {
        "service": "Amazon Elastic Kubernetes Service",
        "resource": "podidentityassociation",
        "prefix": "eks",
        "arn": "arn:${Partition}:eks:${Region}:${Account}:podidentityassociation/${ClusterName}/${UUID}"
    },
    {
        "service": "Amazon Elastic Kubernetes Service",
        "resource": "access-entry",
        "prefix": "eks",
        "arn": "arn:${Partition}:eks:${Region}:${Account}:access-entry/${ClusterName}/${IamIdentityType}/${IamIdentityAccountID}/${IamIdentityName}/${UUID}"
    },
    {
        "service": "Amazon Elastic Kubernetes Service",
        "resource": "access-policy",
        "prefix": "eks",
        "arn": "arn:${Partition}:eks::aws:cluster-access-policy/${AccessPolicyName}"
    },
    {
        "service": "Amazon Elastic Kubernetes Service",
        "resource": "dashboard",
        "prefix": "eks",
        "arn": "arn:${Partition}:eks:${Region}:${Account}:dashboard/${DashboardName}"
    },
    {
        "service": "AWS Elastic Load Balancing",
        "resource": "loadbalancer",
        "prefix": "elasticloadbalancing",
        "arn": "arn:${Partition}:elasticloadbalancing:${Region}:${Account}:loadbalancer/${LoadBalancerName}"
    },
    {
        "service": "AWS Elastic Load Balancing V2",
        "resource": "listener/gwy",
        "prefix": "elasticloadbalancing",
        "arn": "arn:${Partition}:elasticloadbalancing:${Region}:${Account}:listener/gwy/${LoadBalancerName}/${LoadBalancerId}/${ListenerId}"
    },
    {
        "service": "AWS Elastic Load Balancing V2",
        "resource": "listener/app",
        "prefix": "elasticloadbalancing",
        "arn": "arn:${Partition}:elasticloadbalancing:${Region}:${Account}:listener/app/${LoadBalancerName}/${LoadBalancerId}/${ListenerId}"
    },
    {
        "service": "AWS Elastic Load Balancing V2",
        "resource": "listener-rule/app",
        "prefix": "elasticloadbalancing",
        "arn": "arn:${Partition}:elasticloadbalancing:${Region}:${Account}:listener-rule/app/${LoadBalancerName}/${LoadBalancerId}/${ListenerId}/${ListenerRuleId}"
    },
    {
        "service": "AWS Elastic Load Balancing V2",
        "resource": "listener/net",
        "prefix": "elasticloadbalancing",
        "arn": "arn:${Partition}:elasticloadbalancing:${Region}:${Account}:listener/net/${LoadBalancerName}/${LoadBalancerId}/${ListenerId}"
    },
    {
        "service": "AWS Elastic Load Balancing V2",
        "resource": "listener-rule/net",
        "prefix": "elasticloadbalancing",
        "arn": "arn:${Partition}:elasticloadbalancing:${Region}:${Account}:listener-rule/net/${LoadBalancerName}/${LoadBalancerId}/${ListenerId}/${ListenerRuleId}"
    },
    {
        "service": "AWS Elastic Load Balancing V2",
        "resource": "loadbalancer/gwy/",
        "prefix": "elasticloadbalancing",
        "arn": "arn:${Partition}:elasticloadbalancing:${Region}:${Account}:loadbalancer/gwy/${LoadBalancerName}/${LoadBalancerId}"
    },
    {
        "service": "AWS Elastic Load Balancing V2",
        "resource": "loadbalancer/app/",
        "prefix": "elasticloadbalancing",
        "arn": "arn:${Partition}:elasticloadbalancing:${Region}:${Account}:loadbalancer/app/${LoadBalancerName}/${LoadBalancerId}"
    },
    {
        "service": "AWS Elastic Load Balancing V2",
        "resource": "loadbalancer/net/",
        "prefix": "elasticloadbalancing",
        "arn": "arn:${Partition}:elasticloadbalancing:${Region}:${Account}:loadbalancer/net/${LoadBalancerName}/${LoadBalancerId}"
    },
    {
        "service": "AWS Elastic Load Balancing V2",
        "resource": "targetgroup",
        "prefix": "elasticloadbalancing",
        "arn": "arn:${Partition}:elasticloadbalancing:${Region}:${Account}:targetgroup/${TargetGroupName}/${TargetGroupId}"
    },
    {
        "service": "AWS Elastic Load Balancing V2",
        "resource": "truststore",
        "prefix": "elasticloadbalancing",
        "arn": "arn:${Partition}:elasticloadbalancing:${Region}:${Account}:truststore/${TrustStoreName}/${TrustStoreId}"
    },
    {
        "service": "Amazon Elastic MapReduce",
        "resource": "cluster",
        "prefix": "elasticmapreduce",
        "arn": "arn:${Partition}:elasticmapreduce:${Region}:${Account}:cluster/${ClusterId}"
    },
    {
        "service": "Amazon Elastic MapReduce",
        "resource": "editor",
        "prefix": "elasticmapreduce",
        "arn": "arn:${Partition}:elasticmapreduce:${Region}:${Account}:editor/${EditorId}"
    },
    {
        "service": "Amazon Elastic MapReduce",
        "resource": "notebook-execution",
        "prefix": "elasticmapreduce",
        "arn": "arn:${Partition}:elasticmapreduce:${Region}:${Account}:notebook-execution/${NotebookExecutionId}"
    },
    {
        "service": "Amazon Elastic MapReduce",
        "resource": "studio",
        "prefix": "elasticmapreduce",
        "arn": "arn:${Partition}:elasticmapreduce:${Region}:${Account}:studio/${StudioId}"
    },
    {
        "service": "Amazon Elastic Transcoder",
        "resource": "job",
        "prefix": "elastictranscoder",
        "arn": "arn:${Partition}:elastictranscoder:${Region}:${Account}:job/${JobId}"
    },
    {
        "service": "Amazon Elastic Transcoder",
        "resource": "pipeline",
        "prefix": "elastictranscoder",
        "arn": "arn:${Partition}:elastictranscoder:${Region}:${Account}:pipeline/${PipelineId}"
    },
    {
        "service": "Amazon Elastic Transcoder",
        "resource": "preset",
        "prefix": "elastictranscoder",
        "arn": "arn:${Partition}:elastictranscoder:${Region}:${Account}:preset/${PresetId}"
    },
    {
        "service": "Amazon ElastiCache",
        "resource": "parametergroup",
        "prefix": "elasticache",
        "arn": "arn:${Partition}:elasticache:${Region}:${Account}:parametergroup:${CacheParameterGroupName}"
    },
    {
        "service": "Amazon ElastiCache",
        "resource": "securitygroup",
        "prefix": "elasticache",
        "arn": "arn:${Partition}:elasticache:${Region}:${Account}:securitygroup:${CacheSecurityGroupName}"
    },
    {
        "service": "Amazon ElastiCache",
        "resource": "subnetgroup",
        "prefix": "elasticache",
        "arn": "arn:${Partition}:elasticache:${Region}:${Account}:subnetgroup:${CacheSubnetGroupName}"
    },
    {
        "service": "Amazon ElastiCache",
        "resource": "replicationgroup",
        "prefix": "elasticache",
        "arn": "arn:${Partition}:elasticache:${Region}:${Account}:replicationgroup:${ReplicationGroupId}"
    },
    {
        "service": "Amazon ElastiCache",
        "resource": "cluster",
        "prefix": "elasticache",
        "arn": "arn:${Partition}:elasticache:${Region}:${Account}:cluster:${CacheClusterId}"
    },
    {
        "service": "Amazon ElastiCache",
        "resource": "reserved-instance",
        "prefix": "elasticache",
        "arn": "arn:${Partition}:elasticache:${Region}:${Account}:reserved-instance:${ReservedCacheNodeId}"
    },
    {
        "service": "Amazon ElastiCache",
        "resource": "snapshot",
        "prefix": "elasticache",
        "arn": "arn:${Partition}:elasticache:${Region}:${Account}:snapshot:${SnapshotName}"
    },
    {
        "service": "Amazon ElastiCache",
        "resource": "globalreplicationgroup",
        "prefix": "elasticache",
        "arn": "arn:${Partition}:elasticache::${Account}:globalreplicationgroup:${GlobalReplicationGroupId}"
    },
    {
        "service": "Amazon ElastiCache",
        "resource": "user",
        "prefix": "elasticache",
        "arn": "arn:${Partition}:elasticache:${Region}:${Account}:user:${UserId}"
    },
    {
        "service": "Amazon ElastiCache",
        "resource": "usergroup",
        "prefix": "elasticache",
        "arn": "arn:${Partition}:elasticache:${Region}:${Account}:usergroup:${UserGroupId}"
    },
    {
        "service": "Amazon ElastiCache",
        "resource": "serverlesscache",
        "prefix": "elasticache",
        "arn": "arn:${Partition}:elasticache:${Region}:${Account}:serverlesscache:${ServerlessCacheName}"
    },
    {
        "service": "Amazon ElastiCache",
        "resource": "serverlesscachesnapshot",
        "prefix": "elasticache",
        "arn": "arn:${Partition}:elasticache:${Region}:${Account}:serverlesscachesnapshot:${ServerlessCacheSnapshotName}"
    },
    {
        "service": "AWS Elemental Appliances and Software",
        "resource": "quote",
        "prefix": "elemental-appliances-software",
        "arn": "arn:${Partition}:elemental-appliances-software:${Region}:${Account}:quote/${ResourceId}"
    },
    {
        "service": "AWS Elemental MediaConnect",
        "resource": "Entitlement",
        "prefix": "mediaconnect",
        "arn": "arn:${Partition}:mediaconnect:${Region}:${Account}:entitlement:${FlowId}:${EntitlementName}"
    },
    {
        "service": "AWS Elemental MediaConnect",
        "resource": "Flow",
        "prefix": "mediaconnect",
        "arn": "arn:${Partition}:mediaconnect:${Region}:${Account}:flow:${FlowId}:${FlowName}"
    },
    {
        "service": "AWS Elemental MediaConnect",
        "resource": "Output",
        "prefix": "mediaconnect",
        "arn": "arn:${Partition}:mediaconnect:${Region}:${Account}:output:${OutputId}:${OutputName}"
    },
    {
        "service": "AWS Elemental MediaConnect",
        "resource": "Source",
        "prefix": "mediaconnect",
        "arn": "arn:${Partition}:mediaconnect:${Region}:${Account}:source:${SourceId}:${SourceName}"
    },
    {
        "service": "AWS Elemental MediaConnect",
        "resource": "Gateway",
        "prefix": "mediaconnect",
        "arn": "arn:${Partition}:mediaconnect:${Region}:${Account}:gateway:${GatewayId}:${GatewayName}"
    },
    {
        "service": "AWS Elemental MediaConnect",
        "resource": "Bridge",
        "prefix": "mediaconnect",
        "arn": "arn:${Partition}:mediaconnect:${Region}:${Account}:bridge:${FlowId}:${FlowName}"
    },
    {
        "service": "AWS Elemental MediaConnect",
        "resource": "GatewayInstance",
        "prefix": "mediaconnect",
        "arn": "arn:${Partition}:mediaconnect:${Region}:${Account}:gateway:${GatewayId}:${GatewayName}:instance:${InstanceId}"
    },
    {
        "service": "AWS Elemental MediaConvert",
        "resource": "Job",
        "prefix": "mediaconvert",
        "arn": "arn:${Partition}:mediaconvert:${Region}:${Account}:jobs/${JobId}"
    },
    {
        "service": "AWS Elemental MediaConvert",
        "resource": "Queue",
        "prefix": "mediaconvert",
        "arn": "arn:${Partition}:mediaconvert:${Region}:${Account}:queues/${QueueName}"
    },
    {
        "service": "AWS Elemental MediaConvert",
        "resource": "Preset",
        "prefix": "mediaconvert",
        "arn": "arn:${Partition}:mediaconvert:${Region}:${Account}:presets/${PresetName}"
    },
    {
        "service": "AWS Elemental MediaConvert",
        "resource": "JobTemplate",
        "prefix": "mediaconvert",
        "arn": "arn:${Partition}:mediaconvert:${Region}:${Account}:jobTemplates/${JobTemplateName}"
    },
    {
        "service": "AWS Elemental MediaConvert",
        "resource": "CertificateAssociation",
        "prefix": "mediaconvert",
        "arn": "arn:${Partition}:mediaconvert:${Region}:${Account}:certificates/${CertificateArn}"
    },
    {
        "service": "AWS Elemental MediaLive",
        "resource": "channel",
        "prefix": "medialive",
        "arn": "arn:${Partition}:medialive:${Region}:${Account}:channel:${ChannelId}"
    },
    {
        "service": "AWS Elemental MediaLive",
        "resource": "input",
        "prefix": "medialive",
        "arn": "arn:${Partition}:medialive:${Region}:${Account}:input:${InputId}"
    },
    {
        "service": "AWS Elemental MediaLive",
        "resource": "input-device",
        "prefix": "medialive",
        "arn": "arn:${Partition}:medialive:${Region}:${Account}:inputDevice:${DeviceId}"
    },
    {
        "service": "AWS Elemental MediaLive",
        "resource": "input-security-group",
        "prefix": "medialive",
        "arn": "arn:${Partition}:medialive:${Region}:${Account}:inputSecurityGroup:${InputSecurityGroupId}"
    },
    {
        "service": "AWS Elemental MediaLive",
        "resource": "multiplex",
        "prefix": "medialive",
        "arn": "arn:${Partition}:medialive:${Region}:${Account}:multiplex:${MultiplexId}"
    },
    {
        "service": "AWS Elemental MediaLive",
        "resource": "reservation",
        "prefix": "medialive",
        "arn": "arn:${Partition}:medialive:${Region}:${Account}:reservation:${ReservationId}"
    },
    {
        "service": "AWS Elemental MediaLive",
        "resource": "offering",
        "prefix": "medialive",
        "arn": "arn:${Partition}:medialive:${Region}:${Account}:offering:${OfferingId}"
    },
    {
        "service": "AWS Elemental MediaLive",
        "resource": "signal-map",
        "prefix": "medialive",
        "arn": "arn:${Partition}:medialive:${Region}:${Account}:signal-map:${SignalMapId}"
    },
    {
        "service": "AWS Elemental MediaLive",
        "resource": "cloudwatch-alarm-template-group",
        "prefix": "medialive",
        "arn": "arn:${Partition}:medialive:${Region}:${Account}:cloudwatch-alarm-template-group:${CloudWatchAlarmTemplateGroupId}"
    },
    {
        "service": "AWS Elemental MediaLive",
        "resource": "cloudwatch-alarm-template",
        "prefix": "medialive",
        "arn": "arn:${Partition}:medialive:${Region}:${Account}:cloudwatch-alarm-template:${CloudWatchAlarmTemplateId}"
    },
    {
        "service": "AWS Elemental MediaLive",
        "resource": "eventbridge-rule-template-group",
        "prefix": "medialive",
        "arn": "arn:${Partition}:medialive:${Region}:${Account}:eventbridge-rule-template-group:${EventBridgeRuleTemplateGroupId}"
    },
    {
        "service": "AWS Elemental MediaLive",
        "resource": "eventbridge-rule-template",
        "prefix": "medialive",
        "arn": "arn:${Partition}:medialive:${Region}:${Account}:eventbridge-rule-template:${EventBridgeRuleTemplateId}"
    },
    {
        "service": "AWS Elemental MediaLive",
        "resource": "cluster",
        "prefix": "medialive",
        "arn": "arn:${Partition}:medialive:${Region}:${Account}:cluster:${ClusterId}"
    },
    {
        "service": "AWS Elemental MediaLive",
        "resource": "node",
        "prefix": "medialive",
        "arn": "arn:${Partition}:medialive:${Region}:${Account}:node:${ClusterId}/${NodeId}"
    },
    {
        "service": "AWS Elemental MediaLive",
        "resource": "network",
        "prefix": "medialive",
        "arn": "arn:${Partition}:medialive:${Region}:${Account}:network:${NetworkId}"
    },
    {
        "service": "AWS Elemental MediaLive",
        "resource": "channel-placement-group",
        "prefix": "medialive",
        "arn": "arn:${Partition}:medialive:${Region}:${Account}:channelPlacementGroup:${ClusterId}/${ChannelPlacementGroupId}"
    },
    {
        "service": "AWS Elemental MediaLive",
        "resource": "sdi-source",
        "prefix": "medialive",
        "arn": "arn:${Partition}:medialive:${Region}:${Account}:sdiSource:${SdiSourceId}"
    },
    {
        "service": "AWS Elemental MediaPackage",
        "resource": "channels",
        "prefix": "mediapackage",
        "arn": "arn:${Partition}:mediapackage:${Region}:${Account}:channels/${ChannelIdentifier}"
    },
    {
        "service": "AWS Elemental MediaPackage",
        "resource": "origin_endpoints",
        "prefix": "mediapackage",
        "arn": "arn:${Partition}:mediapackage:${Region}:${Account}:origin_endpoints/${OriginEndpointIdentifier}"
    },
    {
        "service": "AWS Elemental MediaPackage",
        "resource": "harvest_jobs",
        "prefix": "mediapackage",
        "arn": "arn:${Partition}:mediapackage:${Region}:${Account}:harvest_jobs/${HarvestJobIdentifier}"
    },
    {
        "service": "AWS Elemental MediaPackage V2",
        "resource": "ChannelGroup",
        "prefix": "mediapackagev2",
        "arn": "arn:${Partition}:mediapackagev2:${Region}:${Account}:channelGroup/${ChannelGroupName}"
    },
    {
        "service": "AWS Elemental MediaPackage V2",
        "resource": "ChannelPolicy",
        "prefix": "mediapackagev2",
        "arn": "arn:${Partition}:mediapackagev2:${Region}:${Account}:channelGroup/${ChannelGroupName}/channel/${ChannelName}"
    },
    {
        "service": "AWS Elemental MediaPackage V2",
        "resource": "OriginEndpointPolicy",
        "prefix": "mediapackagev2",
        "arn": "arn:${Partition}:mediapackagev2:${Region}:${Account}:channelGroup/${ChannelGroupName}/channel/${ChannelName}/originEndpoint/${OriginEndpointName}"
    },
    {
        "service": "AWS Elemental MediaPackage V2",
        "resource": "HarvestJob",
        "prefix": "mediapackagev2",
        "arn": "arn:${Partition}:mediapackagev2:${Region}:${Account}:channelGroup/${ChannelGroupName}/channel/${ChannelName}/originEndpoint/${OriginEndpointName}/harvestJob/${HarvestJobName}"
    },
    {
        "service": "AWS Elemental MediaPackage VOD",
        "resource": "assets",
        "prefix": "mediapackage-vod",
        "arn": "arn:${Partition}:mediapackage-vod:${Region}:${Account}:assets/${AssetIdentifier}"
    },
    {
        "service": "AWS Elemental MediaPackage VOD",
        "resource": "packaging-configurations",
        "prefix": "mediapackage-vod",
        "arn": "arn:${Partition}:mediapackage-vod:${Region}:${Account}:packaging-configurations/${PackagingConfigurationIdentifier}"
    },
    {
        "service": "AWS Elemental MediaPackage VOD",
        "resource": "packaging-groups",
        "prefix": "mediapackage-vod",
        "arn": "arn:${Partition}:mediapackage-vod:${Region}:${Account}:packaging-groups/${PackagingGroupIdentifier}"
    },
    {
        "service": "AWS Elemental MediaStore",
        "resource": "container",
        "prefix": "mediastore",
        "arn": "arn:${Partition}:mediastore:${Region}:${Account}:container/${ContainerName}"
    },
    {
        "service": "AWS Elemental MediaStore",
        "resource": "object",
        "prefix": "mediastore",
        "arn": "arn:${Partition}:mediastore:${Region}:${Account}:container/${ContainerName}/${ObjectPath}"
    },
    {
        "service": "AWS Elemental MediaStore",
        "resource": "folder",
        "prefix": "mediastore",
        "arn": "arn:${Partition}:mediastore:${Region}:${Account}:container/${ContainerName}/${FolderPath}"
    },
    {
        "service": "AWS Elemental MediaTailor",
        "resource": "playbackConfiguration",
        "prefix": "mediatailor",
        "arn": "arn:${Partition}:mediatailor:${Region}:${Account}:playbackConfiguration/${ResourceId}"
    },
    {
        "service": "AWS Elemental MediaTailor",
        "resource": "prefetchSchedule",
        "prefix": "mediatailor",
        "arn": "arn:${Partition}:mediatailor:${Region}:${Account}:prefetchSchedule/${ResourceId}"
    },
    {
        "service": "AWS Elemental MediaTailor",
        "resource": "channel",
        "prefix": "mediatailor",
        "arn": "arn:${Partition}:mediatailor:${Region}:${Account}:channel/${ChannelName}"
    },
    {
        "service": "AWS Elemental MediaTailor",
        "resource": "program",
        "prefix": "mediatailor",
        "arn": "arn:${Partition}:mediatailor:${Region}:${Account}:program/${ChannelName}/${ProgramName}"
    },
    {
        "service": "AWS Elemental MediaTailor",
        "resource": "sourceLocation",
        "prefix": "mediatailor",
        "arn": "arn:${Partition}:mediatailor:${Region}:${Account}:sourceLocation/${SourceLocationName}"
    },
    {
        "service": "AWS Elemental MediaTailor",
        "resource": "vodSource",
        "prefix": "mediatailor",
        "arn": "arn:${Partition}:mediatailor:${Region}:${Account}:vodSource/${SourceLocationName}/${VodSourceName}"
    },
    {
        "service": "AWS Elemental MediaTailor",
        "resource": "liveSource",
        "prefix": "mediatailor",
        "arn": "arn:${Partition}:mediatailor:${Region}:${Account}:liveSource/${SourceLocationName}/${LiveSourceName}"
    },
    {
        "service": "AWS Elemental Support Cases",
        "resource": "case",
        "prefix": "elemental-support-cases",
        "arn": "arn:${Partition}:elemental-support-cases::${Account}:case/${ResourceId}"
    },
    {
        "service": "Amazon EMR on EKS (EMR Containers)",
        "resource": "virtualCluster",
        "prefix": "emr-containers",
        "arn": "arn:${Partition}:emr-containers:${Region}:${Account}:/virtualclusters/${VirtualClusterId}"
    },
    {
        "service": "Amazon EMR on EKS (EMR Containers)",
        "resource": "jobRun",
        "prefix": "emr-containers",
        "arn": "arn:${Partition}:emr-containers:${Region}:${Account}:/virtualclusters/${VirtualClusterId}/jobruns/${JobRunId}"
    },
    {
        "service": "Amazon EMR on EKS (EMR Containers)",
        "resource": "jobTemplate",
        "prefix": "emr-containers",
        "arn": "arn:${Partition}:emr-containers:${Region}:${Account}:/jobtemplates/${JobTemplateId}"
    },
    {
        "service": "Amazon EMR on EKS (EMR Containers)",
        "resource": "managedEndpoint",
        "prefix": "emr-containers",
        "arn": "arn:${Partition}:emr-containers:${Region}:${Account}:/virtualclusters/${VirtualClusterId}/endpoints/${EndpointId}"
    },
    {
        "service": "Amazon EMR on EKS (EMR Containers)",
        "resource": "securityConfiguration",
        "prefix": "emr-containers",
        "arn": "arn:${Partition}:emr-containers:${Region}:${Account}:/securityconfigurations/${SecurityConfigurationId}"
    },
    {
        "service": "Amazon EMR on EKS (EMR Containers)",
        "resource": "certificate",
        "prefix": "emr-containers",
        "arn": "arn:${Partition}:emr-containers:${Region}:${Account}:/certificates/${CertificateId}"
    },
    {
        "service": "Amazon EMR Serverless",
        "resource": "application",
        "prefix": "emr-serverless",
        "arn": "arn:${Partition}:emr-serverless:${Region}:${Account}:/applications/${ApplicationId}"
    },
    {
        "service": "Amazon EMR Serverless",
        "resource": "jobRun",
        "prefix": "emr-serverless",
        "arn": "arn:${Partition}:emr-serverless:${Region}:${Account}:/applications/${ApplicationId}/jobruns/${JobRunId}"
    },
    {
        "service": "AWS End User Messaging SMS and Voice V2",
        "resource": "ConfigurationSet",
        "prefix": "sms-voice",
        "arn": "arn:${Partition}:sms-voice:${Region}:${Account}:configuration-set/${ConfigurationSetName}"
    },
    {
        "service": "AWS End User Messaging SMS and Voice V2",
        "resource": "OptOutList",
        "prefix": "sms-voice",
        "arn": "arn:${Partition}:sms-voice:${Region}:${Account}:opt-out-list/${OptOutListName}"
    },
    {
        "service": "AWS End User Messaging SMS and Voice V2",
        "resource": "PhoneNumber",
        "prefix": "sms-voice",
        "arn": "arn:${Partition}:sms-voice:${Region}:${Account}:phone-number/${PhoneNumberId}"
    },
    {
        "service": "AWS End User Messaging SMS and Voice V2",
        "resource": "Pool",
        "prefix": "sms-voice",
        "arn": "arn:${Partition}:sms-voice:${Region}:${Account}:pool/${PoolId}"
    },
    {
        "service": "AWS End User Messaging SMS and Voice V2",
        "resource": "ProtectConfiguration",
        "prefix": "sms-voice",
        "arn": "arn:${Partition}:sms-voice:${Region}:${Account}:protect-configuration/${ProtectConfigurationId}"
    },
    {
        "service": "AWS End User Messaging SMS and Voice V2",
        "resource": "SenderId",
        "prefix": "sms-voice",
        "arn": "arn:${Partition}:sms-voice:${Region}:${Account}:sender-id/${SenderId}/${IsoCountryCode}"
    },
    {
        "service": "AWS End User Messaging SMS and Voice V2",
        "resource": "Registration",
        "prefix": "sms-voice",
        "arn": "arn:${Partition}:sms-voice:${Region}:${Account}:registration/${RegistrationId}"
    },
    {
        "service": "AWS End User Messaging SMS and Voice V2",
        "resource": "RegistrationAttachment",
        "prefix": "sms-voice",
        "arn": "arn:${Partition}:sms-voice:${Region}:${Account}:registration-attachment/${RegistrationAttachmentId}"
    },
    {
        "service": "AWS End User Messaging SMS and Voice V2",
        "resource": "VerifiedDestinationNumber",
        "prefix": "sms-voice",
        "arn": "arn:${Partition}:sms-voice:${Region}:${Account}:verified-destination-number/${VerifiedDestinationNumberId}"
    },
    {
        "service": "AWS End User Messaging SMS and Voice V2",
        "resource": "Message",
        "prefix": "sms-voice",
        "arn": "arn:${Partition}:sms-voice:${Region}:${Account}:message/${MessageId}"
    },
    {
        "service": "AWS End User Messaging Social",
        "resource": "phone-number-id",
        "prefix": "social-messaging",
        "arn": "arn:${Partition}:social-messaging:${Region}:${Account}:phone-number-id/${OriginationPhoneNumberId}"
    },
    {
        "service": "AWS End User Messaging Social",
        "resource": "waba",
        "prefix": "social-messaging",
        "arn": "arn:${Partition}:social-messaging:${Region}:${Account}:waba/${WabaId}"
    },
    {
        "service": "AWS Entity Resolution",
        "resource": "MatchingWorkflow",
        "prefix": "entityresolution",
        "arn": "arn:${Partition}:entityresolution:${Region}:${Account}:matchingworkflow/${WorkflowName}"
    },
    {
        "service": "AWS Entity Resolution",
        "resource": "SchemaMapping",
        "prefix": "entityresolution",
        "arn": "arn:${Partition}:entityresolution:${Region}:${Account}:schemamapping/${SchemaName}"
    },
    {
        "service": "AWS Entity Resolution",
        "resource": "IdMappingWorkflow",
        "prefix": "entityresolution",
        "arn": "arn:${Partition}:entityresolution:${Region}:${Account}:idmappingworkflow/${WorkflowName}"
    },
    {
        "service": "AWS Entity Resolution",
        "resource": "ProviderService",
        "prefix": "entityresolution",
        "arn": "arn:${Partition}:entityresolution:${Region}:${Account}:providerservice/${ProviderName}/${ProviderServiceName}"
    },
    {
        "service": "AWS Entity Resolution",
        "resource": "IdNamespace",
        "prefix": "entityresolution",
        "arn": "arn:${Partition}:entityresolution:${Region}:${Account}:idnamespace/${IdNamespaceName}"
    },
    {
        "service": "Amazon EventBridge",
        "resource": "event-source",
        "prefix": "events",
        "arn": "arn:${Partition}:events:${Region}::event-source/${EventSourceName}"
    },
    {
        "service": "Amazon EventBridge",
        "resource": "event-bus",
        "prefix": "events",
        "arn": "arn:${Partition}:events:${Region}:${Account}:event-bus/${EventBusName}"
    },
    {
        "service": "Amazon EventBridge",
        "resource": "rule-on-default-event-bus",
        "prefix": "events",
        "arn": "arn:${Partition}:events:${Region}:${Account}:rule/${RuleName}"
    },
    {
        "service": "Amazon EventBridge",
        "resource": "rule-on-custom-event-bus",
        "prefix": "events",
        "arn": "arn:${Partition}:events:${Region}:${Account}:rule/${EventBusName}/${RuleName}"
    },
    {
        "service": "Amazon EventBridge",
        "resource": "archive",
        "prefix": "events",
        "arn": "arn:${Partition}:events:${Region}:${Account}:archive/${ArchiveName}"
    },
    {
        "service": "Amazon EventBridge",
        "resource": "replay",
        "prefix": "events",
        "arn": "arn:${Partition}:events:${Region}:${Account}:replay/${ReplayName}"
    },
    {
        "service": "Amazon EventBridge",
        "resource": "connection",
        "prefix": "events",
        "arn": "arn:${Partition}:events:${Region}:${Account}:connection/${ConnectionName}"
    },
    {
        "service": "Amazon EventBridge",
        "resource": "api-destination",
        "prefix": "events",
        "arn": "arn:${Partition}:events:${Region}:${Account}:api-destination/${ApiDestinationName}"
    },
    {
        "service": "Amazon EventBridge",
        "resource": "endpoint",
        "prefix": "events",
        "arn": "arn:${Partition}:events:${Region}:${Account}:endpoint/${EndpointName}"
    },
    {
        "service": "Amazon EventBridge",
        "resource": "create-snapshot",
        "prefix": "events",
        "arn": "arn:${Partition}:events:${Region}:${Account}:target/create-snapshot"
    },
    {
        "service": "Amazon EventBridge",
        "resource": "reboot-instance",
        "prefix": "events",
        "arn": "arn:${Partition}:events:${Region}:${Account}:target/reboot-instance"
    },
    {
        "service": "Amazon EventBridge",
        "resource": "stop-instance",
        "prefix": "events",
        "arn": "arn:${Partition}:events:${Region}:${Account}:target/stop-instance"
    },
    {
        "service": "Amazon EventBridge",
        "resource": "terminate-instance",
        "prefix": "events",
        "arn": "arn:${Partition}:events:${Region}:${Account}:target/terminate-instance"
    },
    {
        "service": "Amazon EventBridge Pipes",
        "resource": "pipe",
        "prefix": "pipes",
        "arn": "arn:${Partition}:pipes:${Region}:${Account}:pipe/${Name}"
    },
    {
        "service": "Amazon EventBridge Scheduler",
        "resource": "schedule-group",
        "prefix": "scheduler",
        "arn": "arn:${Partition}:scheduler:${Region}:${Account}:schedule-group/${GroupName}"
    },
    {
        "service": "Amazon EventBridge Scheduler",
        "resource": "schedule",
        "prefix": "scheduler",
        "arn": "arn:${Partition}:scheduler:${Region}:${Account}:schedule/${GroupName}/${ScheduleName}"
    },
    {
        "service": "Amazon EventBridge Schemas",
        "resource": "discoverer",
        "prefix": "schemas",
        "arn": "arn:${Partition}:schemas:${Region}:${Account}:discoverer/${DiscovererId}"
    },
    {
        "service": "Amazon EventBridge Schemas",
        "resource": "registry",
        "prefix": "schemas",
        "arn": "arn:${Partition}:schemas:${Region}:${Account}:registry/${RegistryName}"
    },
    {
        "service": "Amazon EventBridge Schemas",
        "resource": "schema",
        "prefix": "schemas",
        "arn": "arn:${Partition}:schemas:${Region}:${Account}:schema/${RegistryName}/${SchemaName}"
    },
    {
        "service": "AWS Fault Injection Service",
        "resource": "action",
        "prefix": "fis",
        "arn": "arn:${Partition}:fis:${Region}:${Account}:action/${Id}"
    },
    {
        "service": "AWS Fault Injection Service",
        "resource": "experiment",
        "prefix": "fis",
        "arn": "arn:${Partition}:fis:${Region}:${Account}:experiment/${Id}"
    },
    {
        "service": "AWS Fault Injection Service",
        "resource": "experiment-template",
        "prefix": "fis",
        "arn": "arn:${Partition}:fis:${Region}:${Account}:experiment-template/${Id}"
    },
    {
        "service": "AWS Fault Injection Service",
        "resource": "safety-lever",
        "prefix": "fis",
        "arn": "arn:${Partition}:fis:${Region}:${Account}:safety-lever/${Id}"
    },
    {
        "service": "Amazon FinSpace",
        "resource": "environment",
        "prefix": "finspace",
        "arn": "arn:${Partition}:finspace:${Region}:${Account}:environment/${EnvironmentId}"
    },
    {
        "service": "Amazon FinSpace",
        "resource": "user",
        "prefix": "finspace",
        "arn": "arn:${Partition}:finspace:${Region}:${Account}:user/${UserId}"
    },
    {
        "service": "Amazon FinSpace",
        "resource": "kxEnvironment",
        "prefix": "finspace",
        "arn": "arn:${Partition}:finspace:${Region}:${Account}:kxEnvironment/${EnvironmentId}"
    },
    {
        "service": "Amazon FinSpace",
        "resource": "kxUser",
        "prefix": "finspace",
        "arn": "arn:${Partition}:finspace:${Region}:${Account}:kxEnvironment/${EnvironmentId}/kxUser/${UserName}"
    },
    {
        "service": "Amazon FinSpace",
        "resource": "kxCluster",
        "prefix": "finspace",
        "arn": "arn:${Partition}:finspace:${Region}:${Account}:kxEnvironment/${EnvironmentId}/kxCluster/${KxCluster}"
    },
    {
        "service": "Amazon FinSpace",
        "resource": "kxDatabase",
        "prefix": "finspace",
        "arn": "arn:${Partition}:finspace:${Region}:${Account}:kxEnvironment/${EnvironmentId}/kxDatabase/${KxDatabase}"
    },
    {
        "service": "Amazon FinSpace",
        "resource": "kxScalingGroup",
        "prefix": "finspace",
        "arn": "arn:${Partition}:finspace:${Region}:${Account}:kxEnvironment/${EnvironmentId}/kxScalingGroup/${KxScalingGroup}"
    },
    {
        "service": "Amazon FinSpace",
        "resource": "kxDataview",
        "prefix": "finspace",
        "arn": "arn:${Partition}:finspace:${Region}:${Account}:kxEnvironment/${EnvironmentId}/kxDatabase/${KxDatabase}/kxDataview/${KxDataview}"
    },
    {
        "service": "Amazon FinSpace",
        "resource": "kxVolume",
        "prefix": "finspace",
        "arn": "arn:${Partition}:finspace:${Region}:${Account}:kxEnvironment/${EnvironmentId}/kxVolume/${KxVolume}"
    },
    {
        "service": "Amazon FinSpace API",
        "resource": "credential",
        "prefix": "finspace-api",
        "arn": "arn:${Partition}:finspace-api:${Region}:${Account}:/credentials/programmatic"
    },
    {
        "service": "AWS Firewall Manager",
        "resource": "policy",
        "prefix": "fms",
        "arn": "arn:${Partition}:fms:${Region}:${Account}:policy/${Id}"
    },
    {
        "service": "AWS Firewall Manager",
        "resource": "applications-list",
        "prefix": "fms",
        "arn": "arn:${Partition}:fms:${Region}:${Account}:applications-list/${Id}"
    },
    {
        "service": "AWS Firewall Manager",
        "resource": "protocols-list",
        "prefix": "fms",
        "arn": "arn:${Partition}:fms:${Region}:${Account}:protocols-list/${Id}"
    },
    {
        "service": "AWS Firewall Manager",
        "resource": "resource-set",
        "prefix": "fms",
        "arn": "arn:${Partition}:fms:${Region}:${Account}:resource-set/${Id}"
    },
    {
        "service": "Amazon Forecast",
        "resource": "dataset",
        "prefix": "forecast",
        "arn": "arn:${Partition}:forecast:${Region}:${Account}:dataset/${ResourceId}"
    },
    {
        "service": "Amazon Forecast",
        "resource": "datasetGroup",
        "prefix": "forecast",
        "arn": "arn:${Partition}:forecast:${Region}:${Account}:dataset-group/${ResourceId}"
    },
    {
        "service": "Amazon Forecast",
        "resource": "datasetImportJob",
        "prefix": "forecast",
        "arn": "arn:${Partition}:forecast:${Region}:${Account}:dataset-import-job/${ResourceId}"
    },
    {
        "service": "Amazon Forecast",
        "resource": "algorithm",
        "prefix": "forecast",
        "arn": "arn:${Partition}:forecast:::algorithm/${ResourceId}"
    },
    {
        "service": "Amazon Forecast",
        "resource": "predictor",
        "prefix": "forecast",
        "arn": "arn:${Partition}:forecast:${Region}:${Account}:predictor/${ResourceId}"
    },
    {
        "service": "Amazon Forecast",
        "resource": "predictorBacktestExportJob",
        "prefix": "forecast",
        "arn": "arn:${Partition}:forecast:${Region}:${Account}:predictor-backtest-export-job/${ResourceId}"
    },
    {
        "service": "Amazon Forecast",
        "resource": "forecast",
        "prefix": "forecast",
        "arn": "arn:${Partition}:forecast:${Region}:${Account}:forecast/${ResourceId}"
    },
    {
        "service": "Amazon Forecast",
        "resource": "forecastExport",
        "prefix": "forecast",
        "arn": "arn:${Partition}:forecast:${Region}:${Account}:forecast-export-job/${ResourceId}"
    },
    {
        "service": "Amazon Forecast",
        "resource": "explainability",
        "prefix": "forecast",
        "arn": "arn:${Partition}:forecast:${Region}:${Account}:explainability/${ResourceId}"
    },
    {
        "service": "Amazon Forecast",
        "resource": "explainabilityExport",
        "prefix": "forecast",
        "arn": "arn:${Partition}:forecast:${Region}:${Account}:explainability-export/${ResourceId}"
    },
    {
        "service": "Amazon Forecast",
        "resource": "monitor",
        "prefix": "forecast",
        "arn": "arn:${Partition}:forecast:${Region}:${Account}:monitor/${ResourceId}"
    },
    {
        "service": "Amazon Forecast",
        "resource": "whatIfAnalysis",
        "prefix": "forecast",
        "arn": "arn:${Partition}:forecast:${Region}:${Account}:what-if-analysis/${ResourceId}"
    },
    {
        "service": "Amazon Forecast",
        "resource": "whatIfForecast",
        "prefix": "forecast",
        "arn": "arn:${Partition}:forecast:${Region}:${Account}:what-if-forecast/${ResourceId}"
    },
    {
        "service": "Amazon Forecast",
        "resource": "whatIfForecastExport",
        "prefix": "forecast",
        "arn": "arn:${Partition}:forecast:${Region}:${Account}:what-if-forecast-export/${ResourceId}"
    },
    {
        "service": "Amazon Forecast",
        "resource": "endpoint",
        "prefix": "forecast",
        "arn": "arn:${Partition}:forecast:${Region}:${Account}:forecast-endpoint/${ResourceId}"
    },
    {
        "service": "Amazon Fraud Detector",
        "resource": "batch-prediction",
        "prefix": "frauddetector",
        "arn": "arn:${Partition}:frauddetector:${Region}:${Account}:batch-prediction/${ResourcePath}"
    },
    {
        "service": "Amazon Fraud Detector",
        "resource": "detector",
        "prefix": "frauddetector",
        "arn": "arn:${Partition}:frauddetector:${Region}:${Account}:detector/${ResourcePath}"
    },
    {
        "service": "Amazon Fraud Detector",
        "resource": "detector-version",
        "prefix": "frauddetector",
        "arn": "arn:${Partition}:frauddetector:${Region}:${Account}:detector-version/${ResourcePath}"
    },
    {
        "service": "Amazon Fraud Detector",
        "resource": "entity-type",
        "prefix": "frauddetector",
        "arn": "arn:${Partition}:frauddetector:${Region}:${Account}:entity-type/${ResourcePath}"
    },
    {
        "service": "Amazon Fraud Detector",
        "resource": "external-model",
        "prefix": "frauddetector",
        "arn": "arn:${Partition}:frauddetector:${Region}:${Account}:external-model/${ResourcePath}"
    },
    {
        "service": "Amazon Fraud Detector",
        "resource": "event-type",
        "prefix": "frauddetector",
        "arn": "arn:${Partition}:frauddetector:${Region}:${Account}:event-type/${ResourcePath}"
    },
    {
        "service": "Amazon Fraud Detector",
        "resource": "label",
        "prefix": "frauddetector",
        "arn": "arn:${Partition}:frauddetector:${Region}:${Account}:label/${ResourcePath}"
    },
    {
        "service": "Amazon Fraud Detector",
        "resource": "model",
        "prefix": "frauddetector",
        "arn": "arn:${Partition}:frauddetector:${Region}:${Account}:model/${ResourcePath}"
    },
    {
        "service": "Amazon Fraud Detector",
        "resource": "model-version",
        "prefix": "frauddetector",
        "arn": "arn:${Partition}:frauddetector:${Region}:${Account}:model-version/${ResourcePath}"
    },
    {
        "service": "Amazon Fraud Detector",
        "resource": "outcome",
        "prefix": "frauddetector",
        "arn": "arn:${Partition}:frauddetector:${Region}:${Account}:outcome/${ResourcePath}"
    },
    {
        "service": "Amazon Fraud Detector",
        "resource": "rule",
        "prefix": "frauddetector",
        "arn": "arn:${Partition}:frauddetector:${Region}:${Account}:rule/${ResourcePath}"
    },
    {
        "service": "Amazon Fraud Detector",
        "resource": "variable",
        "prefix": "frauddetector",
        "arn": "arn:${Partition}:frauddetector:${Region}:${Account}:variable/${ResourcePath}"
    },
    {
        "service": "Amazon Fraud Detector",
        "resource": "batch-import",
        "prefix": "frauddetector",
        "arn": "arn:${Partition}:frauddetector:${Region}:${Account}:batch-import/${ResourcePath}"
    },
    {
        "service": "Amazon Fraud Detector",
        "resource": "list",
        "prefix": "frauddetector",
        "arn": "arn:${Partition}:frauddetector:${Region}:${Account}:list/${ResourcePath}"
    },
    {
        "service": "Amazon FreeRTOS",
        "resource": "configuration",
        "prefix": "freertos",
        "arn": "arn:${Partition}:freertos:${Region}:${Account}:configuration/${ConfigurationName}"
    },
    {
        "service": "Amazon FreeRTOS",
        "resource": "subscription",
        "prefix": "freertos",
        "arn": "arn:${Partition}:freertos:${Region}:${Account}:subscription/${SubscriptionID}"
    },
    {
        "service": "Amazon FSx",
        "resource": "file-system",
        "prefix": "fsx",
        "arn": "arn:${Partition}:fsx:${Region}:${Account}:file-system/${FileSystemId}"
    },
    {
        "service": "Amazon FSx",
        "resource": "file-cache",
        "prefix": "fsx",
        "arn": "arn:${Partition}:fsx:${Region}:${Account}:file-cache/${FileCacheId}"
    },
    {
        "service": "Amazon FSx",
        "resource": "backup",
        "prefix": "fsx",
        "arn": "arn:${Partition}:fsx:${Region}:${Account}:backup/${BackupId}"
    },
    {
        "service": "Amazon FSx",
        "resource": "storage-virtual-machine",
        "prefix": "fsx",
        "arn": "arn:${Partition}:fsx:${Region}:${Account}:storage-virtual-machine/${FileSystemId}/${StorageVirtualMachineId}"
    },
    {
        "service": "Amazon FSx",
        "resource": "task",
        "prefix": "fsx",
        "arn": "arn:${Partition}:fsx:${Region}:${Account}:task/${TaskId}"
    },
    {
        "service": "Amazon FSx",
        "resource": "association",
        "prefix": "fsx",
        "arn": "arn:${Partition}:fsx:${Region}:${Account}:association/${FileSystemIdOrFileCacheId}/${DataRepositoryAssociationId}"
    },
    {
        "service": "Amazon FSx",
        "resource": "volume",
        "prefix": "fsx",
        "arn": "arn:${Partition}:fsx:${Region}:${Account}:volume/${FileSystemId}/${VolumeId}"
    },
    {
        "service": "Amazon FSx",
        "resource": "snapshot",
        "prefix": "fsx",
        "arn": "arn:${Partition}:fsx:${Region}:${Account}:snapshot/${VolumeId}/${SnapshotId}"
    },
    {
        "service": "Amazon GameLift",
        "resource": "alias",
        "prefix": "gamelift",
        "arn": "arn:${Partition}:gamelift:${Region}::alias/${AliasId}"
    },
    {
        "service": "Amazon GameLift",
        "resource": "build",
        "prefix": "gamelift",
        "arn": "arn:${Partition}:gamelift:${Region}:${Account}:build/${BuildId}"
    },
    {
        "service": "Amazon GameLift",
        "resource": "containerGroupDefinition",
        "prefix": "gamelift",
        "arn": "arn:${Partition}:gamelift:${Region}:${Account}:containergroupdefinition/${Name}"
    },
    {
        "service": "Amazon GameLift",
        "resource": "containerFleet",
        "prefix": "gamelift",
        "arn": "arn:${Partition}:gamelift:${Region}:${Account}:containerfleet/${FleetId}"
    },
    {
        "service": "Amazon GameLift",
        "resource": "fleet",
        "prefix": "gamelift",
        "arn": "arn:${Partition}:gamelift:${Region}:${Account}:fleet/${FleetId}"
    },
    {
        "service": "Amazon GameLift",
        "resource": "gameServerGroup",
        "prefix": "gamelift",
        "arn": "arn:${Partition}:gamelift:${Region}:${Account}:gameservergroup/${GameServerGroupName}"
    },
    {
        "service": "Amazon GameLift",
        "resource": "gameSessionQueue",
        "prefix": "gamelift",
        "arn": "arn:${Partition}:gamelift:${Region}:${Account}:gamesessionqueue/${GameSessionQueueName}"
    },
    {
        "service": "Amazon GameLift",
        "resource": "location",
        "prefix": "gamelift",
        "arn": "arn:${Partition}:gamelift:${Region}:${Account}:location/${LocationId}"
    },
    {
        "service": "Amazon GameLift",
        "resource": "matchmakingConfiguration",
        "prefix": "gamelift",
        "arn": "arn:${Partition}:gamelift:${Region}:${Account}:matchmakingconfiguration/${MatchmakingConfigurationName}"
    },
    {
        "service": "Amazon GameLift",
        "resource": "matchmakingRuleSet",
        "prefix": "gamelift",
        "arn": "arn:${Partition}:gamelift:${Region}:${Account}:matchmakingruleset/${MatchmakingRuleSetName}"
    },
    {
        "service": "Amazon GameLift",
        "resource": "script",
        "prefix": "gamelift",
        "arn": "arn:${Partition}:gamelift:${Region}:${Account}:script/${ScriptId}"
    },
    {
        "service": "Amazon GameLift Streams",
        "resource": "application",
        "prefix": "gameliftstreams",
        "arn": "arn:${Partition}:gameliftstreams:${Region}:${Account}:application/${ApplicationId}"
    },
    {
        "service": "Amazon GameLift Streams",
        "resource": "stream group",
        "prefix": "gameliftstreams",
        "arn": "arn:${Partition}:gameliftstreams:${Region}:${Account}:streamgroup/${StreamGroupId}"
    },
    {
        "service": "AWS Global Accelerator",
        "resource": "accelerator",
        "prefix": "globalaccelerator",
        "arn": "arn:${Partition}:globalaccelerator::${Account}:accelerator/${ResourceId}"
    },
    {
        "service": "AWS Global Accelerator",
        "resource": "listener",
        "prefix": "globalaccelerator",
        "arn": "arn:${Partition}:globalaccelerator::${Account}:accelerator/${ResourceId}/listener/${ListenerId}"
    },
    {
        "service": "AWS Global Accelerator",
        "resource": "endpointgroup",
        "prefix": "globalaccelerator",
        "arn": "arn:${Partition}:globalaccelerator::${Account}:accelerator/${ResourceId}/listener/${ListenerId}/endpoint-group/${EndpointGroupId}"
    },
    {
        "service": "AWS Global Accelerator",
        "resource": "attachment",
        "prefix": "globalaccelerator",
        "arn": "arn:${Partition}:globalaccelerator::${Account}:attachment/${ResourceId}"
    },
    {
        "service": "AWS Glue",
        "resource": "rootcatalog",
        "prefix": "glue",
        "arn": "arn:${Partition}:glue:${Region}:${Account}:catalog"
    },
    {
        "service": "AWS Glue",
        "resource": "catalog",
        "prefix": "glue",
        "arn": "arn:${Partition}:glue:${Region}:${Account}:catalog/${CatalogName}"
    },
    {
        "service": "AWS Glue",
        "resource": "database",
        "prefix": "glue",
        "arn": "arn:${Partition}:glue:${Region}:${Account}:database/${DatabaseName}"
    },
    {
        "service": "AWS Glue",
        "resource": "table",
        "prefix": "glue",
        "arn": "arn:${Partition}:glue:${Region}:${Account}:table/${DatabaseName}/${TableName}"
    },
    {
        "service": "AWS Glue",
        "resource": "tableversion",
        "prefix": "glue",
        "arn": "arn:${Partition}:glue:${Region}:${Account}:tableVersion/${DatabaseName}/${TableName}/${TableVersionName}"
    },
    {
        "service": "AWS Glue",
        "resource": "connection",
        "prefix": "glue",
        "arn": "arn:${Partition}:glue:${Region}:${Account}:connection/${ConnectionName}"
    },
    {
        "service": "AWS Glue",
        "resource": "userdefinedfunction",
        "prefix": "glue",
        "arn": "arn:${Partition}:glue:${Region}:${Account}:userDefinedFunction/${DatabaseName}/${UserDefinedFunctionName}"
    },
    {
        "service": "AWS Glue",
        "resource": "devendpoint",
        "prefix": "glue",
        "arn": "arn:${Partition}:glue:${Region}:${Account}:devEndpoint/${DevEndpointName}"
    },
    {
        "service": "AWS Glue",
        "resource": "job",
        "prefix": "glue",
        "arn": "arn:${Partition}:glue:${Region}:${Account}:job/${JobName}"
    },
    {
        "service": "AWS Glue",
        "resource": "trigger",
        "prefix": "glue",
        "arn": "arn:${Partition}:glue:${Region}:${Account}:trigger/${TriggerName}"
    },
    {
        "service": "AWS Glue",
        "resource": "crawler",
        "prefix": "glue",
        "arn": "arn:${Partition}:glue:${Region}:${Account}:crawler/${CrawlerName}"
    },
    {
        "service": "AWS Glue",
        "resource": "workflow",
        "prefix": "glue",
        "arn": "arn:${Partition}:glue:${Region}:${Account}:workflow/${WorkflowName}"
    },
    {
        "service": "AWS Glue",
        "resource": "blueprint",
        "prefix": "glue",
        "arn": "arn:${Partition}:glue:${Region}:${Account}:blueprint/${BlueprintName}"
    },
    {
        "service": "AWS Glue",
        "resource": "mlTransform",
        "prefix": "glue",
        "arn": "arn:${Partition}:glue:${Region}:${Account}:mlTransform/${TransformId}"
    },
    {
        "service": "AWS Glue",
        "resource": "registry",
        "prefix": "glue",
        "arn": "arn:${Partition}:glue:${Region}:${Account}:registry/${RegistryName}"
    },
    {
        "service": "AWS Glue",
        "resource": "schema",
        "prefix": "glue",
        "arn": "arn:${Partition}:glue:${Region}:${Account}:schema/${SchemaName}"
    },
    {
        "service": "AWS Glue",
        "resource": "session",
        "prefix": "glue",
        "arn": "arn:${Partition}:glue:${Region}:${Account}:session/${SessionId}"
    },
    {
        "service": "AWS Glue",
        "resource": "usageProfile",
        "prefix": "glue",
        "arn": "arn:${Partition}:glue:${Region}:${Account}:usageProfile/${UsageProfileId}"
    },
    {
        "service": "AWS Glue",
        "resource": "dataQualityRuleset",
        "prefix": "glue",
        "arn": "arn:${Partition}:glue:${Region}:${Account}:dataQualityRuleset/${RulesetName}"
    },
    {
        "service": "AWS Glue",
        "resource": "customEntityType",
        "prefix": "glue",
        "arn": "arn:${Partition}:glue:${Region}:${Account}:customEntityType/${CustomEntityTypeId}"
    },
    {
        "service": "AWS Glue",
        "resource": "completion",
        "prefix": "glue",
        "arn": "arn:${Partition}:glue:${Region}:${Account}:completion/${CompletionId}"
    },
    {
        "service": "AWS Glue",
        "resource": "integration",
        "prefix": "glue",
        "arn": "arn:${Partition}:glue:${Region}:${Account}:integration:${IntegrationId}"
    },
    {
        "service": "AWS Glue DataBrew",
        "resource": "Project",
        "prefix": "databrew",
        "arn": "arn:${Partition}:databrew:${Region}:${Account}:project/${ResourceId}"
    },
    {
        "service": "AWS Glue DataBrew",
        "resource": "Dataset",
        "prefix": "databrew",
        "arn": "arn:${Partition}:databrew:${Region}:${Account}:dataset/${ResourceId}"
    },
    {
        "service": "AWS Glue DataBrew",
        "resource": "Ruleset",
        "prefix": "databrew",
        "arn": "arn:${Partition}:databrew:${Region}:${Account}:ruleset/${ResourceId}"
    },
    {
        "service": "AWS Glue DataBrew",
        "resource": "Recipe",
        "prefix": "databrew",
        "arn": "arn:${Partition}:databrew:${Region}:${Account}:recipe/${ResourceId}"
    },
    {
        "service": "AWS Glue DataBrew",
        "resource": "Job",
        "prefix": "databrew",
        "arn": "arn:${Partition}:databrew:${Region}:${Account}:job/${ResourceId}"
    },
    {
        "service": "AWS Glue DataBrew",
        "resource": "Schedule",
        "prefix": "databrew",
        "arn": "arn:${Partition}:databrew:${Region}:${Account}:schedule/${ResourceId}"
    },
    {
        "service": "AWS Ground Station",
        "resource": "Config",
        "prefix": "groundstation",
        "arn": "arn:${Partition}:groundstation:${Region}:${Account}:config/${ConfigType}/${ConfigId}"
    },
    {
        "service": "AWS Ground Station",
        "resource": "Contact",
        "prefix": "groundstation",
        "arn": "arn:${Partition}:groundstation:${Region}:${Account}:contact/${ContactId}"
    },
    {
        "service": "AWS Ground Station",
        "resource": "DataflowEndpointGroup",
        "prefix": "groundstation",
        "arn": "arn:${Partition}:groundstation:${Region}:${Account}:dataflow-endpoint-group/${DataflowEndpointGroupId}"
    },
    {
        "service": "AWS Ground Station",
        "resource": "EphemerisItem",
        "prefix": "groundstation",
        "arn": "arn:${Partition}:groundstation:${Region}:${Account}:ephemeris/${EphemerisId}"
    },
    {
        "service": "AWS Ground Station",
        "resource": "GroundStationResource",
        "prefix": "groundstation",
        "arn": "arn:${Partition}:groundstation:${Region}:${Account}:groundstation:${GroundStationId}"
    },
    {
        "service": "AWS Ground Station",
        "resource": "MissionProfile",
        "prefix": "groundstation",
        "arn": "arn:${Partition}:groundstation:${Region}:${Account}:mission-profile/${MissionProfileId}"
    },
    {
        "service": "AWS Ground Station",
        "resource": "Satellite",
        "prefix": "groundstation",
        "arn": "arn:${Partition}:groundstation:${Region}:${Account}:satellite/${SatelliteId}"
    },
    {
        "service": "AWS Ground Station",
        "resource": "Agent",
        "prefix": "groundstation",
        "arn": "arn:${Partition}:groundstation:${Region}:${Account}:agent/${AgentId}"
    },
    {
        "service": "Amazon GuardDuty",
        "resource": "detector",
        "prefix": "guardduty",
        "arn": "arn:${Partition}:guardduty:${Region}:${Account}:detector/${DetectorId}"
    },
    {
        "service": "Amazon GuardDuty",
        "resource": "filter",
        "prefix": "guardduty",
        "arn": "arn:${Partition}:guardduty:${Region}:${Account}:detector/${DetectorId}/filter/${FilterName}"
    },
    {
        "service": "Amazon GuardDuty",
        "resource": "ipset",
        "prefix": "guardduty",
        "arn": "arn:${Partition}:guardduty:${Region}:${Account}:detector/${DetectorId}/ipset/${IPSetId}"
    },
    {
        "service": "Amazon GuardDuty",
        "resource": "threatintelset",
        "prefix": "guardduty",
        "arn": "arn:${Partition}:guardduty:${Region}:${Account}:detector/${DetectorId}/threatintelset/${ThreatIntelSetId}"
    },
    {
        "service": "Amazon GuardDuty",
        "resource": "publishingDestination",
        "prefix": "guardduty",
        "arn": "arn:${Partition}:guardduty:${Region}:${Account}:detector/${DetectorId}/publishingDestination/${PublishingDestinationId}"
    },
    {
        "service": "Amazon GuardDuty",
        "resource": "malwareprotectionplan",
        "prefix": "guardduty",
        "arn": "arn:${Partition}:guardduty:${Region}:${Account}:malware-protection-plan/${MalwareProtectionPlanId}"
    },
    {
        "service": "AWS Health APIs and Notifications",
        "resource": "event",
        "prefix": "health",
        "arn": "arn:${Partition}:health:*::event/${Service}/${EventTypeCode}/*"
    },
    {
        "service": "AWS HealthImaging",
        "resource": "datastore",
        "prefix": "medical-imaging",
        "arn": "arn:${Partition}:medical-imaging:${Region}:${Account}:datastore/${DatastoreId}"
    },
    {
        "service": "AWS HealthImaging",
        "resource": "imageset",
        "prefix": "medical-imaging",
        "arn": "arn:${Partition}:medical-imaging:${Region}:${Account}:datastore/${DatastoreId}/imageset/${ImageSetId}"
    },
    {
        "service": "AWS HealthLake",
        "resource": "datastore",
        "prefix": "healthlake",
        "arn": "arn:${Partition}:healthlake:${Region}:${Account}:datastore/fhir/${DatastoreId}"
    },
    {
        "service": "AWS HealthOmics",
        "resource": "AnnotationStore",
        "prefix": "omics",
        "arn": "arn:${Partition}:omics:${Region}:${Account}:annotationStore/${AnnotationStoreName}"
    },
    {
        "service": "AWS HealthOmics",
        "resource": "AnnotationStoreVersion",
        "prefix": "omics",
        "arn": "arn:${Partition}:omics:${Region}:${Account}:annotationStore/${AnnotationStoreName}/version/${AnnotationStoreVersionName}"
    },
    {
        "service": "AWS HealthOmics",
        "resource": "readSet",
        "prefix": "omics",
        "arn": "arn:${Partition}:omics:${Region}:${Account}:sequenceStore/${SequenceStoreId}/readSet/${ReadSetId}"
    },
    {
        "service": "AWS HealthOmics",
        "resource": "reference",
        "prefix": "omics",
        "arn": "arn:${Partition}:omics:${Region}:${Account}:referenceStore/${ReferenceStoreId}/reference/${ReferenceId}"
    },
    {
        "service": "AWS HealthOmics",
        "resource": "referenceStore",
        "prefix": "omics",
        "arn": "arn:${Partition}:omics:${Region}:${Account}:referenceStore/${ReferenceStoreId}"
    },
    {
        "service": "AWS HealthOmics",
        "resource": "run",
        "prefix": "omics",
        "arn": "arn:${Partition}:omics:${Region}:${Account}:run/${Id}"
    },
    {
        "service": "AWS HealthOmics",
        "resource": "runCache",
        "prefix": "omics",
        "arn": "arn:${Partition}:omics:${Region}:${Account}:runCache/${Id}"
    },
    {
        "service": "AWS HealthOmics",
        "resource": "runGroup",
        "prefix": "omics",
        "arn": "arn:${Partition}:omics:${Region}:${Account}:runGroup/${Id}"
    },
    {
        "service": "AWS HealthOmics",
        "resource": "sequenceStore",
        "prefix": "omics",
        "arn": "arn:${Partition}:omics:${Region}:${Account}:sequenceStore/${SequenceStoreId}"
    },
    {
        "service": "AWS HealthOmics",
        "resource": "TaggingResource",
        "prefix": "omics",
        "arn": "arn:${Partition}:omics:${Region}:${Account}:tag/${TagKey}"
    },
    {
        "service": "AWS HealthOmics",
        "resource": "TaskResource",
        "prefix": "omics",
        "arn": "arn:${Partition}:omics:${Region}:${Account}:task/${Id}"
    },
    {
        "service": "AWS HealthOmics",
        "resource": "VariantStore",
        "prefix": "omics",
        "arn": "arn:${Partition}:omics:${Region}:${Account}:variantStore/${VariantStoreName}"
    },
    {
        "service": "AWS HealthOmics",
        "resource": "workflow",
        "prefix": "omics",
        "arn": "arn:${Partition}:omics:${Region}:${Account}:workflow/${Id}"
    },
    {
        "service": "AWS HealthOmics",
        "resource": "WorkflowVersion",
        "prefix": "omics",
        "arn": "arn:${Partition}:omics:${Region}:${Account}:workflow/${Id}/version/${VersionName}"
    },
    {
        "service": "Amazon Honeycode",
        "resource": "workbook",
        "prefix": "honeycode",
        "arn": "arn:${Partition}:honeycode:${Region}:${Account}:workbook:workbook/${WorkbookId}"
    },
    {
        "service": "Amazon Honeycode",
        "resource": "table",
        "prefix": "honeycode",
        "arn": "arn:${Partition}:honeycode:${Region}:${Account}:table:workbook/${WorkbookId}/table/${TableId}"
    },
    {
        "service": "Amazon Honeycode",
        "resource": "screen",
        "prefix": "honeycode",
        "arn": "arn:${Partition}:honeycode:${Region}:${Account}:screen:workbook/${WorkbookId}/app/${AppId}/screen/${ScreenId}"
    },
    {
        "service": "Amazon Honeycode",
        "resource": "screen-automation",
        "prefix": "honeycode",
        "arn": "arn:${Partition}:honeycode:${Region}:${Account}:screen-automation:workbook/${WorkbookId}/app/${AppId}/screen/${ScreenId}/automation/${AutomationId}"
    },
    {
        "service": "AWS IAM Access Analyzer",
        "resource": "Analyzer",
        "prefix": "access-analyzer",
        "arn": "arn:${Partition}:access-analyzer:${Region}:${Account}:analyzer/${AnalyzerName}"
    },
    {
        "service": "AWS IAM Access Analyzer",
        "resource": "ArchiveRule",
        "prefix": "access-analyzer",
        "arn": "arn:${Partition}:access-analyzer:${Region}:${Account}:analyzer/${AnalyzerName}/archive-rule/${RuleName}"
    },
    {
        "service": "AWS IAM Identity Center",
        "resource": "PermissionSet",
        "prefix": "sso",
        "arn": "arn:${Partition}:sso:::permissionSet/${InstanceId}/${PermissionSetId}"
    },
    {
        "service": "AWS IAM Identity Center",
        "resource": "Account",
        "prefix": "sso",
        "arn": "arn:${Partition}:sso:::account/${AccountId}"
    },
    {
        "service": "AWS IAM Identity Center",
        "resource": "Instance",
        "prefix": "sso",
        "arn": "arn:${Partition}:sso:::instance/${InstanceId}"
    },
    {
        "service": "AWS IAM Identity Center",
        "resource": "Application",
        "prefix": "sso",
        "arn": "arn:${Partition}:sso::${AccountId}:application/${InstanceId}/${ApplicationId}"
    },
    {
        "service": "AWS IAM Identity Center",
        "resource": "TrustedTokenIssuer",
        "prefix": "sso",
        "arn": "arn:${Partition}:sso::${AccountId}:trustedTokenIssuer/${InstanceId}/${TrustedTokenIssuerId}"
    },
    {
        "service": "AWS IAM Identity Center",
        "resource": "ApplicationProvider",
        "prefix": "sso",
        "arn": "arn:${Partition}:sso::aws:applicationProvider/${ApplicationProviderId}"
    },
    {
        "service": "AWS Identity and Access Management (IAM)",
        "resource": "access-report",
        "prefix": "iam",
        "arn": "arn:${Partition}:iam::${Account}:access-report/${EntityPath}"
    },
    {
        "service": "AWS Identity and Access Management (IAM)",
        "resource": "assumed-role",
        "prefix": "iam",
        "arn": "arn:${Partition}:iam::${Account}:assumed-role/${RoleName}/${RoleSessionName}"
    },
    {
        "service": "AWS Identity and Access Management (IAM)",
        "resource": "federated-user",
        "prefix": "iam",
        "arn": "arn:${Partition}:iam::${Account}:federated-user/${UserName}"
    },
    {
        "service": "AWS Identity and Access Management (IAM)",
        "resource": "group",
        "prefix": "iam",
        "arn": "arn:${Partition}:iam::${Account}:group/${GroupNameWithPath}"
    },
    {
        "service": "AWS Identity and Access Management (IAM)",
        "resource": "instance-profile",
        "prefix": "iam",
        "arn": "arn:${Partition}:iam::${Account}:instance-profile/${InstanceProfileNameWithPath}"
    },
    {
        "service": "AWS Identity and Access Management (IAM)",
        "resource": "mfa",
        "prefix": "iam",
        "arn": "arn:${Partition}:iam::${Account}:mfa/${MfaTokenIdWithPath}"
    },
    {
        "service": "AWS Identity and Access Management (IAM)",
        "resource": "oidc-provider",
        "prefix": "iam",
        "arn": "arn:${Partition}:iam::${Account}:oidc-provider/${OidcProviderName}"
    },
    {
        "service": "AWS Identity and Access Management (IAM)",
        "resource": "policy",
        "prefix": "iam",
        "arn": "arn:${Partition}:iam::${Account}:policy/${PolicyNameWithPath}"
    },
    {
        "service": "AWS Identity and Access Management (IAM)",
        "resource": "role",
        "prefix": "iam",
        "arn": "arn:${Partition}:iam::${Account}:role/${RoleNameWithPath}"
    },
    {
        "service": "AWS Identity and Access Management (IAM)",
        "resource": "saml-provider",
        "prefix": "iam",
        "arn": "arn:${Partition}:iam::${Account}:saml-provider/${SamlProviderName}"
    },
    {
        "service": "AWS Identity and Access Management (IAM)",
        "resource": "server-certificate",
        "prefix": "iam",
        "arn": "arn:${Partition}:iam::${Account}:server-certificate/${CertificateNameWithPath}"
    },
    {
        "service": "AWS Identity and Access Management (IAM)",
        "resource": "sms-mfa",
        "prefix": "iam",
        "arn": "arn:${Partition}:iam::${Account}:sms-mfa/${MfaTokenIdWithPath}"
    },
    {
        "service": "AWS Identity and Access Management (IAM)",
        "resource": "user",
        "prefix": "iam",
        "arn": "arn:${Partition}:iam::${Account}:user/${UserNameWithPath}"
    },
    {
        "service": "AWS Identity and Access Management Roles Anywhere",
        "resource": "trust-anchor",
        "prefix": "rolesanywhere",
        "arn": "arn:${Partition}:rolesanywhere:${Region}:${Account}:trust-anchor/${TrustAnchorId}"
    },
    {
        "service": "AWS Identity and Access Management Roles Anywhere",
        "resource": "profile",
        "prefix": "rolesanywhere",
        "arn": "arn:${Partition}:rolesanywhere:${Region}:${Account}:profile/${ProfileId}"
    },
    {
        "service": "AWS Identity and Access Management Roles Anywhere",
        "resource": "subject",
        "prefix": "rolesanywhere",
        "arn": "arn:${Partition}:rolesanywhere:${Region}:${Account}:subject/${SubjectId}"
    },
    {
        "service": "AWS Identity and Access Management Roles Anywhere",
        "resource": "crl",
        "prefix": "rolesanywhere",
        "arn": "arn:${Partition}:rolesanywhere:${Region}:${Account}:crl/${CrlId}"
    },
    {
        "service": "AWS Identity Store",
        "resource": "Identitystore",
        "prefix": "identitystore",
        "arn": "arn:${Partition}:identitystore::${Account}:identitystore/${IdentityStoreId}"
    },
    {
        "service": "AWS Identity Store",
        "resource": "User",
        "prefix": "identitystore",
        "arn": "arn:${Partition}:identitystore:::user/${UserId}"
    },
    {
        "service": "AWS Identity Store",
        "resource": "Group",
        "prefix": "identitystore",
        "arn": "arn:${Partition}:identitystore:::group/${GroupId}"
    },
    {
        "service": "AWS Identity Store",
        "resource": "GroupMembership",
        "prefix": "identitystore",
        "arn": "arn:${Partition}:identitystore:::membership/${MembershipId}"
    },
    {
        "service": "AWS Identity Store",
        "resource": "AllUsers",
        "prefix": "identitystore",
        "arn": "arn:${Partition}:identitystore:::user/*"
    },
    {
        "service": "AWS Identity Store",
        "resource": "AllGroups",
        "prefix": "identitystore",
        "arn": "arn:${Partition}:identitystore:::group/*"
    },
    {
        "service": "AWS Identity Store",
        "resource": "AllGroupMemberships",
        "prefix": "identitystore",
        "arn": "arn:${Partition}:identitystore:::membership/*"
    },
    {
        "service": "AWS Identity Sync",
        "resource": "SyncProfileResource",
        "prefix": "identity-sync",
        "arn": "arn:${Partition}:identity-sync:${Region}:${Account}:profile/${SyncProfileName}"
    },
    {
        "service": "AWS Identity Sync",
        "resource": "SyncTargetResource",
        "prefix": "identity-sync",
        "arn": "arn:${Partition}:identity-sync:${Region}:${Account}:target/${SyncProfileName}/${SyncTargetName}"
    },
    {
        "service": "Amazon Inspector2",
        "resource": "Filter",
        "prefix": "inspector2",
        "arn": "arn:${Partition}:inspector2:${Region}:${Account}:owner/${OwnerId}/filter/${FilterId}"
    },
    {
        "service": "Amazon Inspector2",
        "resource": "Finding",
        "prefix": "inspector2",
        "arn": "arn:${Partition}:inspector2:${Region}:${Account}:finding/${FindingId}"
    },
    {
        "service": "Amazon Inspector2",
        "resource": "CIS Scan Configuration",
        "prefix": "inspector2",
        "arn": "arn:${Partition}:inspector2:${Region}:${Account}:owner/${OwnerId}/cis-configuration/${CISScanConfigurationId}"
    },
    {
        "service": "Amazon Interactive Video Service",
        "resource": "Channel",
        "prefix": "ivs",
        "arn": "arn:${Partition}:ivs:${Region}:${Account}:channel/${ResourceId}"
    },
    {
        "service": "Amazon Interactive Video Service",
        "resource": "Stream-Key",
        "prefix": "ivs",
        "arn": "arn:${Partition}:ivs:${Region}:${Account}:stream-key/${ResourceId}"
    },
    {
        "service": "Amazon Interactive Video Service",
        "resource": "Playback-Key-Pair",
        "prefix": "ivs",
        "arn": "arn:${Partition}:ivs:${Region}:${Account}:playback-key/${ResourceId}"
    },
    {
        "service": "Amazon Interactive Video Service",
        "resource": "Playback-Restriction-Policy",
        "prefix": "ivs",
        "arn": "arn:${Partition}:ivs:${Region}:${Account}:playback-restriction-policy/${ResourceId}"
    },
    {
        "service": "Amazon Interactive Video Service",
        "resource": "Recording-Configuration",
        "prefix": "ivs",
        "arn": "arn:${Partition}:ivs:${Region}:${Account}:recording-configuration/${ResourceId}"
    },
    {
        "service": "Amazon Interactive Video Service",
        "resource": "Stage",
        "prefix": "ivs",
        "arn": "arn:${Partition}:ivs:${Region}:${Account}:stage/${ResourceId}"
    },
    {
        "service": "Amazon Interactive Video Service",
        "resource": "Composition",
        "prefix": "ivs",
        "arn": "arn:${Partition}:ivs:${Region}:${Account}:composition/${ResourceId}"
    },
    {
        "service": "Amazon Interactive Video Service",
        "resource": "Encoder-Configuration",
        "prefix": "ivs",
        "arn": "arn:${Partition}:ivs:${Region}:${Account}:encoder-configuration/${ResourceId}"
    },
    {
        "service": "Amazon Interactive Video Service",
        "resource": "Storage-Configuration",
        "prefix": "ivs",
        "arn": "arn:${Partition}:ivs:${Region}:${Account}:storage-configuration/${ResourceId}"
    },
    {
        "service": "Amazon Interactive Video Service",
        "resource": "Public-Key",
        "prefix": "ivs",
        "arn": "arn:${Partition}:ivs:${Region}:${Account}:public-key/${ResourceId}"
    },
    {
        "service": "Amazon Interactive Video Service",
        "resource": "Ingest-Configuration",
        "prefix": "ivs",
        "arn": "arn:${Partition}:ivs:${Region}:${Account}:ingest-configuration/${ResourceId}"
    },
    {
        "service": "Amazon Interactive Video Service Chat",
        "resource": "Room",
        "prefix": "ivschat",
        "arn": "arn:${Partition}:ivschat:${Region}:${Account}:room/${ResourceId}"
    },
    {
        "service": "Amazon Interactive Video Service Chat",
        "resource": "Logging-Configuration",
        "prefix": "ivschat",
        "arn": "arn:${Partition}:ivschat:${Region}:${Account}:logging-configuration/${ResourceId}"
    },
    {
        "service": "AWS Invoicing Service",
        "resource": "invoice-unit",
        "prefix": "invoicing",
        "arn": "arn:${Partition}:invoicing::${Account}:invoice-unit/${Identifier}"
    },
    {
        "service": "AWS IoT",
        "resource": "client",
        "prefix": "iot",
        "arn": "arn:${Partition}:iot:${Region}:${Account}:client/${ClientId}"
    },
    {
        "service": "AWS IoT",
        "resource": "index",
        "prefix": "iot",
        "arn": "arn:${Partition}:iot:${Region}:${Account}:index/${IndexName}"
    },
    {
        "service": "AWS IoT",
        "resource": "fleetmetric",
        "prefix": "iot",
        "arn": "arn:${Partition}:iot:${Region}:${Account}:fleetmetric/${FleetMetricName}"
    },
    {
        "service": "AWS IoT",
        "resource": "job",
        "prefix": "iot",
        "arn": "arn:${Partition}:iot:${Region}:${Account}:job/${JobId}"
    },
    {
        "service": "AWS IoT",
        "resource": "jobtemplate",
        "prefix": "iot",
        "arn": "arn:${Partition}:iot:${Region}:${Account}:jobtemplate/${JobTemplateId}"
    },
    {
        "service": "AWS IoT",
        "resource": "tunnel",
        "prefix": "iot",
        "arn": "arn:${Partition}:iot:${Region}:${Account}:tunnel/${TunnelId}"
    },
    {
        "service": "AWS IoT",
        "resource": "thing",
        "prefix": "iot",
        "arn": "arn:${Partition}:iot:${Region}:${Account}:thing/${ThingName}"
    },
    {
        "service": "AWS IoT",
        "resource": "thinggroup",
        "prefix": "iot",
        "arn": "arn:${Partition}:iot:${Region}:${Account}:thinggroup/${ThingGroupName}"
    },
    {
        "service": "AWS IoT",
        "resource": "billinggroup",
        "prefix": "iot",
        "arn": "arn:${Partition}:iot:${Region}:${Account}:billinggroup/${BillingGroupName}"
    },
    {
        "service": "AWS IoT",
        "resource": "thingtype",
        "prefix": "iot",
        "arn": "arn:${Partition}:iot:${Region}:${Account}:thingtype/${ThingTypeName}"
    },
    {
        "service": "AWS IoT",
        "resource": "topic",
        "prefix": "iot",
        "arn": "arn:${Partition}:iot:${Region}:${Account}:topic/${TopicName}"
    },
    {
        "service": "AWS IoT",
        "resource": "topicfilter",
        "prefix": "iot",
        "arn": "arn:${Partition}:iot:${Region}:${Account}:topicfilter/${TopicFilter}"
    },
    {
        "service": "AWS IoT",
        "resource": "rolealias",
        "prefix": "iot",
        "arn": "arn:${Partition}:iot:${Region}:${Account}:rolealias/${RoleAlias}"
    },
    {
        "service": "AWS IoT",
        "resource": "authorizer",
        "prefix": "iot",
        "arn": "arn:${Partition}:iot:${Region}:${Account}:authorizer/${AuthorizerName}"
    },
    {
        "service": "AWS IoT",
        "resource": "policy",
        "prefix": "iot",
        "arn": "arn:${Partition}:iot:${Region}:${Account}:policy/${PolicyName}"
    },
    {
        "service": "AWS IoT",
        "resource": "cert",
        "prefix": "iot",
        "arn": "arn:${Partition}:iot:${Region}:${Account}:cert/${Certificate}"
    },
    {
        "service": "AWS IoT",
        "resource": "cacert",
        "prefix": "iot",
        "arn": "arn:${Partition}:iot:${Region}:${Account}:cacert/${CACertificate}"
    },
    {
        "service": "AWS IoT",
        "resource": "stream",
        "prefix": "iot",
        "arn": "arn:${Partition}:iot:${Region}:${Account}:stream/${StreamId}"
    },
    {
        "service": "AWS IoT",
        "resource": "otaupdate",
        "prefix": "iot",
        "arn": "arn:${Partition}:iot:${Region}:${Account}:otaupdate/${OtaUpdateId}"
    },
    {
        "service": "AWS IoT",
        "resource": "scheduledaudit",
        "prefix": "iot",
        "arn": "arn:${Partition}:iot:${Region}:${Account}:scheduledaudit/${ScheduleName}"
    },
    {
        "service": "AWS IoT",
        "resource": "mitigationaction",
        "prefix": "iot",
        "arn": "arn:${Partition}:iot:${Region}:${Account}:mitigationaction/${MitigationActionName}"
    },
    {
        "service": "AWS IoT",
        "resource": "securityprofile",
        "prefix": "iot",
        "arn": "arn:${Partition}:iot:${Region}:${Account}:securityprofile/${SecurityProfileName}"
    },
    {
        "service": "AWS IoT",
        "resource": "custommetric",
        "prefix": "iot",
        "arn": "arn:${Partition}:iot:${Region}:${Account}:custommetric/${MetricName}"
    },
    {
        "service": "AWS IoT",
        "resource": "dimension",
        "prefix": "iot",
        "arn": "arn:${Partition}:iot:${Region}:${Account}:dimension/${DimensionName}"
    },
    {
        "service": "AWS IoT",
        "resource": "rule",
        "prefix": "iot",
        "arn": "arn:${Partition}:iot:${Region}:${Account}:rule/${RuleName}"
    },
    {
        "service": "AWS IoT",
        "resource": "destination",
        "prefix": "iot",
        "arn": "arn:${Partition}:iot:${Region}:${Account}:ruledestination/${DestinationType}/${Uuid}"
    },
    {
        "service": "AWS IoT",
        "resource": "provisioningtemplate",
        "prefix": "iot",
        "arn": "arn:${Partition}:iot:${Region}:${Account}:provisioningtemplate/${ProvisioningTemplate}"
    },
    {
        "service": "AWS IoT",
        "resource": "domainconfiguration",
        "prefix": "iot",
        "arn": "arn:${Partition}:iot:${Region}:${Account}:domainconfiguration/${DomainConfigurationName}/${Id}"
    },
    {
        "service": "AWS IoT",
        "resource": "package",
        "prefix": "iot",
        "arn": "arn:${Partition}:iot:${Region}:${Account}:package/${PackageName}"
    },
    {
        "service": "AWS IoT",
        "resource": "packageversion",
        "prefix": "iot",
        "arn": "arn:${Partition}:iot:${Region}:${Account}:package/${PackageName}/version/${VersionName}"
    },
    {
        "service": "AWS IoT",
        "resource": "certificateprovider",
        "prefix": "iot",
        "arn": "arn:${Partition}:iot:${Region}:${Account}:certificateprovider/${CertificateProviderName}"
    },
    {
        "service": "AWS IoT",
        "resource": "command",
        "prefix": "iot",
        "arn": "arn:${Partition}:iot:${Region}:${Account}:command/${CommandId}"
    },
    {
        "service": "AWS IoT Analytics",
        "resource": "channel",
        "prefix": "iotanalytics",
        "arn": "arn:${Partition}:iotanalytics:${Region}:${Account}:channel/${ChannelName}"
    },
    {
        "service": "AWS IoT Analytics",
        "resource": "dataset",
        "prefix": "iotanalytics",
        "arn": "arn:${Partition}:iotanalytics:${Region}:${Account}:dataset/${DatasetName}"
    },
    {
        "service": "AWS IoT Analytics",
        "resource": "datastore",
        "prefix": "iotanalytics",
        "arn": "arn:${Partition}:iotanalytics:${Region}:${Account}:datastore/${DatastoreName}"
    },
    {
        "service": "AWS IoT Analytics",
        "resource": "pipeline",
        "prefix": "iotanalytics",
        "arn": "arn:${Partition}:iotanalytics:${Region}:${Account}:pipeline/${PipelineName}"
    },
    {
        "service": "AWS IoT Core Device Advisor",
        "resource": "Suitedefinition",
        "prefix": "iotdeviceadvisor",
        "arn": "arn:${Partition}:iotdeviceadvisor:${Region}:${Account}:suitedefinition/${SuiteDefinitionId}"
    },
    {
        "service": "AWS IoT Core Device Advisor",
        "resource": "Suiterun",
        "prefix": "iotdeviceadvisor",
        "arn": "arn:${Partition}:iotdeviceadvisor:${Region}:${Account}:suiterun/${SuiteDefinitionId}/${SuiteRunId}"
    },
    {
        "service": "AWS IoT Events",
        "resource": "detectorModel",
        "prefix": "iotevents",
        "arn": "arn:${Partition}:iotevents:${Region}:${Account}:detectorModel/${DetectorModelName}"
    },
    {
        "service": "AWS IoT Events",
        "resource": "alarmModel",
        "prefix": "iotevents",
        "arn": "arn:${Partition}:iotevents:${Region}:${Account}:alarmModel/${AlarmModelName}"
    },
    {
        "service": "AWS IoT Events",
        "resource": "input",
        "prefix": "iotevents",
        "arn": "arn:${Partition}:iotevents:${Region}:${Account}:input/${InputName}"
    },
    {
        "service": "AWS IoT Fleet Hub for Device Management",
        "resource": "application",
        "prefix": "iotfleethub",
        "arn": "arn:${Partition}:iotfleethub:${Region}:${Account}:application/${ApplicationId}"
    },
    {
        "service": "AWS IoT FleetWise",
        "resource": "campaign",
        "prefix": "iotfleetwise",
        "arn": "arn:${Partition}:iotfleetwise:${Region}:${Account}:campaign/${CampaignName}"
    },
    {
        "service": "AWS IoT FleetWise",
        "resource": "decodermanifest",
        "prefix": "iotfleetwise",
        "arn": "arn:${Partition}:iotfleetwise:${Region}:${Account}:decoder-manifest/${Name}"
    },
    {
        "service": "AWS IoT FleetWise",
        "resource": "fleet",
        "prefix": "iotfleetwise",
        "arn": "arn:${Partition}:iotfleetwise:${Region}:${Account}:fleet/${FleetId}"
    },
    {
        "service": "AWS IoT FleetWise",
        "resource": "modelmanifest",
        "prefix": "iotfleetwise",
        "arn": "arn:${Partition}:iotfleetwise:${Region}:${Account}:model-manifest/${Name}"
    },
    {
        "service": "AWS IoT FleetWise",
        "resource": "signalcatalog",
        "prefix": "iotfleetwise",
        "arn": "arn:${Partition}:iotfleetwise:${Region}:${Account}:signal-catalog/${Name}"
    },
    {
        "service": "AWS IoT FleetWise",
        "resource": "vehicle",
        "prefix": "iotfleetwise",
        "arn": "arn:${Partition}:iotfleetwise:${Region}:${Account}:vehicle/${VehicleId}"
    },
    {
        "service": "AWS IoT FleetWise",
        "resource": "statetemplate",
        "prefix": "iotfleetwise",
        "arn": "arn:${Partition}:iotfleetwise:${Region}:${Account}:state-template/${StateTemplateId}"
    },
    {
        "service": "AWS IoT Greengrass",
        "resource": "connectivityInfo",
        "prefix": "greengrass",
        "arn": "arn:${Partition}:greengrass:${Region}:${Account}:/greengrass/things/${ThingName}/connectivityInfo"
    },
    {
        "service": "AWS IoT Greengrass",
        "resource": "certificateAuthority",
        "prefix": "greengrass",
        "arn": "arn:${Partition}:greengrass:${Region}:${Account}:/greengrass/groups/${GroupId}/certificateauthorities/${CertificateAuthorityId}"
    },
    {
        "service": "AWS IoT Greengrass",
        "resource": "deployment",
        "prefix": "greengrass",
        "arn": "arn:${Partition}:greengrass:${Region}:${Account}:/greengrass/groups/${GroupId}/deployments/${DeploymentId}"
    },
    {
        "service": "AWS IoT Greengrass",
        "resource": "bulkDeployment",
        "prefix": "greengrass",
        "arn": "arn:${Partition}:greengrass:${Region}:${Account}:/greengrass/bulk/deployments/${BulkDeploymentId}"
    },
    {
        "service": "AWS IoT Greengrass",
        "resource": "group",
        "prefix": "greengrass",
        "arn": "arn:${Partition}:greengrass:${Region}:${Account}:/greengrass/groups/${GroupId}"
    },
    {
        "service": "AWS IoT Greengrass",
        "resource": "groupVersion",
        "prefix": "greengrass",
        "arn": "arn:${Partition}:greengrass:${Region}:${Account}:/greengrass/groups/${GroupId}/versions/${VersionId}"
    },
    {
        "service": "AWS IoT Greengrass",
        "resource": "coreDefinition",
        "prefix": "greengrass",
        "arn": "arn:${Partition}:greengrass:${Region}:${Account}:/greengrass/definition/cores/${CoreDefinitionId}"
    },
    {
        "service": "AWS IoT Greengrass",
        "resource": "coreDefinitionVersion",
        "prefix": "greengrass",
        "arn": "arn:${Partition}:greengrass:${Region}:${Account}:/greengrass/definition/cores/${CoreDefinitionId}/versions/${VersionId}"
    },
    {
        "service": "AWS IoT Greengrass",
        "resource": "deviceDefinition",
        "prefix": "greengrass",
        "arn": "arn:${Partition}:greengrass:${Region}:${Account}:/greengrass/definition/devices/${DeviceDefinitionId}"
    },
    {
        "service": "AWS IoT Greengrass",
        "resource": "deviceDefinitionVersion",
        "prefix": "greengrass",
        "arn": "arn:${Partition}:greengrass:${Region}:${Account}:/greengrass/definition/devices/${DeviceDefinitionId}/versions/${VersionId}"
    },
    {
        "service": "AWS IoT Greengrass",
        "resource": "functionDefinition",
        "prefix": "greengrass",
        "arn": "arn:${Partition}:greengrass:${Region}:${Account}:/greengrass/definition/functions/${FunctionDefinitionId}"
    },
    {
        "service": "AWS IoT Greengrass",
        "resource": "functionDefinitionVersion",
        "prefix": "greengrass",
        "arn": "arn:${Partition}:greengrass:${Region}:${Account}:/greengrass/definition/functions/${FunctionDefinitionId}/versions/${VersionId}"
    },
    {
        "service": "AWS IoT Greengrass",
        "resource": "subscriptionDefinition",
        "prefix": "greengrass",
        "arn": "arn:${Partition}:greengrass:${Region}:${Account}:/greengrass/definition/subscriptions/${SubscriptionDefinitionId}"
    },
    {
        "service": "AWS IoT Greengrass",
        "resource": "subscriptionDefinitionVersion",
        "prefix": "greengrass",
        "arn": "arn:${Partition}:greengrass:${Region}:${Account}:/greengrass/definition/subscriptions/${SubscriptionDefinitionId}/versions/${VersionId}"
    },
    {
        "service": "AWS IoT Greengrass",
        "resource": "loggerDefinition",
        "prefix": "greengrass",
        "arn": "arn:${Partition}:greengrass:${Region}:${Account}:/greengrass/definition/loggers/${LoggerDefinitionId}"
    },
    {
        "service": "AWS IoT Greengrass",
        "resource": "loggerDefinitionVersion",
        "prefix": "greengrass",
        "arn": "arn:${Partition}:greengrass:${Region}:${Account}:/greengrass/definition/loggers/${LoggerDefinitionId}/versions/${VersionId}"
    },
    {
        "service": "AWS IoT Greengrass",
        "resource": "resourceDefinition",
        "prefix": "greengrass",
        "arn": "arn:${Partition}:greengrass:${Region}:${Account}:/greengrass/definition/resources/${ResourceDefinitionId}"
    },
    {
        "service": "AWS IoT Greengrass",
        "resource": "resourceDefinitionVersion",
        "prefix": "greengrass",
        "arn": "arn:${Partition}:greengrass:${Region}:${Account}:/greengrass/definition/resources/${ResourceDefinitionId}/versions/${VersionId}"
    },
    {
        "service": "AWS IoT Greengrass",
        "resource": "connectorDefinition",
        "prefix": "greengrass",
        "arn": "arn:${Partition}:greengrass:${Region}:${Account}:/greengrass/definition/connectors/${ConnectorDefinitionId}"
    },
    {
        "service": "AWS IoT Greengrass",
        "resource": "connectorDefinitionVersion",
        "prefix": "greengrass",
        "arn": "arn:${Partition}:greengrass:${Region}:${Account}:/greengrass/definition/connectors/${ConnectorDefinitionId}/versions/${VersionId}"
    },
    {
        "service": "AWS IoT Greengrass",
        "resource": "thingRuntimeConfig",
        "prefix": "greengrass",
        "arn": "arn:${Partition}:greengrass:${Region}:${Account}:/greengrass/things/${ThingName}/runtimeconfig"
    },
    {
        "service": "AWS IoT Greengrass V2",
        "resource": "component",
        "prefix": "greengrass",
        "arn": "arn:${Partition}:greengrass:${Region}:${Account}:components:${ComponentName}"
    },
    {
        "service": "AWS IoT Greengrass V2",
        "resource": "componentVersion",
        "prefix": "greengrass",
        "arn": "arn:${Partition}:greengrass:${Region}:${Account}:components:${ComponentName}:versions:${ComponentVersion}"
    },
    {
        "service": "AWS IoT Greengrass V2",
        "resource": "coreDevice",
        "prefix": "greengrass",
        "arn": "arn:${Partition}:greengrass:${Region}:${Account}:coreDevices:${CoreDeviceThingName}"
    },
    {
        "service": "AWS IoT Greengrass V2",
        "resource": "deployment",
        "prefix": "greengrass",
        "arn": "arn:${Partition}:greengrass:${Region}:${Account}:deployments:${DeploymentId}"
    },
    {
        "service": "AWS IoT managed integrations feature of IoT Device Management",
        "resource": "CredentialLockerResource",
        "prefix": "iotmanagedintegrations",
        "arn": "arn:${Partition}:iotmanagedintegrations:${Region}:${Account}:credential-locker/${Identifier}"
    },
    {
        "service": "AWS IoT managed integrations feature of IoT Device Management",
        "resource": "ManagedThingResource",
        "prefix": "iotmanagedintegrations",
        "arn": "arn:${Partition}:iotmanagedintegrations:${Region}:${Account}:managed-thing/${Identifier}"
    },
    {
        "service": "AWS IoT managed integrations feature of IoT Device Management",
        "resource": "OtaTaskResource",
        "prefix": "iotmanagedintegrations",
        "arn": "arn:${Partition}:iotmanagedintegrations:${Region}:${Account}:ota-task/${Identifier}"
    },
    {
        "service": "AWS IoT managed integrations feature of IoT Device Management",
        "resource": "ProvisioningProfileResource",
        "prefix": "iotmanagedintegrations",
        "arn": "arn:${Partition}:iotmanagedintegrations:${Region}:${Account}:provisioning-profile/${Identifier}"
    },
    {
        "service": "AWS IoT SiteWise",
        "resource": "asset",
        "prefix": "iotsitewise",
        "arn": "arn:${Partition}:iotsitewise:${Region}:${Account}:asset/${AssetId}"
    },
    {
        "service": "AWS IoT SiteWise",
        "resource": "asset-model",
        "prefix": "iotsitewise",
        "arn": "arn:${Partition}:iotsitewise:${Region}:${Account}:asset-model/${AssetModelId}"
    },
    {
        "service": "AWS IoT SiteWise",
        "resource": "time-series",
        "prefix": "iotsitewise",
        "arn": "arn:${Partition}:iotsitewise:${Region}:${Account}:time-series/${TimeSeriesId}"
    },
    {
        "service": "AWS IoT SiteWise",
        "resource": "gateway",
        "prefix": "iotsitewise",
        "arn": "arn:${Partition}:iotsitewise:${Region}:${Account}:gateway/${GatewayId}"
    },
    {
        "service": "AWS IoT SiteWise",
        "resource": "portal",
        "prefix": "iotsitewise",
        "arn": "arn:${Partition}:iotsitewise:${Region}:${Account}:portal/${PortalId}"
    },
    {
        "service": "AWS IoT SiteWise",
        "resource": "project",
        "prefix": "iotsitewise",
        "arn": "arn:${Partition}:iotsitewise:${Region}:${Account}:project/${ProjectId}"
    },
    {
        "service": "AWS IoT SiteWise",
        "resource": "dashboard",
        "prefix": "iotsitewise",
        "arn": "arn:${Partition}:iotsitewise:${Region}:${Account}:dashboard/${DashboardId}"
    },
    {
        "service": "AWS IoT SiteWise",
        "resource": "access-policy",
        "prefix": "iotsitewise",
        "arn": "arn:${Partition}:iotsitewise:${Region}:${Account}:access-policy/${AccessPolicyId}"
    },
    {
        "service": "AWS IoT SiteWise",
        "resource": "dataset",
        "prefix": "iotsitewise",
        "arn": "arn:${Partition}:iotsitewise:${Region}:${Account}:dataset/${DatasetId}"
    },
    {
        "service": "AWS IoT TwinMaker",
        "resource": "workspace",
        "prefix": "iottwinmaker",
        "arn": "arn:${Partition}:iottwinmaker:${Region}:${Account}:workspace/${WorkspaceId}"
    },
    {
        "service": "AWS IoT TwinMaker",
        "resource": "entity",
        "prefix": "iottwinmaker",
        "arn": "arn:${Partition}:iottwinmaker:${Region}:${Account}:workspace/${WorkspaceId}/entity/${EntityId}"
    },
    {
        "service": "AWS IoT TwinMaker",
        "resource": "componentType",
        "prefix": "iottwinmaker",
        "arn": "arn:${Partition}:iottwinmaker:${Region}:${Account}:workspace/${WorkspaceId}/component-type/${ComponentTypeId}"
    },
    {
        "service": "AWS IoT TwinMaker",
        "resource": "scene",
        "prefix": "iottwinmaker",
        "arn": "arn:${Partition}:iottwinmaker:${Region}:${Account}:workspace/${WorkspaceId}/scene/${SceneId}"
    },
    {
        "service": "AWS IoT TwinMaker",
        "resource": "syncJob",
        "prefix": "iottwinmaker",
        "arn": "arn:${Partition}:iottwinmaker:${Region}:${Account}:workspace/${WorkspaceId}/sync-job/${SyncJobId}"
    },
    {
        "service": "AWS IoT TwinMaker",
        "resource": "metadataTransferJob",
        "prefix": "iottwinmaker",
        "arn": "arn:${Partition}:iottwinmaker:${Region}:${Account}:metadata-transfer-job/${MetadataTransferJobId}"
    },
    {
        "service": "AWS IoT Wireless",
        "resource": "WirelessDevice",
        "prefix": "iotwireless",
        "arn": "arn:${Partition}:iotwireless:${Region}:${Account}:WirelessDevice/${WirelessDeviceId}"
    },
    {
        "service": "AWS IoT Wireless",
        "resource": "WirelessGateway",
        "prefix": "iotwireless",
        "arn": "arn:${Partition}:iotwireless:${Region}:${Account}:WirelessGateway/${WirelessGatewayId}"
    },
    {
        "service": "AWS IoT Wireless",
        "resource": "DeviceProfile",
        "prefix": "iotwireless",
        "arn": "arn:${Partition}:iotwireless:${Region}:${Account}:DeviceProfile/${DeviceProfileId}"
    },
    {
        "service": "AWS IoT Wireless",
        "resource": "ServiceProfile",
        "prefix": "iotwireless",
        "arn": "arn:${Partition}:iotwireless:${Region}:${Account}:ServiceProfile/${ServiceProfileId}"
    },
    {
        "service": "AWS IoT Wireless",
        "resource": "Destination",
        "prefix": "iotwireless",
        "arn": "arn:${Partition}:iotwireless:${Region}:${Account}:Destination/${DestinationName}"
    },
    {
        "service": "AWS IoT Wireless",
        "resource": "SidewalkAccount",
        "prefix": "iotwireless",
        "arn": "arn:${Partition}:iotwireless:${Region}:${Account}:SidewalkAccount/${SidewalkAccountId}"
    },
    {
        "service": "AWS IoT Wireless",
        "resource": "WirelessGatewayTaskDefinition",
        "prefix": "iotwireless",
        "arn": "arn:${Partition}:iotwireless:${Region}:${Account}:WirelessGatewayTaskDefinition/${WirelessGatewayTaskDefinitionId}"
    },
    {
        "service": "AWS IoT Wireless",
        "resource": "FuotaTask",
        "prefix": "iotwireless",
        "arn": "arn:${Partition}:iotwireless:${Region}:${Account}:FuotaTask/${FuotaTaskId}"
    },
    {
        "service": "AWS IoT Wireless",
        "resource": "MulticastGroup",
        "prefix": "iotwireless",
        "arn": "arn:${Partition}:iotwireless:${Region}:${Account}:MulticastGroup/${MulticastGroupId}"
    },
    {
        "service": "AWS IoT Wireless",
        "resource": "NetworkAnalyzerConfiguration",
        "prefix": "iotwireless",
        "arn": "arn:${Partition}:iotwireless:${Region}:${Account}:NetworkAnalyzerConfiguration/${NetworkAnalyzerConfigurationName}"
    },
    {
        "service": "AWS IoT Wireless",
        "resource": "ImportTask",
        "prefix": "iotwireless",
        "arn": "arn:${Partition}:iotwireless:${Region}:${Account}:ImportTask/${ImportTaskId}"
    },
    {
        "service": "AWS IQ",
        "resource": "conversation",
        "prefix": "iq",
        "arn": "arn:${Partition}:iq:${Region}::conversation/${ConversationId}"
    },
    {
        "service": "AWS IQ",
        "resource": "buyer",
        "prefix": "iq",
        "arn": "arn:${Partition}:iq:${Region}::buyer/${BuyerId}"
    },
    {
        "service": "AWS IQ",
        "resource": "expert",
        "prefix": "iq",
        "arn": "arn:${Partition}:iq:${Region}::expert/${ExpertId}"
    },
    {
        "service": "AWS IQ",
        "resource": "call",
        "prefix": "iq",
        "arn": "arn:${Partition}:iq:${Region}::call/${CallId}"
    },
    {
        "service": "AWS IQ",
        "resource": "token",
        "prefix": "iq",
        "arn": "arn:${Partition}:iq:${Region}::token/${TokenId}"
    },
    {
        "service": "AWS IQ",
        "resource": "proposal",
        "prefix": "iq",
        "arn": "arn:${Partition}:iq:${Region}::proposal/${ConversationId}/${ProposalId}"
    },
    {
        "service": "AWS IQ",
        "resource": "paymentRequest",
        "prefix": "iq",
        "arn": "arn:${Partition}:iq:${Region}::paymentRequest/${ConversationId}/${ProposalId}/${PaymentRequestId}"
    },
    {
        "service": "AWS IQ",
        "resource": "paymentSchedule",
        "prefix": "iq",
        "arn": "arn:${Partition}:iq:${Region}::paymentSchedule/${ConversationId}/${ProposalId}/${VersionId}"
    },
    {
        "service": "AWS IQ",
        "resource": "seller",
        "prefix": "iq",
        "arn": "arn:${Partition}:iq:${Region}::seller/${SellerAwsAccountId}"
    },
    {
        "service": "AWS IQ",
        "resource": "company",
        "prefix": "iq",
        "arn": "arn:${Partition}:iq:${Region}::company/${CompanyId}"
    },
    {
        "service": "AWS IQ",
        "resource": "request",
        "prefix": "iq",
        "arn": "arn:${Partition}:iq:${Region}::request/${RequestId}"
    },
    {
        "service": "AWS IQ",
        "resource": "listing",
        "prefix": "iq",
        "arn": "arn:${Partition}:iq:${Region}::listing/${ListingId}"
    },
    {
        "service": "AWS IQ",
        "resource": "attachment",
        "prefix": "iq",
        "arn": "arn:${Partition}:iq:${Region}::attachment/${AttachmentId}"
    },
    {
        "service": "AWS IQ",
        "resource": "permission",
        "prefix": "iq",
        "arn": "arn:${Partition}:iq-permission:${Region}::permission/${PermissionRequestId}"
    },
    {
        "service": "Amazon Kendra",
        "resource": "index",
        "prefix": "kendra",
        "arn": "arn:${Partition}:kendra:${Region}:${Account}:index/${IndexId}"
    },
    {
        "service": "Amazon Kendra",
        "resource": "data-source",
        "prefix": "kendra",
        "arn": "arn:${Partition}:kendra:${Region}:${Account}:index/${IndexId}/data-source/${DataSourceId}"
    },
    {
        "service": "Amazon Kendra",
        "resource": "faq",
        "prefix": "kendra",
        "arn": "arn:${Partition}:kendra:${Region}:${Account}:index/${IndexId}/faq/${FaqId}"
    },
    {
        "service": "Amazon Kendra",
        "resource": "experience",
        "prefix": "kendra",
        "arn": "arn:${Partition}:kendra:${Region}:${Account}:index/${IndexId}/experience/${ExperienceId}"
    },
    {
        "service": "Amazon Kendra",
        "resource": "thesaurus",
        "prefix": "kendra",
        "arn": "arn:${Partition}:kendra:${Region}:${Account}:index/${IndexId}/thesaurus/${ThesaurusId}"
    },
    {
        "service": "Amazon Kendra",
        "resource": "query-suggestions-block-list",
        "prefix": "kendra",
        "arn": "arn:${Partition}:kendra:${Region}:${Account}:index/${IndexId}/query-suggestions-block-list/${QuerySuggestionsBlockListId}"
    },
    {
        "service": "Amazon Kendra",
        "resource": "featured-results-set",
        "prefix": "kendra",
        "arn": "arn:${Partition}:kendra:${Region}:${Account}:index/${IndexId}/featured-results-set/${FeaturedResultsSetId}"
    },
    {
        "service": "Amazon Kendra",
        "resource": "access-control-configuration",
        "prefix": "kendra",
        "arn": "arn:${Partition}:kendra:${Region}:${Account}:index/${IndexId}/access-control-configuration/${AccessControlConfigurationId}"
    },
    {
        "service": "Amazon Kendra Intelligent Ranking",
        "resource": "rescore-execution-plan",
        "prefix": "kendra-ranking",
        "arn": "arn:${Partition}:kendra-ranking:${Region}:${Account}:rescore-execution-plan/${RescoreExecutionPlanId}"
    },
    {
        "service": "AWS Key Management Service",
        "resource": "alias",
        "prefix": "kms",
        "arn": "arn:${Partition}:kms:${Region}:${Account}:alias/${Alias}"
    },
    {
        "service": "AWS Key Management Service",
        "resource": "key",
        "prefix": "kms",
        "arn": "arn:${Partition}:kms:${Region}:${Account}:key/${KeyId}"
    },
    {
        "service": "Amazon Keyspaces (for Apache Cassandra)",
        "resource": "keyspace",
        "prefix": "cassandra",
        "arn": "arn:${Partition}:cassandra:${Region}:${Account}:/keyspace/${KeyspaceName}/"
    },
    {
        "service": "Amazon Keyspaces (for Apache Cassandra)",
        "resource": "table",
        "prefix": "cassandra",
        "arn": "arn:${Partition}:cassandra:${Region}:${Account}:/keyspace/${KeyspaceName}/table/${TableName}"
    },
    {
        "service": "Amazon Kinesis Analytics",
        "resource": "application",
        "prefix": "kinesisanalytics",
        "arn": "arn:${Partition}:kinesisanalytics:${Region}:${Account}:application/${ApplicationName}"
    },
    {
        "service": "Amazon Kinesis Data Streams",
        "resource": "stream",
        "prefix": "kinesis",
        "arn": "arn:${Partition}:kinesis:${Region}:${Account}:stream/${StreamName}"
    },
    {
        "service": "Amazon Kinesis Data Streams",
        "resource": "consumer",
        "prefix": "kinesis",
        "arn": "arn:${Partition}:kinesis:${Region}:${Account}:${StreamType}/${StreamName}/consumer/${ConsumerName}:${ConsumerCreationTimpstamp}"
    },
    {
        "service": "Amazon Kinesis Firehose",
        "resource": "deliverystream",
        "prefix": "firehose",
        "arn": "arn:${Partition}:firehose:${Region}:${Account}:deliverystream/${DeliveryStreamName}"
    },
    {
        "service": "Amazon Kinesis Video Streams",
        "resource": "stream",
        "prefix": "kinesisvideo",
        "arn": "arn:${Partition}:kinesisvideo:${Region}:${Account}:stream/${StreamName}/${CreationTime}"
    },
    {
        "service": "Amazon Kinesis Video Streams",
        "resource": "channel",
        "prefix": "kinesisvideo",
        "arn": "arn:${Partition}:kinesisvideo:${Region}:${Account}:channel/${ChannelName}/${CreationTime}"
    },
    {
        "service": "AWS Lambda",
        "resource": "code signing config",
        "prefix": "lambda",
        "arn": "arn:${Partition}:lambda:${Region}:${Account}:code-signing-config:${CodeSigningConfigId}"
    },
    {
        "service": "AWS Lambda",
        "resource": "eventSourceMapping",
        "prefix": "lambda",
        "arn": "arn:${Partition}:lambda:${Region}:${Account}:event-source-mapping:${UUID}"
    },
    {
        "service": "AWS Lambda",
        "resource": "function",
        "prefix": "lambda",
        "arn": "arn:${Partition}:lambda:${Region}:${Account}:function:${FunctionName}"
    },
    {
        "service": "AWS Lambda",
        "resource": "function alias",
        "prefix": "lambda",
        "arn": "arn:${Partition}:lambda:${Region}:${Account}:function:${FunctionName}:${Alias}"
    },
    {
        "service": "AWS Lambda",
        "resource": "function version",
        "prefix": "lambda",
        "arn": "arn:${Partition}:lambda:${Region}:${Account}:function:${FunctionName}:${Version}"
    },
    {
        "service": "AWS Lambda",
        "resource": "layer",
        "prefix": "lambda",
        "arn": "arn:${Partition}:lambda:${Region}:${Account}:layer:${LayerName}"
    },
    {
        "service": "AWS Lambda",
        "resource": "layerVersion",
        "prefix": "lambda",
        "arn": "arn:${Partition}:lambda:${Region}:${Account}:layer:${LayerName}:${LayerVersion}"
    },
    {
        "service": "AWS Launch Wizard",
        "resource": "aws:ResourceTag/${TagKey}",
        "prefix": "launchwizard",
        "arn": "arn:${Partition}:launchwizard:${Region}:${Account}:deployment/${DeploymentId}"
    },
    {
        "service": "Amazon Lex",
        "resource": "bot",
        "prefix": "lex",
        "arn": "arn:${Partition}:lex:${Region}:${Account}:bot:${BotName}"
    },
    {
        "service": "Amazon Lex",
        "resource": "bot version",
        "prefix": "lex",
        "arn": "arn:${Partition}:lex:${Region}:${Account}:bot:${BotName}:${BotVersion}"
    },
    {
        "service": "Amazon Lex",
        "resource": "bot alias",
        "prefix": "lex",
        "arn": "arn:${Partition}:lex:${Region}:${Account}:bot:${BotName}:${BotAlias}"
    },
    {
        "service": "Amazon Lex",
        "resource": "channel",
        "prefix": "lex",
        "arn": "arn:${Partition}:lex:${Region}:${Account}:bot-channel:${BotName}:${BotAlias}:${ChannelName}"
    },
    {
        "service": "Amazon Lex",
        "resource": "intent version",
        "prefix": "lex",
        "arn": "arn:${Partition}:lex:${Region}:${Account}:intent:${IntentName}:${IntentVersion}"
    },
    {
        "service": "Amazon Lex",
        "resource": "slottype version",
        "prefix": "lex",
        "arn": "arn:${Partition}:lex:${Region}:${Account}:slottype:${SlotName}:${SlotVersion}"
    },
    {
        "service": "Amazon Lex V2",
        "resource": "bot",
        "prefix": "lex",
        "arn": "arn:${Partition}:lex:${Region}:${Account}:bot/${BotId}"
    },
    {
        "service": "Amazon Lex V2",
        "resource": "bot alias",
        "prefix": "lex",
        "arn": "arn:${Partition}:lex:${Region}:${Account}:bot-alias/${BotId}/${BotAliasId}"
    },
    {
        "service": "Amazon Lex V2",
        "resource": "test set",
        "prefix": "lex",
        "arn": "arn:${Partition}:lex:${Region}:${Account}:test-set/${TestSetId}"
    },
    {
        "service": "AWS License Manager",
        "resource": "license-configuration",
        "prefix": "license-manager",
        "arn": "arn:${Partition}:license-manager:${Region}:${Account}:license-configuration:${LicenseConfigurationId}"
    },
    {
        "service": "AWS License Manager",
        "resource": "license",
        "prefix": "license-manager",
        "arn": "arn:${Partition}:license-manager::${Account}:license:${LicenseId}"
    },
    {
        "service": "AWS License Manager",
        "resource": "grant",
        "prefix": "license-manager",
        "arn": "arn:${Partition}:license-manager::${Account}:grant:${GrantId}"
    },
    {
        "service": "AWS License Manager",
        "resource": "report-generator",
        "prefix": "license-manager",
        "arn": "arn:${Partition}:license-manager:${Region}:${Account}:report-generator:${ReportGeneratorId}"
    },
    {
        "service": "AWS License Manager Linux Subscriptions Manager",
        "resource": "subscription-provider",
        "prefix": "license-manager-linux-subscriptions",
        "arn": "arn:${Partition}:license-manager-linux-subscriptions:${Region}:${Account}:subscription-provider/${SubscriptionProviderId}"
    },
    {
        "service": "AWS License Manager User Subscriptions",
        "resource": "identity-provider",
        "prefix": "license-manager-user-subscriptions",
        "arn": "arn:${Partition}:license-manager-user-subscriptions:${Region}:${Account}:identity-provider/${IdentityProviderId}"
    },
    {
        "service": "AWS License Manager User Subscriptions",
        "resource": "product-subscription",
        "prefix": "license-manager-user-subscriptions",
        "arn": "arn:${Partition}:license-manager-user-subscriptions:${Region}:${Account}:product-subscription/${ProductSubscriptionId}"
    },
    {
        "service": "AWS License Manager User Subscriptions",
        "resource": "instance-user",
        "prefix": "license-manager-user-subscriptions",
        "arn": "arn:${Partition}:license-manager-user-subscriptions:${Region}:${Account}:instance-user/${InstanceUserId}"
    },
    {
        "service": "AWS License Manager User Subscriptions",
        "resource": "license-server-endpoint",
        "prefix": "license-manager-user-subscriptions",
        "arn": "arn:${Partition}:license-manager-user-subscriptions:${Region}:${Account}:license-server-endpoint/${LicenseServerEndpointId}"
    },
    {
        "service": "Amazon Lightsail",
        "resource": "Domain",
        "prefix": "lightsail",
        "arn": "arn:${Partition}:lightsail:${Region}:${Account}:Domain/${Id}"
    },
    {
        "service": "Amazon Lightsail",
        "resource": "Instance",
        "prefix": "lightsail",
        "arn": "arn:${Partition}:lightsail:${Region}:${Account}:Instance/${Id}"
    },
    {
        "service": "Amazon Lightsail",
        "resource": "InstanceSnapshot",
        "prefix": "lightsail",
        "arn": "arn:${Partition}:lightsail:${Region}:${Account}:InstanceSnapshot/${Id}"
    },
    {
        "service": "Amazon Lightsail",
        "resource": "KeyPair",
        "prefix": "lightsail",
        "arn": "arn:${Partition}:lightsail:${Region}:${Account}:KeyPair/${Id}"
    },
    {
        "service": "Amazon Lightsail",
        "resource": "StaticIp",
        "prefix": "lightsail",
        "arn": "arn:${Partition}:lightsail:${Region}:${Account}:StaticIp/${Id}"
    },
    {
        "service": "Amazon Lightsail",
        "resource": "Disk",
        "prefix": "lightsail",
        "arn": "arn:${Partition}:lightsail:${Region}:${Account}:Disk/${Id}"
    },
    {
        "service": "Amazon Lightsail",
        "resource": "DiskSnapshot",
        "prefix": "lightsail",
        "arn": "arn:${Partition}:lightsail:${Region}:${Account}:DiskSnapshot/${Id}"
    },
    {
        "service": "Amazon Lightsail",
        "resource": "LoadBalancer",
        "prefix": "lightsail",
        "arn": "arn:${Partition}:lightsail:${Region}:${Account}:LoadBalancer/${Id}"
    },
    {
        "service": "Amazon Lightsail",
        "resource": "LoadBalancerTlsCertificate",
        "prefix": "lightsail",
        "arn": "arn:${Partition}:lightsail:${Region}:${Account}:LoadBalancerTlsCertificate/${Id}"
    },
    {
        "service": "Amazon Lightsail",
        "resource": "ExportSnapshotRecord",
        "prefix": "lightsail",
        "arn": "arn:${Partition}:lightsail:${Region}:${Account}:ExportSnapshotRecord/${Id}"
    },
    {
        "service": "Amazon Lightsail",
        "resource": "CloudFormationStackRecord",
        "prefix": "lightsail",
        "arn": "arn:${Partition}:lightsail:${Region}:${Account}:CloudFormationStackRecord/${Id}"
    },
    {
        "service": "Amazon Lightsail",
        "resource": "RelationalDatabase",
        "prefix": "lightsail",
        "arn": "arn:${Partition}:lightsail:${Region}:${Account}:RelationalDatabase/${Id}"
    },
    {
        "service": "Amazon Lightsail",
        "resource": "RelationalDatabaseSnapshot",
        "prefix": "lightsail",
        "arn": "arn:${Partition}:lightsail:${Region}:${Account}:RelationalDatabaseSnapshot/${Id}"
    },
    {
        "service": "Amazon Lightsail",
        "resource": "Alarm",
        "prefix": "lightsail",
        "arn": "arn:${Partition}:lightsail:${Region}:${Account}:Alarm/${Id}"
    },
    {
        "service": "Amazon Lightsail",
        "resource": "Certificate",
        "prefix": "lightsail",
        "arn": "arn:${Partition}:lightsail:${Region}:${Account}:Certificate/${Id}"
    },
    {
        "service": "Amazon Lightsail",
        "resource": "ContactMethod",
        "prefix": "lightsail",
        "arn": "arn:${Partition}:lightsail:${Region}:${Account}:ContactMethod/${Id}"
    },
    {
        "service": "Amazon Lightsail",
        "resource": "ContainerService",
        "prefix": "lightsail",
        "arn": "arn:${Partition}:lightsail:${Region}:${Account}:ContainerService/${Id}"
    },
    {
        "service": "Amazon Lightsail",
        "resource": "Distribution",
        "prefix": "lightsail",
        "arn": "arn:${Partition}:lightsail:${Region}:${Account}:Distribution/${Id}"
    },
    {
        "service": "Amazon Lightsail",
        "resource": "Bucket",
        "prefix": "lightsail",
        "arn": "arn:${Partition}:lightsail:${Region}:${Account}:Bucket/${Id}"
    },
    {
        "service": "Amazon Location",
        "resource": "api-key",
        "prefix": "geo",
        "arn": "arn:${Partition}:geo:${Region}:${Account}:api-key/${KeyName}"
    },
    {
        "service": "Amazon Location",
        "resource": "geofence-collection",
        "prefix": "geo",
        "arn": "arn:${Partition}:geo:${Region}:${Account}:geofence-collection/${GeofenceCollectionName}"
    },
    {
        "service": "Amazon Location",
        "resource": "map",
        "prefix": "geo",
        "arn": "arn:${Partition}:geo:${Region}:${Account}:map/${MapName}"
    },
    {
        "service": "Amazon Location",
        "resource": "place-index",
        "prefix": "geo",
        "arn": "arn:${Partition}:geo:${Region}:${Account}:place-index/${IndexName}"
    },
    {
        "service": "Amazon Location",
        "resource": "route-calculator",
        "prefix": "geo",
        "arn": "arn:${Partition}:geo:${Region}:${Account}:route-calculator/${CalculatorName}"
    },
    {
        "service": "Amazon Location",
        "resource": "tracker",
        "prefix": "geo",
        "arn": "arn:${Partition}:geo:${Region}:${Account}:tracker/${TrackerName}"
    },
    {
        "service": "Amazon Location Service Maps",
        "resource": "provider",
        "prefix": "geo-maps",
        "arn": "arn:${Partition}:geo-maps:${Region}::provider/default"
    },
    {
        "service": "Amazon Location Service Places",
        "resource": "provider",
        "prefix": "geo-places",
        "arn": "arn:${Partition}:geo-places:${Region}::provider/default"
    },
    {
        "service": "Amazon Location Service Routes",
        "resource": "provider",
        "prefix": "geo-routes",
        "arn": "arn:${Partition}:geo-routes:${Region}::provider/default"
    },
    {
        "service": "Amazon Lookout for Equipment",
        "resource": "dataset",
        "prefix": "lookoutequipment",
        "arn": "arn:${Partition}:lookoutequipment:${Region}:${Account}:dataset/${DatasetName}/${DatasetId}"
    },
    {
        "service": "Amazon Lookout for Equipment",
        "resource": "model",
        "prefix": "lookoutequipment",
        "arn": "arn:${Partition}:lookoutequipment:${Region}:${Account}:model/${ModelName}/${ModelId}"
    },
    {
        "service": "Amazon Lookout for Equipment",
        "resource": "model-version",
        "prefix": "lookoutequipment",
        "arn": "arn:${Partition}:lookoutequipment:${Region}:${Account}:model/${ModelName}/${ModelId}/model-version/${ModelVersionNumber}"
    },
    {
        "service": "Amazon Lookout for Equipment",
        "resource": "inference-scheduler",
        "prefix": "lookoutequipment",
        "arn": "arn:${Partition}:lookoutequipment:${Region}:${Account}:inference-scheduler/${InferenceSchedulerName}/${InferenceSchedulerId}"
    },
    {
        "service": "Amazon Lookout for Equipment",
        "resource": "label-group",
        "prefix": "lookoutequipment",
        "arn": "arn:${Partition}:lookoutequipment:${Region}:${Account}:label-group/${LabelGroupName}/${LabelGroupId}"
    },
    {
        "service": "Amazon Lookout for Metrics",
        "resource": "AnomalyDetector",
        "prefix": "lookoutmetrics",
        "arn": "arn:${Partition}:lookoutmetrics:${Region}:${Account}:AnomalyDetector:${AnomalyDetectorName}"
    },
    {
        "service": "Amazon Lookout for Metrics",
        "resource": "MetricSet",
        "prefix": "lookoutmetrics",
        "arn": "arn:${Partition}:lookoutmetrics:${Region}:${Account}:MetricSet/${AnomalyDetectorName}/${MetricSetName}"
    },
    {
        "service": "Amazon Lookout for Metrics",
        "resource": "Alert",
        "prefix": "lookoutmetrics",
        "arn": "arn:${Partition}:lookoutmetrics:${Region}:${Account}:Alert:${AlertName}"
    },
    {
        "service": "Amazon Lookout for Vision",
        "resource": "model",
        "prefix": "lookoutvision",
        "arn": "arn:${Partition}:lookoutvision:${Region}:${Account}:model/${ProjectName}/${ModelVersion}"
    },
    {
        "service": "Amazon Lookout for Vision",
        "resource": "project",
        "prefix": "lookoutvision",
        "arn": "arn:${Partition}:lookoutvision:${Region}:${Account}:project/${ProjectName}"
    },
    {
        "service": "Amazon Machine Learning",
        "resource": "batchprediction",
        "prefix": "machinelearning",
        "arn": "arn:${Partition}:machinelearning:${Region}:${Account}:batchprediction/${BatchPredictionId}"
    },
    {
        "service": "Amazon Machine Learning",
        "resource": "datasource",
        "prefix": "machinelearning",
        "arn": "arn:${Partition}:machinelearning:${Region}:${Account}:datasource/${DatasourceId}"
    },
    {
        "service": "Amazon Machine Learning",
        "resource": "evaluation",
        "prefix": "machinelearning",
        "arn": "arn:${Partition}:machinelearning:${Region}:${Account}:evaluation/${EvaluationId}"
    },
    {
        "service": "Amazon Machine Learning",
        "resource": "mlmodel",
        "prefix": "machinelearning",
        "arn": "arn:${Partition}:machinelearning:${Region}:${Account}:mlmodel/${MlModelId}"
    },
    {
        "service": "Amazon Macie",
        "resource": "AllowList",
        "prefix": "macie2",
        "arn": "arn:${Partition}:macie2:${Region}:${Account}:allow-list/${ResourceId}"
    },
    {
        "service": "Amazon Macie",
        "resource": "ClassificationJob",
        "prefix": "macie2",
        "arn": "arn:${Partition}:macie2:${Region}:${Account}:classification-job/${ResourceId}"
    },
    {
        "service": "Amazon Macie",
        "resource": "CustomDataIdentifier",
        "prefix": "macie2",
        "arn": "arn:${Partition}:macie2:${Region}:${Account}:custom-data-identifier/${ResourceId}"
    },
    {
        "service": "Amazon Macie",
        "resource": "FindingsFilter",
        "prefix": "macie2",
        "arn": "arn:${Partition}:macie2:${Region}:${Account}:findings-filter/${ResourceId}"
    },
    {
        "service": "Amazon Macie",
        "resource": "Member",
        "prefix": "macie2",
        "arn": "arn:${Partition}:macie2:${Region}:${Account}:member/${ResourceId}"
    },
    {
        "service": "AWS Mainframe Modernization Application Testing",
        "resource": "TestCase",
        "prefix": "apptest",
        "arn": "arn:${Partition}:apptest:${Region}:${Account}:testcase/${TestCaseId}"
    },
    {
        "service": "AWS Mainframe Modernization Application Testing",
        "resource": "TestConfiguration",
        "prefix": "apptest",
        "arn": "arn:${Partition}:apptest:${Region}:${Account}:testconfiguration/${TestConfigurationId}"
    },
    {
        "service": "AWS Mainframe Modernization Application Testing",
        "resource": "TestRun",
        "prefix": "apptest",
        "arn": "arn:${Partition}:apptest:${Region}:${Account}:testrun/${TestRunId}"
    },
    {
        "service": "AWS Mainframe Modernization Application Testing",
        "resource": "TestSuite",
        "prefix": "apptest",
        "arn": "arn:${Partition}:apptest:${Region}:${Account}:testsuite/${TestSuiteId}"
    },
    {
        "service": "AWS Mainframe Modernization Service",
        "resource": "Application",
        "prefix": "m2",
        "arn": "arn:${Partition}:m2:${Region}:${Account}:app/${ApplicationId}"
    },
    {
        "service": "AWS Mainframe Modernization Service",
        "resource": "Environment",
        "prefix": "m2",
        "arn": "arn:${Partition}:m2:${Region}:${Account}:env/${EnvironmentId}"
    },
    {
        "service": "Amazon Managed Blockchain",
        "resource": "network",
        "prefix": "managedblockchain",
        "arn": "arn:${Partition}:managedblockchain:${Region}::networks/${NetworkId}"
    },
    {
        "service": "Amazon Managed Blockchain",
        "resource": "member",
        "prefix": "managedblockchain",
        "arn": "arn:${Partition}:managedblockchain:${Region}:${Account}:members/${MemberId}"
    },
    {
        "service": "Amazon Managed Blockchain",
        "resource": "node",
        "prefix": "managedblockchain",
        "arn": "arn:${Partition}:managedblockchain:${Region}:${Account}:nodes/${NodeId}"
    },
    {
        "service": "Amazon Managed Blockchain",
        "resource": "proposal",
        "prefix": "managedblockchain",
        "arn": "arn:${Partition}:managedblockchain:${Region}::proposals/${ProposalId}"
    },
    {
        "service": "Amazon Managed Blockchain",
        "resource": "invitation",
        "prefix": "managedblockchain",
        "arn": "arn:${Partition}:managedblockchain:${Region}:${Account}:invitations/${InvitationId}"
    },
    {
        "service": "Amazon Managed Blockchain",
        "resource": "accessor",
        "prefix": "managedblockchain",
        "arn": "arn:${Partition}:managedblockchain:${Region}:${Account}:accessors/${AccessorId}"
    },
    {
        "service": "Amazon Managed Grafana",
        "resource": "workspace",
        "prefix": "grafana",
        "arn": "arn:${Partition}:grafana:${Region}:${Account}:/workspaces/${ResourceId}"
    },
    {
        "service": "Amazon Managed Service for Prometheus",
        "resource": "workspace",
        "prefix": "aps",
        "arn": "arn:${Partition}:aps:${Region}:${Account}:workspace/${WorkspaceId}"
    },
    {
        "service": "Amazon Managed Service for Prometheus",
        "resource": "rulegroupsnamespace",
        "prefix": "aps",
        "arn": "arn:${Partition}:aps:${Region}:${Account}:rulegroupsnamespace/${WorkspaceId}/${Namespace}"
    },
    {
        "service": "Amazon Managed Service for Prometheus",
        "resource": "scraper",
        "prefix": "aps",
        "arn": "arn:${Partition}:aps:${Region}:${Account}:scraper/${ScraperId}"
    },
    {
        "service": "Amazon Managed Streaming for Apache Kafka",
        "resource": "cluster",
        "prefix": "kafka",
        "arn": "arn:${Partition}:kafka:${Region}:${Account}:cluster/${ClusterName}/${Uuid}"
    },
    {
        "service": "Amazon Managed Streaming for Apache Kafka",
        "resource": "configuration",
        "prefix": "kafka",
        "arn": "arn:${Partition}:kafka:${Region}:${Account}:configuration/${ConfigurationName}/${Uuid}"
    },
    {
        "service": "Amazon Managed Streaming for Apache Kafka",
        "resource": "vpc-connection",
        "prefix": "kafka",
        "arn": "arn:${Partition}:kafka:${Region}:${VpcOwnerAccount}:vpc-connection/${ClusterOwnerAccount}/${ClusterName}/${Uuid}"
    },
    {
        "service": "Amazon Managed Streaming for Apache Kafka",
        "resource": "replicator",
        "prefix": "kafka",
        "arn": "arn:${Partition}:kafka:${Region}:${Account}:replicator/${ReplicatorName}/${Uuid}"
    },
    {
        "service": "Amazon Managed Streaming for Apache Kafka",
        "resource": "topic",
        "prefix": "kafka",
        "arn": "arn:${Partition}:kafka:${Region}:${Account}:topic/${ClusterName}/${ClusterUuid}/${TopicName}"
    },
    {
        "service": "Amazon Managed Streaming for Apache Kafka",
        "resource": "group",
        "prefix": "kafka",
        "arn": "arn:${Partition}:kafka:${Region}:${Account}:group/${ClusterName}/${ClusterUuid}/${GroupName}"
    },
    {
        "service": "Amazon Managed Streaming for Apache Kafka",
        "resource": "transactional-id",
        "prefix": "kafka",
        "arn": "arn:${Partition}:kafka:${Region}:${Account}:transactional-id/${ClusterName}/${ClusterUuid}/${TransactionalId}"
    },
    {
        "service": "Amazon Managed Streaming for Kafka Connect",
        "resource": "connector",
        "prefix": "kafkaconnect",
        "arn": "arn:${Partition}:kafkaconnect:${Region}:${Account}:connector/${ConnectorName}/${UUID}"
    },
    {
        "service": "Amazon Managed Streaming for Kafka Connect",
        "resource": "custom plugin",
        "prefix": "kafkaconnect",
        "arn": "arn:${Partition}:kafkaconnect:${Region}:${Account}:custom-plugin/${CustomPluginName}/${UUID}"
    },
    {
        "service": "Amazon Managed Streaming for Kafka Connect",
        "resource": "worker configuration",
        "prefix": "kafkaconnect",
        "arn": "arn:${Partition}:kafkaconnect:${Region}:${Account}:worker-configuration/${WorkerConfigurationName}/${UUID}"
    },
    {
        "service": "Amazon Managed Streaming for Kafka Connect",
        "resource": "connector operation",
        "prefix": "kafkaconnect",
        "arn": "arn:${Partition}:kafkaconnect:${Region}:${Account}:connector-operation/${ConnectorName}/${ConnectorUUID}/${UUID}"
    },
    {
        "service": "Amazon Managed Workflows for Apache Airflow",
        "resource": "environment",
        "prefix": "airflow",
        "arn": "arn:${Partition}:airflow:${Region}:${Account}:environment/${EnvironmentName}"
    },
    {
        "service": "Amazon Managed Workflows for Apache Airflow",
        "resource": "rbac-role",
        "prefix": "airflow",
        "arn": "arn:${Partition}:airflow:${Region}:${Account}:role/${EnvironmentName}/${RoleName}"
    },
    {
        "service": "AWS Marketplace Catalog",
        "resource": "Entity",
        "prefix": "aws-marketplace",
        "arn": "arn:${Partition}:aws-marketplace:${Region}:${Account}:${Catalog}/${EntityType}/${ResourceId}"
    },
    {
        "service": "AWS Marketplace Catalog",
        "resource": "ChangeSet",
        "prefix": "aws-marketplace",
        "arn": "arn:${Partition}:aws-marketplace:${Region}:${Account}:${Catalog}/ChangeSet/${ResourceId}"
    },
    {
        "service": "AWS Marketplace Deployment Service",
        "resource": "DeploymentParameter",
        "prefix": "aws-marketplace",
        "arn": "arn:${Partition}:aws-marketplace:${Region}:${Account}:DeploymentParameter:catalogs/${CatalogName}/products/${ProductId}/${ResourceId}"
    },
    {
        "service": "AWS Marketplace Reporting",
        "resource": "Dashboard",
        "prefix": "aws-marketplace",
        "arn": "arn:${Partition}:aws-marketplace::${Account}:${Catalog}/ReportingData/${FactTable}/Dashboard/${DashboardName}"
    },
    {
        "service": "AWS Marketplace Vendor Insights",
        "resource": "DataSource",
        "prefix": "vendor-insights",
        "arn": "arn:${Partition}:vendor-insights:::data-source:${ResourceId}"
    },
    {
        "service": "AWS Marketplace Vendor Insights",
        "resource": "SecurityProfile",
        "prefix": "vendor-insights",
        "arn": "arn:${Partition}:vendor-insights:::security-profile:${ResourceId}"
    },
    {
        "service": "Amazon MemoryDB",
        "resource": "multiregionparametergroup",
        "prefix": "memorydb",
        "arn": "arn:${Partition}:memorydb::${Account}:multiregionparametergroup/${MultiRegionParameterGroupName}"
    },
    {
        "service": "Amazon MemoryDB",
        "resource": "parametergroup",
        "prefix": "memorydb",
        "arn": "arn:${Partition}:memorydb:${Region}:${Account}:parametergroup/${ParameterGroupName}"
    },
    {
        "service": "Amazon MemoryDB",
        "resource": "subnetgroup",
        "prefix": "memorydb",
        "arn": "arn:${Partition}:memorydb:${Region}:${Account}:subnetgroup/${SubnetGroupName}"
    },
    {
        "service": "Amazon MemoryDB",
        "resource": "multiregioncluster",
        "prefix": "memorydb",
        "arn": "arn:${Partition}:memorydb::${Account}:multiregioncluster/${ClusterName}"
    },
    {
        "service": "Amazon MemoryDB",
        "resource": "cluster",
        "prefix": "memorydb",
        "arn": "arn:${Partition}:memorydb:${Region}:${Account}:cluster/${ClusterName}"
    },
    {
        "service": "Amazon MemoryDB",
        "resource": "snapshot",
        "prefix": "memorydb",
        "arn": "arn:${Partition}:memorydb:${Region}:${Account}:snapshot/${SnapshotName}"
    },
    {
        "service": "Amazon MemoryDB",
        "resource": "user",
        "prefix": "memorydb",
        "arn": "arn:${Partition}:memorydb:${Region}:${Account}:user/${UserName}"
    },
    {
        "service": "Amazon MemoryDB",
        "resource": "acl",
        "prefix": "memorydb",
        "arn": "arn:${Partition}:memorydb:${Region}:${Account}:acl/${AclName}"
    },
    {
        "service": "Amazon MemoryDB",
        "resource": "reservednode",
        "prefix": "memorydb",
        "arn": "arn:${Partition}:memorydb:${Region}:${Account}:reservednode/${ReservationID}"
    },
    {
        "service": "AWS Migration Acceleration Program Credits",
        "resource": "agreement",
        "prefix": "mapcredits",
        "arn": "arn:${Partition}:mapcredits:::${Agreement}/${AgreementId}"
    },
    {
        "service": "AWS Migration Hub",
        "resource": "progressUpdateStream",
        "prefix": "mgh",
        "arn": "arn:${Partition}:mgh:${Region}:${Account}:progressUpdateStream/${Stream}"
    },
    {
        "service": "AWS Migration Hub",
        "resource": "migrationTask",
        "prefix": "mgh",
        "arn": "arn:${Partition}:mgh:${Region}:${Account}:progressUpdateStream/${Stream}/migrationTask/${Task}"
    },
    {
        "service": "AWS Migration Hub",
        "resource": "AutomationRunResource",
        "prefix": "mgh",
        "arn": "arn:${Partition}:mgh:${Region}:${Account}:automation-run/${RunID}"
    },
    {
        "service": "AWS Migration Hub",
        "resource": "AutomationUnitResource",
        "prefix": "mgh",
        "arn": "arn:${Partition}:mgh:${Region}:${Account}:automation-unit/${AutomationUnitId}"
    },
    {
        "service": "AWS Migration Hub",
        "resource": "ConnectionResource",
        "prefix": "mgh",
        "arn": "arn:${Partition}:mgh:${Region}:${Account}:${ConnectionArn}"
    },
    {
        "service": "AWS Migration Hub Orchestrator",
        "resource": "workflow",
        "prefix": "migrationhub-orchestrator",
        "arn": "arn:${Partition}:migrationhub-orchestrator:${Region}:${Account}:workflow/${ResourceId}"
    },
    {
        "service": "AWS Migration Hub Orchestrator",
        "resource": "template",
        "prefix": "migrationhub-orchestrator",
        "arn": "arn:${Partition}:migrationhub-orchestrator:${Region}:${Account}:template/${ResourceId}"
    },
    {
        "service": "AWS Migration Hub Refactor Spaces",
        "resource": "environment",
        "prefix": "refactor-spaces",
        "arn": "arn:${Partition}:refactor-spaces:${Region}:${Account}:environment/${EnvironmentId}"
    },
    {
        "service": "AWS Migration Hub Refactor Spaces",
        "resource": "application",
        "prefix": "refactor-spaces",
        "arn": "arn:${Partition}:refactor-spaces:${Region}:${Account}:environment/${EnvironmentId}/application/${ApplicationId}"
    },
    {
        "service": "AWS Migration Hub Refactor Spaces",
        "resource": "service",
        "prefix": "refactor-spaces",
        "arn": "arn:${Partition}:refactor-spaces:${Region}:${Account}:environment/${EnvironmentId}/application/${ApplicationId}/service/${ServiceId}"
    },
    {
        "service": "AWS Migration Hub Refactor Spaces",
        "resource": "route",
        "prefix": "refactor-spaces",
        "arn": "arn:${Partition}:refactor-spaces:${Region}:${Account}:environment/${EnvironmentId}/application/${ApplicationId}/route/${RouteId}"
    },
    {
        "service": "Amazon Monitron",
        "resource": "project",
        "prefix": "monitron",
        "arn": "arn:${Partition}:monitron:${Region}:${Account}:project/${ResourceId}"
    },
    {
        "service": "Amazon MQ",
        "resource": "brokers",
        "prefix": "mq",
        "arn": "arn:${Partition}:mq:${Region}:${Account}:broker:${BrokerName}:${BrokerId}"
    },
    {
        "service": "Amazon MQ",
        "resource": "configurations",
        "prefix": "mq",
        "arn": "arn:${Partition}:mq:${Region}:${Account}:configuration:${ConfigurationId}"
    },
    {
        "service": "Amazon Neptune",
        "resource": "database",
        "prefix": "neptune-db",
        "arn": "arn:${Partition}:neptune-db:${Region}:${Account}:${ClusterResourceId}/*"
    },
    {
        "service": "Amazon Neptune Analytics",
        "resource": "graph",
        "prefix": "neptune-graph",
        "arn": "arn:${Partition}:neptune-graph:${Region}:${Account}:graph/${ResourceId}"
    },
    {
        "service": "Amazon Neptune Analytics",
        "resource": "graph-snapshot",
        "prefix": "neptune-graph",
        "arn": "arn:${Partition}:neptune-graph:${Region}:${Account}:graph-snapshot/${ResourceId}"
    },
    {
        "service": "Amazon Neptune Analytics",
        "resource": "import-task",
        "prefix": "neptune-graph",
        "arn": "arn:${Partition}:neptune-graph:${Region}:${Account}:import-task/${ResourceId}"
    },
    {
        "service": "Amazon Neptune Analytics",
        "resource": "export-task",
        "prefix": "neptune-graph",
        "arn": "arn:${Partition}:neptune-graph:${Region}:${Account}:export-task/${ResourceId}"
    },
    {
        "service": "AWS Network Firewall",
        "resource": "Firewall",
        "prefix": "network-firewall",
        "arn": "arn:${Partition}:network-firewall:${Region}:${Account}:firewall/${Name}"
    },
    {
        "service": "AWS Network Firewall",
        "resource": "FirewallPolicy",
        "prefix": "network-firewall",
        "arn": "arn:${Partition}:network-firewall:${Region}:${Account}:firewall-policy/${Name}"
    },
    {
        "service": "AWS Network Firewall",
        "resource": "StatefulRuleGroup",
        "prefix": "network-firewall",
        "arn": "arn:${Partition}:network-firewall:${Region}:${Account}:stateful-rulegroup/${Name}"
    },
    {
        "service": "AWS Network Firewall",
        "resource": "StatelessRuleGroup",
        "prefix": "network-firewall",
        "arn": "arn:${Partition}:network-firewall:${Region}:${Account}:stateless-rulegroup/${Name}"
    },
    {
        "service": "AWS Network Firewall",
        "resource": "TLSInspectionConfiguration",
        "prefix": "network-firewall",
        "arn": "arn:${Partition}:network-firewall:${Region}:${Account}:tls-configuration/${Name}"
    },
    {
        "service": "Network Flow Monitor",
        "resource": "monitor",
        "prefix": "networkflowmonitor",
        "arn": "arn:${Partition}:networkflowmonitor:${Region}:${Account}:monitor/${MonitorName}"
    },
    {
        "service": "Network Flow Monitor",
        "resource": "scope",
        "prefix": "networkflowmonitor",
        "arn": "arn:${Partition}:networkflowmonitor:${Region}:${Account}:scope/${ScopeId}"
    },
    {
        "service": "AWS Network Manager",
        "resource": "global-network",
        "prefix": "networkmanager",
        "arn": "arn:${Partition}:networkmanager::${Account}:global-network/${ResourceId}"
    },
    {
        "service": "AWS Network Manager",
        "resource": "site",
        "prefix": "networkmanager",
        "arn": "arn:${Partition}:networkmanager::${Account}:site/${GlobalNetworkId}/${ResourceId}"
    },
    {
        "service": "AWS Network Manager",
        "resource": "link",
        "prefix": "networkmanager",
        "arn": "arn:${Partition}:networkmanager::${Account}:link/${GlobalNetworkId}/${ResourceId}"
    },
    {
        "service": "AWS Network Manager",
        "resource": "device",
        "prefix": "networkmanager",
        "arn": "arn:${Partition}:networkmanager::${Account}:device/${GlobalNetworkId}/${ResourceId}"
    },
    {
        "service": "AWS Network Manager",
        "resource": "connection",
        "prefix": "networkmanager",
        "arn": "arn:${Partition}:networkmanager::${Account}:connection/${GlobalNetworkId}/${ResourceId}"
    },
    {
        "service": "AWS Network Manager",
        "resource": "core-network",
        "prefix": "networkmanager",
        "arn": "arn:${Partition}:networkmanager::${Account}:core-network/${ResourceId}"
    },
    {
        "service": "AWS Network Manager",
        "resource": "attachment",
        "prefix": "networkmanager",
        "arn": "arn:${Partition}:networkmanager::${Account}:attachment/${ResourceId}"
    },
    {
        "service": "AWS Network Manager",
        "resource": "connect-peer",
        "prefix": "networkmanager",
        "arn": "arn:${Partition}:networkmanager::${Account}:connect-peer/${ResourceId}"
    },
    {
        "service": "AWS Network Manager",
        "resource": "peering",
        "prefix": "networkmanager",
        "arn": "arn:${Partition}:networkmanager::${Account}:peering/${ResourceId}"
    },
    {
        "service": "Amazon Nimble Studio",
        "resource": "studio",
        "prefix": "nimble",
        "arn": "arn:${Partition}:nimble:${Region}:${Account}:studio/${StudioId}"
    },
    {
        "service": "Amazon Nimble Studio",
        "resource": "streaming-image",
        "prefix": "nimble",
        "arn": "arn:${Partition}:nimble:${Region}:${Account}:streaming-image/${StreamingImageId}"
    },
    {
        "service": "Amazon Nimble Studio",
        "resource": "studio-component",
        "prefix": "nimble",
        "arn": "arn:${Partition}:nimble:${Region}:${Account}:studio-component/${StudioComponentId}"
    },
    {
        "service": "Amazon Nimble Studio",
        "resource": "launch-profile",
        "prefix": "nimble",
        "arn": "arn:${Partition}:nimble:${Region}:${Account}:launch-profile/${LaunchProfileId}"
    },
    {
        "service": "Amazon Nimble Studio",
        "resource": "streaming-session",
        "prefix": "nimble",
        "arn": "arn:${Partition}:nimble:${Region}:${Account}:streaming-session/${StreamingSessionId}"
    },
    {
        "service": "Amazon Nimble Studio",
        "resource": "streaming-session-backup",
        "prefix": "nimble",
        "arn": "arn:${Partition}:nimble:${Region}:${Account}:streaming-session-backup/${StreamingSessionBackupId}"
    },
    {
        "service": "Amazon Nimble Studio",
        "resource": "eula",
        "prefix": "nimble",
        "arn": "arn:${Partition}:nimble:${Region}:${Account}:eula/${EulaId}"
    },
    {
        "service": "Amazon Nimble Studio",
        "resource": "eula-acceptance",
        "prefix": "nimble",
        "arn": "arn:${Partition}:nimble:${Region}:${Account}:eula-acceptance/${EulaAcceptanceId}"
    },
    {
        "service": "Amazon One Enterprise",
        "resource": "device-instance",
        "prefix": "one",
        "arn": "arn:${Partition}:one:${Region}:${Account}:device-instance/${DeviceInstanceId}"
    },
    {
        "service": "Amazon One Enterprise",
        "resource": "configuration",
        "prefix": "one",
        "arn": "arn:${Partition}:one:${Region}:${Account}:device-instance/${DeviceInstanceId}/configuration/${Version}"
    },
    {
        "service": "Amazon One Enterprise",
        "resource": "device-configuration-template",
        "prefix": "one",
        "arn": "arn:${Partition}:one:${Region}:${Account}:device-configuration-template/${TemplateId}"
    },
    {
        "service": "Amazon One Enterprise",
        "resource": "site",
        "prefix": "one",
        "arn": "arn:${Partition}:one:${Region}:${Account}:site/${SiteId}"
    },
    {
        "service": "Amazon One Enterprise",
        "resource": "user",
        "prefix": "one",
        "arn": "arn:${Partition}:one:${Region}:${Account}:user/${UserId}"
    },
    {
        "service": "Amazon OpenSearch",
        "resource": "application",
        "prefix": "opensearch",
        "arn": "arn:${Partition}:opensearch:${Region}:${Account}:application/${AppId}"
    },
    {
        "service": "Amazon OpenSearch",
        "resource": "datasource",
        "prefix": "opensearch",
        "arn": "arn:${Partition}:opensearch:${Region}:${Account}:datasource/${DataSourceName}"
    },
    {
        "service": "Amazon OpenSearch Ingestion",
        "resource": "pipeline",
        "prefix": "osis",
        "arn": "arn:${Partition}:osis:${Region}:${Account}:pipeline/${PipelineName}"
    },
    {
        "service": "Amazon OpenSearch Ingestion",
        "resource": "pipeline-blueprint",
        "prefix": "osis",
        "arn": "arn:${Partition}:osis:${Region}:${Account}:blueprint/${BlueprintName}"
    },
    {
        "service": "Amazon OpenSearch Serverless",
        "resource": "Collection",
        "prefix": "aoss",
        "arn": "arn:${Partition}:aoss:${Region}:${Account}:collection/${CollectionId}"
    },
    {
        "service": "Amazon OpenSearch Serverless",
        "resource": "Dashboards",
        "prefix": "aoss",
        "arn": "arn:${Partition}:aoss:${Region}:${Account}:dashboards/default"
    },
    {
        "service": "Amazon OpenSearch Service",
        "resource": "domain",
        "prefix": "es",
        "arn": "arn:${Partition}:es:${Region}:${Account}:domain/${DomainName}"
    },
    {
        "service": "Amazon OpenSearch Service",
        "resource": "es_role",
        "prefix": "es",
        "arn": "arn:${Partition}:iam::${Account}:role/aws-service-role/es.amazonaws.com/AWSServiceRoleForAmazonOpenSearchService"
    },
    {
        "service": "AWS OpsWorks",
        "resource": "stack",
        "prefix": "opsworks",
        "arn": "arn:${Partition}:opsworks:${Region}:${Account}:stack/${StackId}/"
    },
    {
        "service": "AWS Organizations",
        "resource": "account",
        "prefix": "organizations",
        "arn": "arn:${Partition}:organizations::${Account}:account/o-${OrganizationId}/${AccountId}"
    },
    {
        "service": "AWS Organizations",
        "resource": "handshake",
        "prefix": "organizations",
        "arn": "arn:${Partition}:organizations::${Account}:handshake/o-${OrganizationId}/${HandshakeType}/h-${HandshakeId}"
    },
    {
        "service": "AWS Organizations",
        "resource": "organization",
        "prefix": "organizations",
        "arn": "arn:${Partition}:organizations::${Account}:organization/o-${OrganizationId}"
    },
    {
        "service": "AWS Organizations",
        "resource": "organizationalunit",
        "prefix": "organizations",
        "arn": "arn:${Partition}:organizations::${Account}:ou/o-${OrganizationId}/ou-${OrganizationalUnitId}"
    },
    {
        "service": "AWS Organizations",
        "resource": "policy",
        "prefix": "organizations",
        "arn": "arn:${Partition}:organizations::${Account}:policy/o-${OrganizationId}/${PolicyType}/p-${PolicyId}"
    },
    {
        "service": "AWS Organizations",
        "resource": "resourcepolicy",
        "prefix": "organizations",
        "arn": "arn:${Partition}:organizations::${Account}:resourcepolicy/o-${OrganizationId}/rp-${ResourcePolicyId}"
    },
    {
        "service": "AWS Organizations",
        "resource": "awspolicy",
        "prefix": "organizations",
        "arn": "arn:${Partition}:organizations::aws:policy/${PolicyType}/p-${PolicyId}"
    },
    {
        "service": "AWS Organizations",
        "resource": "root",
        "prefix": "organizations",
        "arn": "arn:${Partition}:organizations::${Account}:root/o-${OrganizationId}/r-${RootId}"
    },
    {
        "service": "AWS Outposts",
        "resource": "outpost",
        "prefix": "outposts",
        "arn": "arn:${Partition}:outposts:${Region}:${Account}:outpost/${OutpostId}"
    },
    {
        "service": "AWS Outposts",
        "resource": "site",
        "prefix": "outposts",
        "arn": "arn:${Partition}:outposts:${Region}:${Account}:site/${SiteId}"
    },
    {
        "service": "AWS Panorama",
        "resource": "device",
        "prefix": "panorama",
        "arn": "arn:${Partition}:panorama:${Region}:${Account}:device/${DeviceId}"
    },
    {
        "service": "AWS Panorama",
        "resource": "package",
        "prefix": "panorama",
        "arn": "arn:${Partition}:panorama:${Region}:${Account}:package/${PackageId}"
    },
    {
        "service": "AWS Panorama",
        "resource": "applicationInstance",
        "prefix": "panorama",
        "arn": "arn:${Partition}:panorama:${Region}:${Account}:applicationInstance/${ApplicationInstanceId}"
    },
    {
        "service": "AWS Parallel Computing Service",
        "resource": "cluster",
        "prefix": "pcs",
        "arn": "arn:${Partition}:pcs:${Region}:${Account}:cluster/${ClusterIdentifier}"
    },
    {
        "service": "AWS Parallel Computing Service",
        "resource": "computenodegroup",
        "prefix": "pcs",
        "arn": "arn:${Partition}:pcs:${Region}:${Account}:cluster/${ClusterIdentifier}/computenodegroup/${ComputeNodeGroupIdentifier}"
    },
    {
        "service": "AWS Parallel Computing Service",
        "resource": "queue",
        "prefix": "pcs",
        "arn": "arn:${Partition}:pcs:${Region}:${Account}:cluster/${ClusterIdentifier}/queue/${QueueIdentifier}"
    },
    {
        "service": "AWS Partner Central Selling",
        "resource": "Engagement",
        "prefix": "partnercentral",
        "arn": "arn:${Partition}:partnercentral:${Region}::catalog/${Catalog}/engagement/${Identifier}"
    },
    {
        "service": "AWS Partner Central Selling",
        "resource": "engagement-by-accepting-invitation-task",
        "prefix": "partnercentral",
        "arn": "arn:${Partition}:partnercentral:${Region}::catalog/${Catalog}/engagement-by-accepting-invitation-task/${TaskId}"
    },
    {
        "service": "AWS Partner Central Selling",
        "resource": "engagement-from-opportunity-task",
        "prefix": "partnercentral",
        "arn": "arn:${Partition}:partnercentral:${Region}::catalog/${Catalog}/engagement-from-opportunity-task/${TaskId}"
    },
    {
        "service": "AWS Partner Central Selling",
        "resource": "engagement-invitation",
        "prefix": "partnercentral",
        "arn": "arn:${Partition}:partnercentral:${Region}::catalog/${Catalog}/engagement-invitation/${Identifier}"
    },
    {
        "service": "AWS Partner Central Selling",
        "resource": "Opportunity",
        "prefix": "partnercentral",
        "arn": "arn:${Partition}:partnercentral:${Region}:${Account}:catalog/${Catalog}/opportunity/${Identifier}"
    },
    {
        "service": "AWS Partner Central Selling",
        "resource": "resource-snapshot-job",
        "prefix": "partnercentral",
        "arn": "arn:${Partition}:partnercentral:${Region}:${Account}:catalog/${Catalog}/resource-snapshot-job/${Identifier}"
    },
    {
        "service": "AWS Partner Central Selling",
        "resource": "ResourceSnapshot",
        "prefix": "partnercentral",
        "arn": "arn:${Partition}:partnercentral:${Region}:${Account}:catalog/${Catalog}/engagement/${EngagementIdentifier}/resource/${ResourceType}/${ResourceIdentifier}/template/${TemplateIdentifier}/resource-snapshot/${SnapshotRevision}"
    },
    {
        "service": "AWS Partner Central Selling",
        "resource": "Solution",
        "prefix": "partnercentral",
        "arn": "arn:${Partition}:partnercentral:${Region}:${Account}:catalog/${Catalog}/solution/${Identifier}"
    },
    {
        "service": "AWS Payment Cryptography",
        "resource": "key",
        "prefix": "payment-cryptography",
        "arn": "arn:${Partition}:payment-cryptography:${Region}:${Account}:key/${KeyId}"
    },
    {
        "service": "AWS Payment Cryptography",
        "resource": "alias",
        "prefix": "payment-cryptography",
        "arn": "arn:${Partition}:payment-cryptography:${Region}:${Account}:alias/${Alias}"
    },
    {
        "service": "AWS Payments",
        "resource": "payment-instrument",
        "prefix": "payments",
        "arn": "arn:${Partition}:payments::${Account}:payment-instrument:${ResourceId}"
    },
    {
        "service": "AWS Performance Insights",
        "resource": "metric-resource",
        "prefix": "pi",
        "arn": "arn:${Partition}:pi:${Region}:${Account}:metrics/${ServiceType}/${Identifier}"
    },
    {
        "service": "AWS Performance Insights",
        "resource": "perf-reports-resource",
        "prefix": "pi",
        "arn": "arn:${Partition}:pi:${Region}:${Account}:perf-reports/${ServiceType}/${Identifier}/${ReportId}"
    },
    {
        "service": "Amazon Personalize",
        "resource": "schema",
        "prefix": "personalize",
        "arn": "arn:${Partition}:personalize:${Region}:${Account}:schema/${ResourceId}"
    },
    {
        "service": "Amazon Personalize",
        "resource": "featureTransformation",
        "prefix": "personalize",
        "arn": "arn:${Partition}:personalize:::feature-transformation/${ResourceId}"
    },
    {
        "service": "Amazon Personalize",
        "resource": "dataset",
        "prefix": "personalize",
        "arn": "arn:${Partition}:personalize:${Region}:${Account}:dataset/${ResourceId}"
    },
    {
        "service": "Amazon Personalize",
        "resource": "datasetGroup",
        "prefix": "personalize",
        "arn": "arn:${Partition}:personalize:${Region}:${Account}:dataset-group/${ResourceId}"
    },
    {
        "service": "Amazon Personalize",
        "resource": "datasetImportJob",
        "prefix": "personalize",
        "arn": "arn:${Partition}:personalize:${Region}:${Account}:dataset-import-job/${ResourceId}"
    },
    {
        "service": "Amazon Personalize",
        "resource": "dataInsightsJob",
        "prefix": "personalize",
        "arn": "arn:${Partition}:personalize:${Region}:${Account}:data-insights-job/${ResourceId}"
    },
    {
        "service": "Amazon Personalize",
        "resource": "datasetExportJob",
        "prefix": "personalize",
        "arn": "arn:${Partition}:personalize:${Region}:${Account}:dataset-export-job/${ResourceId}"
    },
    {
        "service": "Amazon Personalize",
        "resource": "dataDeletionJob",
        "prefix": "personalize",
        "arn": "arn:${Partition}:personalize:${Region}:${Account}:data-deletion-job/${ResourceId}"
    },
    {
        "service": "Amazon Personalize",
        "resource": "solution",
        "prefix": "personalize",
        "arn": "arn:${Partition}:personalize:${Region}:${Account}:solution/${ResourceId}"
    },
    {
        "service": "Amazon Personalize",
        "resource": "campaign",
        "prefix": "personalize",
        "arn": "arn:${Partition}:personalize:${Region}:${Account}:campaign/${ResourceId}"
    },
    {
        "service": "Amazon Personalize",
        "resource": "eventTracker",
        "prefix": "personalize",
        "arn": "arn:${Partition}:personalize:${Region}:${Account}:event-tracker/${ResourceId}"
    },
    {
        "service": "Amazon Personalize",
        "resource": "recipe",
        "prefix": "personalize",
        "arn": "arn:${Partition}:personalize:::recipe/${ResourceId}"
    },
    {
        "service": "Amazon Personalize",
        "resource": "algorithm",
        "prefix": "personalize",
        "arn": "arn:${Partition}:personalize:::algorithm/${ResourceId}"
    },
    {
        "service": "Amazon Personalize",
        "resource": "batchInferenceJob",
        "prefix": "personalize",
        "arn": "arn:${Partition}:personalize:${Region}:${Account}:batch-inference-job/${ResourceId}"
    },
    {
        "service": "Amazon Personalize",
        "resource": "filter",
        "prefix": "personalize",
        "arn": "arn:${Partition}:personalize:${Region}:${Account}:filter/${ResourceId}"
    },
    {
        "service": "Amazon Personalize",
        "resource": "recommender",
        "prefix": "personalize",
        "arn": "arn:${Partition}:personalize:${Region}:${Account}:recommender/${ResourceId}"
    },
    {
        "service": "Amazon Personalize",
        "resource": "batchSegmentJob",
        "prefix": "personalize",
        "arn": "arn:${Partition}:personalize:${Region}:${Account}:batch-segment-job/${ResourceId}"
    },
    {
        "service": "Amazon Personalize",
        "resource": "metricAttribution",
        "prefix": "personalize",
        "arn": "arn:${Partition}:personalize:${Region}:${Account}:metric-attribution/${ResourceId}"
    },
    {
        "service": "Amazon Pinpoint",
        "resource": "app",
        "prefix": "mobiletargeting",
        "arn": "arn:${Partition}:mobiletargeting:${Region}:${Account}:apps/${AppId}"
    },
    {
        "service": "Amazon Pinpoint",
        "resource": "apps",
        "prefix": "mobiletargeting",
        "arn": "arn:${Partition}:mobiletargeting:${Region}:${Account}:apps/*"
    },
    {
        "service": "Amazon Pinpoint",
        "resource": "campaign",
        "prefix": "mobiletargeting",
        "arn": "arn:${Partition}:mobiletargeting:${Region}:${Account}:apps/${AppId}/campaigns/${CampaignId}"
    },
    {
        "service": "Amazon Pinpoint",
        "resource": "journey",
        "prefix": "mobiletargeting",
        "arn": "arn:${Partition}:mobiletargeting:${Region}:${Account}:apps/${AppId}/journeys/${JourneyId}"
    },
    {
        "service": "Amazon Pinpoint",
        "resource": "journeys",
        "prefix": "mobiletargeting",
        "arn": "arn:${Partition}:mobiletargeting:${Region}:${Account}:apps/${AppId}/journeys"
    },
    {
        "service": "Amazon Pinpoint",
        "resource": "segment",
        "prefix": "mobiletargeting",
        "arn": "arn:${Partition}:mobiletargeting:${Region}:${Account}:apps/${AppId}/segments/${SegmentId}"
    },
    {
        "service": "Amazon Pinpoint",
        "resource": "template",
        "prefix": "mobiletargeting",
        "arn": "arn:${Partition}:mobiletargeting:${Region}:${Account}:templates/${TemplateName}/${TemplateType}"
    },
    {
        "service": "Amazon Pinpoint",
        "resource": "templates",
        "prefix": "mobiletargeting",
        "arn": "arn:${Partition}:mobiletargeting:${Region}:${Account}:templates"
    },
    {
        "service": "Amazon Pinpoint",
        "resource": "recommender",
        "prefix": "mobiletargeting",
        "arn": "arn:${Partition}:mobiletargeting:${Region}:${Account}:recommenders/${RecommenderId}"
    },
    {
        "service": "Amazon Pinpoint",
        "resource": "recommenders",
        "prefix": "mobiletargeting",
        "arn": "arn:${Partition}:mobiletargeting:${Region}:${Account}:recommenders/*"
    },
    {
        "service": "Amazon Pinpoint",
        "resource": "phone-number-validate",
        "prefix": "mobiletargeting",
        "arn": "arn:${Partition}:mobiletargeting:${Region}:${Account}:phone/number/validate"
    },
    {
        "service": "Amazon Pinpoint",
        "resource": "channels",
        "prefix": "mobiletargeting",
        "arn": "arn:${Partition}:mobiletargeting:${Region}:${Account}:apps/${AppId}/channels"
    },
    {
        "service": "Amazon Pinpoint",
        "resource": "channel",
        "prefix": "mobiletargeting",
        "arn": "arn:${Partition}:mobiletargeting:${Region}:${Account}:apps/${AppId}/channels/${ChannelType}"
    },
    {
        "service": "Amazon Pinpoint",
        "resource": "event-stream",
        "prefix": "mobiletargeting",
        "arn": "arn:${Partition}:mobiletargeting:${Region}:${Account}:apps/${AppId}/eventstream"
    },
    {
        "service": "Amazon Pinpoint",
        "resource": "events",
        "prefix": "mobiletargeting",
        "arn": "arn:${Partition}:mobiletargeting:${Region}:${Account}:apps/${AppId}/events"
    },
    {
        "service": "Amazon Pinpoint",
        "resource": "messages",
        "prefix": "mobiletargeting",
        "arn": "arn:${Partition}:mobiletargeting:${Region}:${Account}:apps/${AppId}/messages"
    },
    {
        "service": "Amazon Pinpoint",
        "resource": "verify-otp",
        "prefix": "mobiletargeting",
        "arn": "arn:${Partition}:mobiletargeting:${Region}:${Account}:apps/${AppId}/verify-otp"
    },
    {
        "service": "Amazon Pinpoint",
        "resource": "otp",
        "prefix": "mobiletargeting",
        "arn": "arn:${Partition}:mobiletargeting:${Region}:${Account}:apps/${AppId}/otp"
    },
    {
        "service": "Amazon Pinpoint",
        "resource": "attribute",
        "prefix": "mobiletargeting",
        "arn": "arn:${Partition}:mobiletargeting:${Region}:${Account}:apps/${AppId}/attributes/${AttributeType}"
    },
    {
        "service": "Amazon Pinpoint",
        "resource": "user",
        "prefix": "mobiletargeting",
        "arn": "arn:${Partition}:mobiletargeting:${Region}:${Account}:apps/${AppId}/users/${UserId}"
    },
    {
        "service": "Amazon Pinpoint",
        "resource": "endpoint",
        "prefix": "mobiletargeting",
        "arn": "arn:${Partition}:mobiletargeting:${Region}:${Account}:apps/${AppId}/endpoints/${EndpointId}"
    },
    {
        "service": "Amazon Pinpoint",
        "resource": "import-job",
        "prefix": "mobiletargeting",
        "arn": "arn:${Partition}:mobiletargeting:${Region}:${Account}:apps/${AppId}/jobs/import/${JobId}"
    },
    {
        "service": "Amazon Pinpoint",
        "resource": "export-job",
        "prefix": "mobiletargeting",
        "arn": "arn:${Partition}:mobiletargeting:${Region}:${Account}:apps/${AppId}/jobs/export/${JobId}"
    },
    {
        "service": "Amazon Pinpoint",
        "resource": "application-metrics",
        "prefix": "mobiletargeting",
        "arn": "arn:${Partition}:mobiletargeting:${Region}:${Account}:apps/${AppId}/kpis/daterange/${KpiName}"
    },
    {
        "service": "Amazon Pinpoint",
        "resource": "campaign-metrics",
        "prefix": "mobiletargeting",
        "arn": "arn:${Partition}:mobiletargeting:${Region}:${Account}:apps/${AppId}/campaigns/${CampaignId}/kpis/daterange/${KpiName}"
    },
    {
        "service": "Amazon Pinpoint",
        "resource": "journey-metrics",
        "prefix": "mobiletargeting",
        "arn": "arn:${Partition}:mobiletargeting:${Region}:${Account}:apps/${AppId}/journeys/${JourneyId}/kpis/daterange/${KpiName}"
    },
    {
        "service": "Amazon Pinpoint",
        "resource": "journey-execution-metrics",
        "prefix": "mobiletargeting",
        "arn": "arn:${Partition}:mobiletargeting:${Region}:${Account}:apps/${AppId}/journeys/${JourneyId}/execution-metrics"
    },
    {
        "service": "Amazon Pinpoint",
        "resource": "journey-execution-activity-metrics",
        "prefix": "mobiletargeting",
        "arn": "arn:${Partition}:mobiletargeting:${Region}:${Account}:apps/${AppId}/journeys/${JourneyId}/activities/${JourneyActivityId}/execution-metrics"
    },
    {
        "service": "Amazon Pinpoint",
        "resource": "reports",
        "prefix": "mobiletargeting",
        "arn": "arn:${Partition}:mobiletargeting:${Region}:${Account}:reports"
    },
    {
        "service": "Amazon Pinpoint Email Service",
        "resource": "configuration-set",
        "prefix": "ses",
        "arn": "arn:${Partition}:ses:${Region}:${Account}:configuration-set/${ConfigurationSetName}"
    },
    {
        "service": "Amazon Pinpoint Email Service",
        "resource": "dedicated-ip-pool",
        "prefix": "ses",
        "arn": "arn:${Partition}:ses:${Region}:${Account}:dedicated-ip-pool/${DedicatedIPPool}"
    },
    {
        "service": "Amazon Pinpoint Email Service",
        "resource": "deliverability-test-report",
        "prefix": "ses",
        "arn": "arn:${Partition}:ses:${Region}:${Account}:deliverability-test-report/${ReportId}"
    },
    {
        "service": "Amazon Pinpoint Email Service",
        "resource": "identity",
        "prefix": "ses",
        "arn": "arn:${Partition}:ses:${Region}:${Account}:identity/${IdentityName}"
    },
    {
        "service": "Amazon Polly",
        "resource": "lexicon",
        "prefix": "polly",
        "arn": "arn:${Partition}:polly:${Region}:${Account}:lexicon/${LexiconName}"
    },
    {
        "service": "AWS Private CA Connector for Active Directory",
        "resource": "Connector",
        "prefix": "pca-connector-ad",
        "arn": "arn:${Partition}:pca-connector-ad:${Region}:${Account}:connector/${ConnectorId}"
    },
    {
        "service": "AWS Private CA Connector for Active Directory",
        "resource": "DirectoryRegistration",
        "prefix": "pca-connector-ad",
        "arn": "arn:${Partition}:pca-connector-ad:${Region}:${Account}:directory-registration/${DirectoryId}"
    },
    {
        "service": "AWS Private CA Connector for Active Directory",
        "resource": "Template",
        "prefix": "pca-connector-ad",
        "arn": "arn:${Partition}:pca-connector-ad:${Region}:${Account}:connector/${ConnectorId}/template/${TemplateId}"
    },
    {
        "service": "AWS Private CA Connector for SCEP",
        "resource": "Challenge",
        "prefix": "pca-connector-scep",
        "arn": "arn:${Partition}:pca-connector-scep:${Region}:${Account}:connector/${ConnectorId}/challenge/${ChallengeId}"
    },
    {
        "service": "AWS Private CA Connector for SCEP",
        "resource": "Connector",
        "prefix": "pca-connector-scep",
        "arn": "arn:${Partition}:pca-connector-scep:${Region}:${Account}:connector/${ConnectorId}"
    },
    {
        "service": "AWS Private Certificate Authority",
        "resource": "certificate-authority",
        "prefix": "acm-pca",
        "arn": "arn:${Partition}:acm-pca:${Region}:${Account}:certificate-authority/${CertificateAuthorityId}"
    },
    {
        "service": "AWS Proton",
        "resource": "environment-template",
        "prefix": "proton",
        "arn": "arn:${Partition}:proton:${Region}:${Account}:environment-template/${Name}"
    },
    {
        "service": "AWS Proton",
        "resource": "environment-template-version",
        "prefix": "proton",
        "arn": "arn:${Partition}:proton:${Region}:${Account}:environment-template/${TemplateName}:${MajorVersion}.${MinorVersion}"
    },
    {
        "service": "AWS Proton",
        "resource": "environment-template-major-version",
        "prefix": "proton",
        "arn": "arn:${Partition}:proton:${Region}:${Account}:environment-template/${TemplateName}:${MajorVersionId}"
    },
    {
        "service": "AWS Proton",
        "resource": "environment-template-minor-version",
        "prefix": "proton",
        "arn": "arn:${Partition}:proton:${Region}:${Account}:environment-template/${TemplateName}:${MajorVersionId}.${MinorVersionId}"
    },
    {
        "service": "AWS Proton",
        "resource": "service-template",
        "prefix": "proton",
        "arn": "arn:${Partition}:proton:${Region}:${Account}:service-template/${Name}"
    },
    {
        "service": "AWS Proton",
        "resource": "service-template-version",
        "prefix": "proton",
        "arn": "arn:${Partition}:proton:${Region}:${Account}:service-template/${TemplateName}:${MajorVersion}.${MinorVersion}"
    },
    {
        "service": "AWS Proton",
        "resource": "service-template-major-version",
        "prefix": "proton",
        "arn": "arn:${Partition}:proton:${Region}:${Account}:service-template/${TemplateName}:${MajorVersionId}"
    },
    {
        "service": "AWS Proton",
        "resource": "service-template-minor-version",
        "prefix": "proton",
        "arn": "arn:${Partition}:proton:${Region}:${Account}:service-template/${TemplateName}:${MajorVersionId}.${MinorVersionId}"
    },
    {
        "service": "AWS Proton",
        "resource": "environment",
        "prefix": "proton",
        "arn": "arn:${Partition}:proton:${Region}:${Account}:environment/${Name}"
    },
    {
        "service": "AWS Proton",
        "resource": "service",
        "prefix": "proton",
        "arn": "arn:${Partition}:proton:${Region}:${Account}:service/${Name}"
    },
    {
        "service": "AWS Proton",
        "resource": "service-instance",
        "prefix": "proton",
        "arn": "arn:${Partition}:proton:${Region}:${Account}:service/${ServiceName}/service-instance/${Name}"
    },
    {
        "service": "AWS Proton",
        "resource": "environment-account-connection",
        "prefix": "proton",
        "arn": "arn:${Partition}:proton:${Region}:${Account}:environment-account-connection/${Id}"
    },
    {
        "service": "AWS Proton",
        "resource": "repository",
        "prefix": "proton",
        "arn": "arn:${Partition}:proton:${Region}:${Account}:repository/${Provider}:${Name}"
    },
    {
        "service": "AWS Proton",
        "resource": "component",
        "prefix": "proton",
        "arn": "arn:${Partition}:proton:${Region}:${Account}:component/${Id}"
    },
    {
        "service": "AWS Proton",
        "resource": "deployment",
        "prefix": "proton",
        "arn": "arn:${Partition}:proton:${Region}:${Account}:deployment/${Id}"
    },
    {
        "service": "AWS Purchase Orders Console",
        "resource": "purchase-order",
        "prefix": "purchase-orders",
        "arn": "arn:${Partition}:purchase-orders::${Account}:purchase-order/${ResourceName}"
    },
    {
        "service": "Amazon Q",
        "resource": "plugin",
        "prefix": "q",
        "arn": "arn:${Partition}:qdeveloper:${Region}:${Account}:plugin/${Identifier}"
    },
    {
        "service": "Amazon Q Business",
        "resource": "application",
        "prefix": "qbusiness",
        "arn": "arn:${Partition}:qbusiness:${Region}:${Account}:application/${ApplicationId}"
    },
    {
        "service": "Amazon Q Business",
        "resource": "integration",
        "prefix": "qbusiness",
        "arn": "arn:${Partition}:qbusiness:${Region}:${Account}:application/${ApplicationId}/integration/${IntegrationId}"
    },
    {
        "service": "Amazon Q Business",
        "resource": "retriever",
        "prefix": "qbusiness",
        "arn": "arn:${Partition}:qbusiness:${Region}:${Account}:application/${ApplicationId}/retriever/${RetrieverId}"
    },
    {
        "service": "Amazon Q Business",
        "resource": "index",
        "prefix": "qbusiness",
        "arn": "arn:${Partition}:qbusiness:${Region}:${Account}:application/${ApplicationId}/index/${IndexId}"
    },
    {
        "service": "Amazon Q Business",
        "resource": "data-source",
        "prefix": "qbusiness",
        "arn": "arn:${Partition}:qbusiness:${Region}:${Account}:application/${ApplicationId}/index/${IndexId}/data-source/${DataSourceId}"
    },
    {
        "service": "Amazon Q Business",
        "resource": "plugin",
        "prefix": "qbusiness",
        "arn": "arn:${Partition}:qbusiness:${Region}:${Account}:application/${ApplicationId}/plugin/${PluginId}"
    },
    {
        "service": "Amazon Q Business",
        "resource": "web-experience",
        "prefix": "qbusiness",
        "arn": "arn:${Partition}:qbusiness:${Region}:${Account}:application/${ApplicationId}/web-experience/${WebExperienceId}"
    },
    {
        "service": "Amazon Q Business",
        "resource": "user-license",
        "prefix": "qbusiness",
        "arn": "arn:${Partition}:qbusiness:${Region}:${Account}:application/${ApplicationId}/user-license/${UserLicenseId}"
    },
    {
        "service": "Amazon Q Business",
        "resource": "subscription",
        "prefix": "qbusiness",
        "arn": "arn:${Partition}:qbusiness:${Region}:${Account}:application/${ApplicationId}/subscription/${SubscriptionId}"
    },
    {
        "service": "Amazon Q Business",
        "resource": "data-accessor",
        "prefix": "qbusiness",
        "arn": "arn:${Partition}:qbusiness:${Region}:${Account}:application/${ApplicationId}/data-accessor/${DataAccessorId}"
    },
    {
        "service": "Amazon Q Business Q Apps",
        "resource": "qapp",
        "prefix": "qapps",
        "arn": "arn:${Partition}:qapps:${Region}:${Account}:application/${ApplicationId}/qapp/${AppId}"
    },
    {
        "service": "Amazon Q Business Q Apps",
        "resource": "qapp-session",
        "prefix": "qapps",
        "arn": "arn:${Partition}:qapps:${Region}:${Account}:application/${ApplicationId}/qapp/${AppId}/session/${SessionId}"
    },
    {
        "service": "Amazon Q Developer",
        "resource": "codeTransformation",
        "prefix": "qdeveloper",
        "arn": "arn:${Partition}:qdeveloper:${Region}:${Account}:codeTransformation/${Identifier}"
    },
    {
        "service": "Amazon Q in Connect",
        "resource": "AIAgent",
        "prefix": "wisdom",
        "arn": "arn:${Partition}:wisdom:${Region}:${Account}:ai-agent/${AssistantId}/${AIAgentId}"
    },
    {
        "service": "Amazon Q in Connect",
        "resource": "AIPrompt",
        "prefix": "wisdom",
        "arn": "arn:${Partition}:wisdom:${Region}:${Account}:ai-prompt/${AssistantId}/${AIPromptId}"
    },
    {
        "service": "Amazon Q in Connect",
        "resource": "AIGuardrail",
        "prefix": "wisdom",
        "arn": "arn:${Partition}:wisdom:${Region}:${Account}:ai-guardrail/${AssistantId}/${AIGuardrailId}"
    },
    {
        "service": "Amazon Q in Connect",
        "resource": "Assistant",
        "prefix": "wisdom",
        "arn": "arn:${Partition}:wisdom:${Region}:${Account}:assistant/${AssistantId}"
    },
    {
        "service": "Amazon Q in Connect",
        "resource": "AssistantAssociation",
        "prefix": "wisdom",
        "arn": "arn:${Partition}:wisdom:${Region}:${Account}:association/${AssistantId}/${AssistantAssociationId}"
    },
    {
        "service": "Amazon Q in Connect",
        "resource": "Content",
        "prefix": "wisdom",
        "arn": "arn:${Partition}:wisdom:${Region}:${Account}:content/${KnowledgeBaseId}/${ContentId}"
    },
    {
        "service": "Amazon Q in Connect",
        "resource": "ContentAssociation",
        "prefix": "wisdom",
        "arn": "arn:${Partition}:wisdom:${Region}:${Account}:content-association/${KnowledgeBaseId}/${ContentId}/${ContentAssociationId}"
    },
    {
        "service": "Amazon Q in Connect",
        "resource": "KnowledgeBase",
        "prefix": "wisdom",
        "arn": "arn:${Partition}:wisdom:${Region}:${Account}:knowledge-base/${KnowledgeBaseId}"
    },
    {
        "service": "Amazon Q in Connect",
        "resource": "MessageTemplate",
        "prefix": "wisdom",
        "arn": "arn:${Partition}:wisdom:${Region}:${Account}:message-template/${KnowledgeBaseId}/${MessageTemplateId}"
    },
    {
        "service": "Amazon Q in Connect",
        "resource": "Session",
        "prefix": "wisdom",
        "arn": "arn:${Partition}:wisdom:${Region}:${Account}:session/${AssistantId}/${SessionId}"
    },
    {
        "service": "Amazon Q in Connect",
        "resource": "QuickResponse",
        "prefix": "wisdom",
        "arn": "arn:${Partition}:wisdom:${Region}:${Account}:quick-response/${KnowledgeBaseId}/${QuickResponseId}"
    },
    {
        "service": "Amazon QLDB",
        "resource": "ledger",
        "prefix": "qldb",
        "arn": "arn:${Partition}:qldb:${Region}:${Account}:ledger/${LedgerName}"
    },
    {
        "service": "Amazon QLDB",
        "resource": "stream",
        "prefix": "qldb",
        "arn": "arn:${Partition}:qldb:${Region}:${Account}:stream/${LedgerName}/${StreamId}"
    },
    {
        "service": "Amazon QLDB",
        "resource": "table",
        "prefix": "qldb",
        "arn": "arn:${Partition}:qldb:${Region}:${Account}:ledger/${LedgerName}/table/${TableId}"
    },
    {
        "service": "Amazon QLDB",
        "resource": "catalog",
        "prefix": "qldb",
        "arn": "arn:${Partition}:qldb:${Region}:${Account}:ledger/${LedgerName}/information_schema/user_tables"
    },
    {
        "service": "Amazon QuickSight",
        "resource": "account",
        "prefix": "quicksight",
        "arn": "arn:${Partition}:quicksight:${Region}:${Account}:account/${ResourceId}"
    },
    {
        "service": "Amazon QuickSight",
        "resource": "user",
        "prefix": "quicksight",
        "arn": "arn:${Partition}:quicksight:${Region}:${Account}:user/${ResourceId}"
    },
    {
        "service": "Amazon QuickSight",
        "resource": "group",
        "prefix": "quicksight",
        "arn": "arn:${Partition}:quicksight:${Region}:${Account}:group/${ResourceId}"
    },
    {
        "service": "Amazon QuickSight",
        "resource": "analysis",
        "prefix": "quicksight",
        "arn": "arn:${Partition}:quicksight:${Region}:${Account}:analysis/${ResourceId}"
    },
    {
        "service": "Amazon QuickSight",
        "resource": "dashboard",
        "prefix": "quicksight",
        "arn": "arn:${Partition}:quicksight:${Region}:${Account}:dashboard/${ResourceId}"
    },
    {
        "service": "Amazon QuickSight",
        "resource": "template",
        "prefix": "quicksight",
        "arn": "arn:${Partition}:quicksight:${Region}:${Account}:template/${ResourceId}"
    },
    {
        "service": "Amazon QuickSight",
        "resource": "vpcconnection",
        "prefix": "quicksight",
        "arn": "arn:${Partition}:quicksight:${Region}:${Account}:vpcConnection/${ResourceId}"
    },
    {
        "service": "Amazon QuickSight",
        "resource": "assetBundleExportJob",
        "prefix": "quicksight",
        "arn": "arn:${Partition}:quicksight:${Region}:${Account}:asset-bundle-export-job/${ResourceId}"
    },
    {
        "service": "Amazon QuickSight",
        "resource": "assetBundleImportJob",
        "prefix": "quicksight",
        "arn": "arn:${Partition}:quicksight:${Region}:${Account}:asset-bundle-import-job/${ResourceId}"
    },
    {
        "service": "Amazon QuickSight",
        "resource": "datasource",
        "prefix": "quicksight",
        "arn": "arn:${Partition}:quicksight:${Region}:${Account}:datasource/${ResourceId}"
    },
    {
        "service": "Amazon QuickSight",
        "resource": "dataset",
        "prefix": "quicksight",
        "arn": "arn:${Partition}:quicksight:${Region}:${Account}:dataset/${ResourceId}"
    },
    {
        "service": "Amazon QuickSight",
        "resource": "ingestion",
        "prefix": "quicksight",
        "arn": "arn:${Partition}:quicksight:${Region}:${Account}:dataset/${DatasetId}/ingestion/${ResourceId}"
    },
    {
        "service": "Amazon QuickSight",
        "resource": "refreshschedule",
        "prefix": "quicksight",
        "arn": "arn:${Partition}:quicksight:${Region}:${Account}:dataset/${DatasetId}/refresh-schedule/${ResourceId}"
    },
    {
        "service": "Amazon QuickSight",
        "resource": "theme",
        "prefix": "quicksight",
        "arn": "arn:${Partition}:quicksight:${Region}:${Account}:theme/${ResourceId}"
    },
    {
        "service": "Amazon QuickSight",
        "resource": "assignment",
        "prefix": "quicksight",
        "arn": "arn:${Partition}:quicksight::${Account}:assignment/${ResourceId}"
    },
    {
        "service": "Amazon QuickSight",
        "resource": "customization",
        "prefix": "quicksight",
        "arn": "arn:${Partition}:quicksight:${Region}:${Account}:customization/${ResourceId}"
    },
    {
        "service": "Amazon QuickSight",
        "resource": "namespace",
        "prefix": "quicksight",
        "arn": "arn:${Partition}:quicksight:${Region}:${Account}:namespace/${ResourceId}"
    },
    {
        "service": "Amazon QuickSight",
        "resource": "folder",
        "prefix": "quicksight",
        "arn": "arn:${Partition}:quicksight:${Region}:${Account}:folder/${ResourceId}"
    },
    {
        "service": "Amazon QuickSight",
        "resource": "emailCustomizationTemplate",
        "prefix": "quicksight",
        "arn": "arn:${Partition}:quicksight:${Region}:${Account}:email-customization-template/${ResourceId}"
    },
    {
        "service": "Amazon QuickSight",
        "resource": "topic",
        "prefix": "quicksight",
        "arn": "arn:${Partition}:quicksight:${Region}:${Account}:topic/${ResourceId}"
    },
    {
        "service": "Amazon QuickSight",
        "resource": "dashboardSnapshotJob",
        "prefix": "quicksight",
        "arn": "arn:${Partition}:quicksight:${Region}:${Account}:dashboard/${DashboardId}/snapshot-job/${ResourceId}"
    },
    {
        "service": "Amazon QuickSight",
        "resource": "brand",
        "prefix": "quicksight",
        "arn": "arn:${Partition}:quicksight:${Region}:${Account}:brand/${ResourceId}"
    },
    {
        "service": "Amazon QuickSight",
        "resource": "custompermissions",
        "prefix": "quicksight",
        "arn": "arn:${Partition}:quicksight:${Region}:${Account}:custompermissions/${ResourceId}"
    },
    {
        "service": "Amazon RDS",
        "resource": "cluster",
        "prefix": "rds",
        "arn": "arn:${Partition}:rds:${Region}:${Account}:cluster:${DbClusterInstanceName}"
    },
    {
        "service": "Amazon RDS",
        "resource": "shardgrp",
        "prefix": "rds",
        "arn": "arn:${Partition}:rds:${Region}:${Account}:shard-group:${DbShardGroupResourceId}"
    },
    {
        "service": "Amazon RDS",
        "resource": "cluster-auto-backup",
        "prefix": "rds",
        "arn": "arn:${Partition}:rds:${Region}:${Account}:cluster-auto-backup:${DbClusterAutomatedBackupId}"
    },
    {
        "service": "Amazon RDS",
        "resource": "auto-backup",
        "prefix": "rds",
        "arn": "arn:${Partition}:rds:${Region}:${Account}:auto-backup:${DbInstanceAutomatedBackupId}"
    },
    {
        "service": "Amazon RDS",
        "resource": "cluster-endpoint",
        "prefix": "rds",
        "arn": "arn:${Partition}:rds:${Region}:${Account}:cluster-endpoint:${DbClusterEndpoint}"
    },
    {
        "service": "Amazon RDS",
        "resource": "cluster-pg",
        "prefix": "rds",
        "arn": "arn:${Partition}:rds:${Region}:${Account}:cluster-pg:${ClusterParameterGroupName}"
    },
    {
        "service": "Amazon RDS",
        "resource": "cluster-snapshot",
        "prefix": "rds",
        "arn": "arn:${Partition}:rds:${Region}:${Account}:cluster-snapshot:${ClusterSnapshotName}"
    },
    {
        "service": "Amazon RDS",
        "resource": "db",
        "prefix": "rds",
        "arn": "arn:${Partition}:rds:${Region}:${Account}:db:${DbInstanceName}"
    },
    {
        "service": "Amazon RDS",
        "resource": "es",
        "prefix": "rds",
        "arn": "arn:${Partition}:rds:${Region}:${Account}:es:${SubscriptionName}"
    },
    {
        "service": "Amazon RDS",
        "resource": "global-cluster",
        "prefix": "rds",
        "arn": "arn:${Partition}:rds::${Account}:global-cluster:${GlobalCluster}"
    },
    {
        "service": "Amazon RDS",
        "resource": "og",
        "prefix": "rds",
        "arn": "arn:${Partition}:rds:${Region}:${Account}:og:${OptionGroupName}"
    },
    {
        "service": "Amazon RDS",
        "resource": "pg",
        "prefix": "rds",
        "arn": "arn:${Partition}:rds:${Region}:${Account}:pg:${ParameterGroupName}"
    },
    {
        "service": "Amazon RDS",
        "resource": "proxy",
        "prefix": "rds",
        "arn": "arn:${Partition}:rds:${Region}:${Account}:db-proxy:${DbProxyId}"
    },
    {
        "service": "Amazon RDS",
        "resource": "proxy-endpoint",
        "prefix": "rds",
        "arn": "arn:${Partition}:rds:${Region}:${Account}:db-proxy-endpoint:${DbProxyEndpointId}"
    },
    {
        "service": "Amazon RDS",
        "resource": "ri",
        "prefix": "rds",
        "arn": "arn:${Partition}:rds:${Region}:${Account}:ri:${ReservedDbInstanceName}"
    },
    {
        "service": "Amazon RDS",
        "resource": "secgrp",
        "prefix": "rds",
        "arn": "arn:${Partition}:rds:${Region}:${Account}:secgrp:${SecurityGroupName}"
    },
    {
        "service": "Amazon RDS",
        "resource": "snapshot",
        "prefix": "rds",
        "arn": "arn:${Partition}:rds:${Region}:${Account}:snapshot:${SnapshotName}"
    },
    {
        "service": "Amazon RDS",
        "resource": "subgrp",
        "prefix": "rds",
        "arn": "arn:${Partition}:rds:${Region}:${Account}:subgrp:${SubnetGroupName}"
    },
    {
        "service": "Amazon RDS",
        "resource": "target-group",
        "prefix": "rds",
        "arn": "arn:${Partition}:rds:${Region}:${Account}:target-group:${TargetGroupId}"
    },
    {
        "service": "Amazon RDS",
        "resource": "cev",
        "prefix": "rds",
        "arn": "arn:${Partition}:rds:${Region}:${Account}:cev:${Engine}/${EngineVersion}/${CustomDbEngineVersionId}"
    },
    {
        "service": "Amazon RDS",
        "resource": "deployment",
        "prefix": "rds",
        "arn": "arn:${Partition}:rds:${Region}:${Account}:deployment:${BlueGreenDeploymentIdentifier}"
    },
    {
        "service": "Amazon RDS",
        "resource": "integration",
        "prefix": "rds",
        "arn": "arn:${Partition}:rds:${Region}:${Account}:integration:${IntegrationIdentifier}"
    },
    {
        "service": "Amazon RDS",
        "resource": "snapshot-tenant-database",
        "prefix": "rds",
        "arn": "arn:${Partition}:rds:${Region}:${Account}:snapshot-tenant-database:${SnapshotName}:${TenantResourceId}"
    },
    {
        "service": "Amazon RDS",
        "resource": "tenant-database",
        "prefix": "rds",
        "arn": "arn:${Partition}:rds:${Region}:${Account}:tenant-database:${TenantResourceId}"
    },
    {
        "service": "Amazon RDS IAM Authentication",
        "resource": "db-user",
        "prefix": "rds-db",
        "arn": "arn:${Partition}:rds-db:${Region}:${Account}:dbuser:${DbiResourceId}/${DbUserName}"
    },
    {
        "service": "AWS Recycle Bin",
        "resource": "rule",
        "prefix": "rbin",
        "arn": "arn:${Partition}:rbin:${Region}:${Account}:rule/${ResourceName}"
    },
    {
        "service": "Amazon Redshift",
        "resource": "cluster",
        "prefix": "redshift",
        "arn": "arn:${Partition}:redshift:${Region}:${Account}:cluster:${ClusterName}"
    },
    {
        "service": "Amazon Redshift",
        "resource": "datashare",
        "prefix": "redshift",
        "arn": "arn:${Partition}:redshift:${Region}:${Account}:datashare:${ProducerClusterNamespace}/${DataShareName}"
    },
    {
        "service": "Amazon Redshift",
        "resource": "dbgroup",
        "prefix": "redshift",
        "arn": "arn:${Partition}:redshift:${Region}:${Account}:dbgroup:${ClusterName}/${DbGroup}"
    },
    {
        "service": "Amazon Redshift",
        "resource": "dbname",
        "prefix": "redshift",
        "arn": "arn:${Partition}:redshift:${Region}:${Account}:dbname:${ClusterName}/${DbName}"
    },
    {
        "service": "Amazon Redshift",
        "resource": "dbuser",
        "prefix": "redshift",
        "arn": "arn:${Partition}:redshift:${Region}:${Account}:dbuser:${ClusterName}/${DbUser}"
    },
    {
        "service": "Amazon Redshift",
        "resource": "eventsubscription",
        "prefix": "redshift",
        "arn": "arn:${Partition}:redshift:${Region}:${Account}:eventsubscription:${EventSubscriptionName}"
    },
    {
        "service": "Amazon Redshift",
        "resource": "hsmclientcertificate",
        "prefix": "redshift",
        "arn": "arn:${Partition}:redshift:${Region}:${Account}:hsmclientcertificate:${HSMClientCertificateId}"
    },
    {
        "service": "Amazon Redshift",
        "resource": "hsmconfiguration",
        "prefix": "redshift",
        "arn": "arn:${Partition}:redshift:${Region}:${Account}:hsmconfiguration:${HSMConfigurationId}"
    },
    {
        "service": "Amazon Redshift",
        "resource": "integration",
        "prefix": "redshift",
        "arn": "arn:${Partition}:redshift:${Region}:${Account}:integration:${IntegrationIdentifier}"
    },
    {
        "service": "Amazon Redshift",
        "resource": "namespace",
        "prefix": "redshift",
        "arn": "arn:${Partition}:redshift:${Region}:${Account}:namespace:${ClusterNamespace}"
    },
    {
        "service": "Amazon Redshift",
        "resource": "parametergroup",
        "prefix": "redshift",
        "arn": "arn:${Partition}:redshift:${Region}:${Account}:parametergroup:${ParameterGroupName}"
    },
    {
        "service": "Amazon Redshift",
        "resource": "securitygroup",
        "prefix": "redshift",
        "arn": "arn:${Partition}:redshift:${Region}:${Account}:securitygroup:${SecurityGroupName}/ec2securitygroup/${Owner}/${Ec2SecurityGroupId}"
    },
    {
        "service": "Amazon Redshift",
        "resource": "securitygroupingress-cidr",
        "prefix": "redshift",
        "arn": "arn:${Partition}:redshift:${Region}:${Account}:securitygroupingress:${SecurityGroupName}/cidrip/${IpRange}"
    },
    {
        "service": "Amazon Redshift",
        "resource": "securitygroupingress-ec2securitygroup",
        "prefix": "redshift",
        "arn": "arn:${Partition}:redshift:${Region}:${Account}:securitygroupingress:${SecurityGroupName}/ec2securitygroup/${Owner}/${Ece2SecuritygroupId}"
    },
    {
        "service": "Amazon Redshift",
        "resource": "snapshot",
        "prefix": "redshift",
        "arn": "arn:${Partition}:redshift:${Region}:${Account}:snapshot:${ClusterName}/${SnapshotName}"
    },
    {
        "service": "Amazon Redshift",
        "resource": "snapshotcopygrant",
        "prefix": "redshift",
        "arn": "arn:${Partition}:redshift:${Region}:${Account}:snapshotcopygrant:${SnapshotCopyGrantName}"
    },
    {
        "service": "Amazon Redshift",
        "resource": "snapshotschedule",
        "prefix": "redshift",
        "arn": "arn:${Partition}:redshift:${Region}:${Account}:snapshotschedule:${ScheduleIdentifier}"
    },
    {
        "service": "Amazon Redshift",
        "resource": "subnetgroup",
        "prefix": "redshift",
        "arn": "arn:${Partition}:redshift:${Region}:${Account}:subnetgroup:${SubnetGroupName}"
    },
    {
        "service": "Amazon Redshift",
        "resource": "usagelimit",
        "prefix": "redshift",
        "arn": "arn:${Partition}:redshift:${Region}:${Account}:usagelimit:${UsageLimitId}"
    },
    {
        "service": "Amazon Redshift",
        "resource": "redshiftidcapplication",
        "prefix": "redshift",
        "arn": "arn:${Partition}:redshift:${Region}:${Account}:redshiftidcapplication:${RedshiftIdcApplicationId}"
    },
    {
        "service": "Amazon Redshift",
        "resource": "qev2idcapplication",
        "prefix": "redshift",
        "arn": "arn:${Partition}:redshift:${Region}:${Account}:qev2idcapplication:${Qev2IdcApplicationId}"
    },
    {
        "service": "Amazon Redshift Serverless",
        "resource": "namespace",
        "prefix": "redshift-serverless",
        "arn": "arn:${Partition}:redshift-serverless:${Region}:${Account}:namespace/${NamespaceId}"
    },
    {
        "service": "Amazon Redshift Serverless",
        "resource": "snapshot",
        "prefix": "redshift-serverless",
        "arn": "arn:${Partition}:redshift-serverless:${Region}:${Account}:snapshot/${SnapshotId}"
    },
    {
        "service": "Amazon Redshift Serverless",
        "resource": "workgroup",
        "prefix": "redshift-serverless",
        "arn": "arn:${Partition}:redshift-serverless:${Region}:${Account}:workgroup/${WorkgroupId}"
    },
    {
        "service": "Amazon Redshift Serverless",
        "resource": "managed-workgroup",
        "prefix": "redshift-serverless",
        "arn": "arn:${Partition}:redshift-serverless:${Region}:${Account}:managed-workgroup/${ManagedWorkgroupName}"
    },
    {
        "service": "Amazon Redshift Serverless",
        "resource": "recoveryPoint",
        "prefix": "redshift-serverless",
        "arn": "arn:${Partition}:redshift-serverless:${Region}:${Account}:recoverypoint/${RecoveryPointId}"
    },
    {
        "service": "Amazon Redshift Serverless",
        "resource": "endpointAccess",
        "prefix": "redshift-serverless",
        "arn": "arn:${Partition}:redshift-serverless:${Region}:${Account}:managedvpcendpoint/${EndpointAccessId}"
    },
    {
        "service": "Amazon Rekognition",
        "resource": "collection",
        "prefix": "rekognition",
        "arn": "arn:${Partition}:rekognition:${Region}:${Account}:collection/${CollectionId}"
    },
    {
        "service": "Amazon Rekognition",
        "resource": "streamprocessor",
        "prefix": "rekognition",
        "arn": "arn:${Partition}:rekognition:${Region}:${Account}:streamprocessor/${StreamprocessorId}"
    },
    {
        "service": "Amazon Rekognition",
        "resource": "project",
        "prefix": "rekognition",
        "arn": "arn:${Partition}:rekognition:${Region}:${Account}:project/${ProjectName}/${CreationTimestamp}"
    },
    {
        "service": "Amazon Rekognition",
        "resource": "projectversion",
        "prefix": "rekognition",
        "arn": "arn:${Partition}:rekognition:${Region}:${Account}:project/${ProjectName}/version/${VersionName}/${CreationTimestamp}"
    },
    {
        "service": "Amazon Rekognition",
        "resource": "dataset",
        "prefix": "rekognition",
        "arn": "arn:${Partition}:rekognition:${Region}:${Account}:project/${ProjectName}/dataset/${DatasetType}/${CreationTimestamp}"
    },
    {
        "service": "AWS rePost Private",
        "resource": "space",
        "prefix": "repostspace",
        "arn": "arn:${Partition}:repostspace:${Region}:${Account}:space/${ResourceId}"
    },
    {
        "service": "AWS Resilience Hub",
        "resource": "resiliency-policy",
        "prefix": "resiliencehub",
        "arn": "arn:${Partition}:resiliencehub:${Region}:${Account}:resiliency-policy/${ResiliencyPolicyId}"
    },
    {
        "service": "AWS Resilience Hub",
        "resource": "application",
        "prefix": "resiliencehub",
        "arn": "arn:${Partition}:resiliencehub:${Region}:${Account}:app/${AppId}"
    },
    {
        "service": "AWS Resilience Hub",
        "resource": "app-assessment",
        "prefix": "resiliencehub",
        "arn": "arn:${Partition}:resiliencehub:${Region}:${Account}:app-assessment/${AppAssessmentId}"
    },
    {
        "service": "AWS Resilience Hub",
        "resource": "recommendation-template",
        "prefix": "resiliencehub",
        "arn": "arn:${Partition}:resiliencehub:${Region}:${Account}:recommendation-template/${RecommendationTemplateId}"
    },
    {
        "service": "AWS Resource Access Manager (RAM)",
        "resource": "resource-share",
        "prefix": "ram",
        "arn": "arn:${Partition}:ram:${Region}:${Account}:resource-share/${ResourcePath}"
    },
    {
        "service": "AWS Resource Access Manager (RAM)",
        "resource": "resource-share-invitation",
        "prefix": "ram",
        "arn": "arn:${Partition}:ram:${Region}:${Account}:resource-share-invitation/${ResourcePath}"
    },
    {
        "service": "AWS Resource Access Manager (RAM)",
        "resource": "permission",
        "prefix": "ram",
        "arn": "arn:${Partition}:ram::${Account}:permission/${ResourcePath}"
    },
    {
        "service": "AWS Resource Access Manager (RAM)",
        "resource": "customer-managed-permission",
        "prefix": "ram",
        "arn": "arn:${Partition}:ram:${Region}:${Account}:permission/${ResourcePath}"
    },
    {
        "service": "AWS Resource Explorer",
        "resource": "view",
        "prefix": "resource-explorer-2",
        "arn": "arn:${Partition}:resource-explorer-2:${Region}:${Account}:view/${ViewName}/${ViewUuid}"
    },
    {
        "service": "AWS Resource Explorer",
        "resource": "index",
        "prefix": "resource-explorer-2",
        "arn": "arn:${Partition}:resource-explorer-2:${Region}:${Account}:index/${IndexUuid}"
    },
    {
        "service": "AWS Resource Explorer",
        "resource": "managed-view",
        "prefix": "resource-explorer-2",
        "arn": "arn:${Partition}:resource-explorer-2:${Region}:${Account}:managed-view/${ManagedViewName}/${ManagedViewUuid}"
    },
    {
        "service": "AWS Resource Groups",
        "resource": "group",
        "prefix": "resource-groups",
        "arn": "arn:${Partition}:resource-groups:${Region}:${Account}:group/${GroupName}"
    },
    {
        "service": "AWS Resource Groups",
        "resource": "tagSyncTask",
        "prefix": "resource-groups",
        "arn": "arn:${Partition}:resource-groups:${Region}:${Account}:group/${GroupName}/tag-sync-task/${TaskId}"
    },
    {
        "service": "AWS RoboMaker",
        "resource": "robotApplication",
        "prefix": "robomaker",
        "arn": "arn:${Partition}:robomaker:${Region}:${Account}:robot-application/${ApplicationName}/${CreatedOnEpoch}"
    },
    {
        "service": "AWS RoboMaker",
        "resource": "simulationApplication",
        "prefix": "robomaker",
        "arn": "arn:${Partition}:robomaker:${Region}:${Account}:simulation-application/${ApplicationName}/${CreatedOnEpoch}"
    },
    {
        "service": "AWS RoboMaker",
        "resource": "simulationJob",
        "prefix": "robomaker",
        "arn": "arn:${Partition}:robomaker:${Region}:${Account}:simulation-job/${SimulationJobId}"
    },
    {
        "service": "AWS RoboMaker",
        "resource": "simulationJobBatch",
        "prefix": "robomaker",
        "arn": "arn:${Partition}:robomaker:${Region}:${Account}:simulation-job-batch/${SimulationJobBatchId}"
    },
    {
        "service": "AWS RoboMaker",
        "resource": "deploymentJob",
        "prefix": "robomaker",
        "arn": "arn:${Partition}:robomaker:${Region}:${Account}:deployment-job/${DeploymentJobId}"
    },
    {
        "service": "AWS RoboMaker",
        "resource": "robot",
        "prefix": "robomaker",
        "arn": "arn:${Partition}:robomaker:${Region}:${Account}:robot/${RobotName}/${CreatedOnEpoch}"
    },
    {
        "service": "AWS RoboMaker",
        "resource": "deploymentFleet",
        "prefix": "robomaker",
        "arn": "arn:${Partition}:robomaker:${Region}:${Account}:deployment-fleet/${FleetName}/${CreatedOnEpoch}"
    },
    {
        "service": "AWS RoboMaker",
        "resource": "worldGenerationJob",
        "prefix": "robomaker",
        "arn": "arn:${Partition}:robomaker:${Region}:${Account}:world-generation-job/${WorldGenerationJobId}"
    },
    {
        "service": "AWS RoboMaker",
        "resource": "worldExportJob",
        "prefix": "robomaker",
        "arn": "arn:${Partition}:robomaker:${Region}:${Account}:world-export-job/${WorldExportJobId}"
    },
    {
        "service": "AWS RoboMaker",
        "resource": "worldTemplate",
        "prefix": "robomaker",
        "arn": "arn:${Partition}:robomaker:${Region}:${Account}:world-template/${WorldTemplateJobId}"
    },
    {
        "service": "AWS RoboMaker",
        "resource": "world",
        "prefix": "robomaker",
        "arn": "arn:${Partition}:robomaker:${Region}:${Account}:world/${WorldId}"
    },
    {
        "service": "Amazon Route 53",
        "resource": "cidrcollection",
        "prefix": "route53",
        "arn": "arn:${Partition}:route53:::cidrcollection/${Id}"
    },
    {
        "service": "Amazon Route 53",
        "resource": "change",
        "prefix": "route53",
        "arn": "arn:${Partition}:route53:::change/${Id}"
    },
    {
        "service": "Amazon Route 53",
        "resource": "delegationset",
        "prefix": "route53",
        "arn": "arn:${Partition}:route53:::delegationset/${Id}"
    },
    {
        "service": "Amazon Route 53",
        "resource": "healthcheck",
        "prefix": "route53",
        "arn": "arn:${Partition}:route53:::healthcheck/${Id}"
    },
    {
        "service": "Amazon Route 53",
        "resource": "hostedzone",
        "prefix": "route53",
        "arn": "arn:${Partition}:route53:::hostedzone/${Id}"
    },
    {
        "service": "Amazon Route 53",
        "resource": "trafficpolicy",
        "prefix": "route53",
        "arn": "arn:${Partition}:route53:::trafficpolicy/${Id}"
    },
    {
        "service": "Amazon Route 53",
        "resource": "trafficpolicyinstance",
        "prefix": "route53",
        "arn": "arn:${Partition}:route53:::trafficpolicyinstance/${Id}"
    },
    {
        "service": "Amazon Route 53",
        "resource": "queryloggingconfig",
        "prefix": "route53",
        "arn": "arn:${Partition}:route53:::queryloggingconfig/${Id}"
    },
    {
        "service": "Amazon Route 53 Profiles",
        "resource": "profile",
        "prefix": "route53profiles",
        "arn": "arn:${Partition}:route53profiles:${Region}:${Account}:profile/${ResourceId}"
    },
    {
        "service": "Amazon Route 53 Profiles",
        "resource": "profile-association",
        "prefix": "route53profiles",
        "arn": "arn:${Partition}:route53profiles:${Region}:${Account}:profile-association/${ResourceId}"
    },
    {
        "service": "Amazon Route 53 Recovery Readiness",
        "resource": "readinesscheck",
        "prefix": "route53-recovery-readiness",
        "arn": "arn:${Partition}:route53-recovery-readiness::${Account}:readiness-check/${ResourceId}"
    },
    {
        "service": "Amazon Route 53 Recovery Readiness",
        "resource": "resourceset",
        "prefix": "route53-recovery-readiness",
        "arn": "arn:${Partition}:route53-recovery-readiness::${Account}:resource-set/${ResourceId}"
    },
    {
        "service": "Amazon Route 53 Recovery Readiness",
        "resource": "cell",
        "prefix": "route53-recovery-readiness",
        "arn": "arn:${Partition}:route53-recovery-readiness::${Account}:cell/${ResourceId}"
    },
    {
        "service": "Amazon Route 53 Recovery Readiness",
        "resource": "recoverygroup",
        "prefix": "route53-recovery-readiness",
        "arn": "arn:${Partition}:route53-recovery-readiness::${Account}:recovery-group/${ResourceId}"
    },
    {
        "service": "Amazon Route 53 Resolver",
        "resource": "resolver-dnssec-config",
        "prefix": "route53resolver",
        "arn": "arn:${Partition}:route53resolver:${Region}:${Account}:resolver-dnssec-config/${ResourceId}"
    },
    {
        "service": "Amazon Route 53 Resolver",
        "resource": "resolver-query-log-config",
        "prefix": "route53resolver",
        "arn": "arn:${Partition}:route53resolver:${Region}:${Account}:resolver-query-log-config/${ResourceId}"
    },
    {
        "service": "Amazon Route 53 Resolver",
        "resource": "resolver-rule",
        "prefix": "route53resolver",
        "arn": "arn:${Partition}:route53resolver:${Region}:${Account}:resolver-rule/${ResourceId}"
    },
    {
        "service": "Amazon Route 53 Resolver",
        "resource": "autodefined-rule",
        "prefix": "route53resolver",
        "arn": "arn:${Partition}:route53resolver:${Region}:${Account}:autodefined-rule/${ResourceId}"
    },
    {
        "service": "Amazon Route 53 Resolver",
        "resource": "resolver-endpoint",
        "prefix": "route53resolver",
        "arn": "arn:${Partition}:route53resolver:${Region}:${Account}:resolver-endpoint/${ResourceId}"
    },
    {
        "service": "Amazon Route 53 Resolver",
        "resource": "firewall-rule-group",
        "prefix": "route53resolver",
        "arn": "arn:${Partition}:route53resolver:${Region}:${Account}:firewall-rule-group/${ResourceId}"
    },
    {
        "service": "Amazon Route 53 Resolver",
        "resource": "firewall-rule-group-association",
        "prefix": "route53resolver",
        "arn": "arn:${Partition}:route53resolver:${Region}:${Account}:firewall-rule-group-association/${ResourceId}"
    },
    {
        "service": "Amazon Route 53 Resolver",
        "resource": "firewall-domain-list",
        "prefix": "route53resolver",
        "arn": "arn:${Partition}:route53resolver:${Region}:${Account}:firewall-domain-list/${ResourceId}"
    },
    {
        "service": "Amazon Route 53 Resolver",
        "resource": "firewall-config",
        "prefix": "route53resolver",
        "arn": "arn:${Partition}:route53resolver:${Region}:${Account}:firewall-config/${ResourceId}"
    },
    {
        "service": "Amazon Route 53 Resolver",
        "resource": "resolver-config",
        "prefix": "route53resolver",
        "arn": "arn:${Partition}:route53resolver:${Region}:${Account}:resolver-config/${ResourceId}"
    },
    {
        "service": "Amazon Route 53 Resolver",
        "resource": "outpost-resolver",
        "prefix": "route53resolver",
        "arn": "arn:${Partition}:route53resolver:${Region}:${Account}:outpost-resolver/${ResourceId}"
    },
    {
        "service": "Amazon S3",
        "resource": "accesspoint",
        "prefix": "s3",
        "arn": "arn:${Partition}:s3:${Region}:${Account}:accesspoint/${AccessPointName}"
    },
    {
        "service": "Amazon S3",
        "resource": "bucket",
        "prefix": "s3",
        "arn": "arn:${Partition}:s3:::${BucketName}"
    },
    {
        "service": "Amazon S3",
        "resource": "object",
        "prefix": "s3",
        "arn": "arn:${Partition}:s3:::${BucketName}/${ObjectName}"
    },
    {
        "service": "Amazon S3",
        "resource": "job",
        "prefix": "s3",
        "arn": "arn:${Partition}:s3:${Region}:${Account}:job/${JobId}"
    },
    {
        "service": "Amazon S3",
        "resource": "storagelensconfiguration",
        "prefix": "s3",
        "arn": "arn:${Partition}:s3:${Region}:${Account}:storage-lens/${ConfigId}"
    },
    {
        "service": "Amazon S3",
        "resource": "storagelensgroup",
        "prefix": "s3",
        "arn": "arn:${Partition}:s3:${Region}:${Account}:storage-lens-group/${Name}"
    },
    {
        "service": "Amazon S3",
        "resource": "objectlambdaaccesspoint",
        "prefix": "s3",
        "arn": "arn:${Partition}:s3-object-lambda:${Region}:${Account}:accesspoint/${AccessPointName}"
    },
    {
        "service": "Amazon S3",
        "resource": "multiregionaccesspoint",
        "prefix": "s3",
        "arn": "arn:${Partition}:s3::${Account}:accesspoint/${AccessPointAlias}"
    },
    {
        "service": "Amazon S3",
        "resource": "multiregionaccesspointrequestarn",
        "prefix": "s3",
        "arn": "arn:${Partition}:s3:us-west-2:${Account}:async-request/mrap/${Operation}/${Token}"
    },
    {
        "service": "Amazon S3",
        "resource": "accessgrantsinstance",
        "prefix": "s3",
        "arn": "arn:${Partition}:s3:${Region}:${Account}:access-grants/default"
    },
    {
        "service": "Amazon S3",
        "resource": "accessgrantslocation",
        "prefix": "s3",
        "arn": "arn:${Partition}:s3:${Region}:${Account}:access-grants/default/location/${Token}"
    },
    {
        "service": "Amazon S3",
        "resource": "accessgrant",
        "prefix": "s3",
        "arn": "arn:${Partition}:s3:${Region}:${Account}:access-grants/default/grant/${Token}"
    },
    {
        "service": "Amazon S3 Express",
        "resource": "bucket",
        "prefix": "s3express",
        "arn": "arn:${Partition}:s3express:${Region}:${Account}:bucket/${BucketName}"
    },
    {
        "service": "Amazon S3 Express",
        "resource": "accesspoint",
        "prefix": "s3express",
        "arn": "arn:${Partition}:s3express:${Region}:${Account}:accesspoint/${AccessPointName}"
    },
    {
        "service": "Amazon S3 Glacier",
        "resource": "vault",
        "prefix": "glacier",
        "arn": "arn:${Partition}:glacier:${Region}:${Account}:vaults/${VaultName}"
    },
    {
        "service": "Amazon S3 on Outposts",
        "resource": "accesspoint",
        "prefix": "s3-outposts",
        "arn": "arn:${Partition}:s3-outposts:${Region}:${Account}:outpost/${OutpostId}/accesspoint/${AccessPointName}"
    },
    {
        "service": "Amazon S3 on Outposts",
        "resource": "bucket",
        "prefix": "s3-outposts",
        "arn": "arn:${Partition}:s3-outposts:${Region}:${Account}:outpost/${OutpostId}/bucket/${BucketName}"
    },
    {
        "service": "Amazon S3 on Outposts",
        "resource": "endpoint",
        "prefix": "s3-outposts",
        "arn": "arn:${Partition}:s3-outposts:${Region}:${Account}:outpost/${OutpostId}/endpoint/${EndpointId}"
    },
    {
        "service": "Amazon S3 on Outposts",
        "resource": "object",
        "prefix": "s3-outposts",
        "arn": "arn:${Partition}:s3-outposts:${Region}:${Account}:outpost/${OutpostId}/bucket/${BucketName}/object/${ObjectName}"
    },
    {
        "service": "Amazon S3 Tables",
        "resource": "TableBucket",
        "prefix": "s3tables",
        "arn": "arn:${Partition}:s3tables:${Region}:${Account}:bucket/${TableBucketName}"
    },
    {
        "service": "Amazon S3 Tables",
        "resource": "Table",
        "prefix": "s3tables",
        "arn": "arn:${Partition}:s3tables:${Region}:${Account}:bucket/${TableBucketName}/table/${TableID}"
    },
    {
        "service": "Amazon SageMaker",
        "resource": "device",
        "prefix": "sagemaker",
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:device-fleet/${DeviceFleetName}/device/${DeviceName}"
    },
    {
        "service": "Amazon SageMaker",
        "resource": "device-fleet",
        "prefix": "sagemaker",
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:device-fleet/${DeviceFleetName}"
    },
    {
        "service": "Amazon SageMaker",
        "resource": "edge-packaging-job",
        "prefix": "sagemaker",
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:edge-packaging-job/${EdgePackagingJobName}"
    },
    {
        "service": "Amazon SageMaker",
        "resource": "edge-deployment-plan",
        "prefix": "sagemaker",
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:edge-deployment/${EdgeDeploymentPlanName}"
    },
    {
        "service": "Amazon SageMaker",
        "resource": "human-loop",
        "prefix": "sagemaker",
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:human-loop/${HumanLoopName}"
    },
    {
        "service": "Amazon SageMaker",
        "resource": "flow-definition",
        "prefix": "sagemaker",
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:flow-definition/${FlowDefinitionName}"
    },
    {
        "service": "Amazon SageMaker",
        "resource": "human-task-ui",
        "prefix": "sagemaker",
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:human-task-ui/${HumanTaskUiName}"
    },
    {
        "service": "Amazon SageMaker",
        "resource": "hub",
        "prefix": "sagemaker",
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:hub/${HubName}"
    },
    {
        "service": "Amazon SageMaker",
        "resource": "hub-content",
        "prefix": "sagemaker",
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:hub-content/${HubName}/${HubContentType}/${HubContentName}"
    },
    {
        "service": "Amazon SageMaker",
        "resource": "inference-recommendations-job",
        "prefix": "sagemaker",
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:inference-recommendations-job/${InferenceRecommendationsJobName}"
    },
    {
        "service": "Amazon SageMaker",
        "resource": "inference-experiment",
        "prefix": "sagemaker",
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:inference-experiment/${InferenceExperimentName}"
    },
    {
        "service": "Amazon SageMaker",
        "resource": "labeling-job",
        "prefix": "sagemaker",
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:labeling-job/${LabelingJobName}"
    },
    {
        "service": "Amazon SageMaker",
        "resource": "workteam",
        "prefix": "sagemaker",
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:workteam/${WorkteamName}"
    },
    {
        "service": "Amazon SageMaker",
        "resource": "workforce",
        "prefix": "sagemaker",
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:workforce/${WorkforceName}"
    },
    {
        "service": "Amazon SageMaker",
        "resource": "domain",
        "prefix": "sagemaker",
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:domain/${DomainId}"
    },
    {
        "service": "Amazon SageMaker",
        "resource": "user-profile",
        "prefix": "sagemaker",
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:user-profile/${DomainId}/${UserProfileName}"
    },
    {
        "service": "Amazon SageMaker",
        "resource": "space",
        "prefix": "sagemaker",
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:space/${DomainId}/${SpaceName}"
    },
    {
        "service": "Amazon SageMaker",
        "resource": "app",
        "prefix": "sagemaker",
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:app/${DomainId}/${UserProfileName}/${AppType}/${AppName}"
    },
    {
        "service": "Amazon SageMaker",
        "resource": "app-image-config",
        "prefix": "sagemaker",
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:app-image-config/${AppImageConfigName}"
    },
    {
        "service": "Amazon SageMaker",
        "resource": "studio-lifecycle-config",
        "prefix": "sagemaker",
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:studio-lifecycle-config/${StudioLifecycleConfigName}"
    },
    {
        "service": "Amazon SageMaker",
        "resource": "notebook-instance",
        "prefix": "sagemaker",
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:notebook-instance/${NotebookInstanceName}"
    },
    {
        "service": "Amazon SageMaker",
        "resource": "notebook-instance-lifecycle-config",
        "prefix": "sagemaker",
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:notebook-instance-lifecycle-config/${NotebookInstanceLifecycleConfigName}"
    },
    {
        "service": "Amazon SageMaker",
        "resource": "code-repository",
        "prefix": "sagemaker",
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:code-repository/${CodeRepositoryName}"
    },
    {
        "service": "Amazon SageMaker",
        "resource": "image",
        "prefix": "sagemaker",
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:image/${ImageName}"
    },
    {
        "service": "Amazon SageMaker",
        "resource": "image-version",
        "prefix": "sagemaker",
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:image-version/${ImageName}/${Version}"
    },
    {
        "service": "Amazon SageMaker",
        "resource": "algorithm",
        "prefix": "sagemaker",
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:algorithm/${AlgorithmName}"
    },
    {
        "service": "Amazon SageMaker",
        "resource": "cluster",
        "prefix": "sagemaker",
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:cluster/${ClusterId}"
    },
    {
        "service": "Amazon SageMaker",
        "resource": "training-job",
        "prefix": "sagemaker",
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:training-job/${TrainingJobName}"
    },
    {
        "service": "Amazon SageMaker",
        "resource": "processing-job",
        "prefix": "sagemaker",
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:processing-job/${ProcessingJobName}"
    },
    {
        "service": "Amazon SageMaker",
        "resource": "hyper-parameter-tuning-job",
        "prefix": "sagemaker",
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:hyper-parameter-tuning-job/${HyperParameterTuningJobName}"
    },
    {
        "service": "Amazon SageMaker",
        "resource": "training-plan",
        "prefix": "sagemaker",
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:training-plan/${TrainingPlanName}"
    },
    {
        "service": "Amazon SageMaker",
        "resource": "reserved-capacity",
        "prefix": "sagemaker",
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:reserved-capacity/${RandomString}"
    },
    {
        "service": "Amazon SageMaker",
        "resource": "project",
        "prefix": "sagemaker",
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:project/${ProjectName}"
    },
    {
        "service": "Amazon SageMaker",
        "resource": "model-package",
        "prefix": "sagemaker",
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:model-package/${ModelPackageName}"
    },
    {
        "service": "Amazon SageMaker",
        "resource": "model-package-group",
        "prefix": "sagemaker",
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:model-package-group/${ModelPackageGroupName}"
    },
    {
        "service": "Amazon SageMaker",
        "resource": "model",
        "prefix": "sagemaker",
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:model/${ModelName}"
    },
    {
        "service": "Amazon SageMaker",
        "resource": "endpoint-config",
        "prefix": "sagemaker",
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:endpoint-config/${EndpointConfigName}"
    },
    {
        "service": "Amazon SageMaker",
        "resource": "endpoint",
        "prefix": "sagemaker",
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:endpoint/${EndpointName}"
    },
    {
        "service": "Amazon SageMaker",
        "resource": "inference-component",
        "prefix": "sagemaker",
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:inference-component/${InferenceComponentName}"
    },
    {
        "service": "Amazon SageMaker",
        "resource": "transform-job",
        "prefix": "sagemaker",
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:transform-job/${TransformJobName}"
    },
    {
        "service": "Amazon SageMaker",
        "resource": "compilation-job",
        "prefix": "sagemaker",
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:compilation-job/${CompilationJobName}"
    },
    {
        "service": "Amazon SageMaker",
        "resource": "optimization-job",
        "prefix": "sagemaker",
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:optimization-job/${OptimizationJobName}"
    },
    {
        "service": "Amazon SageMaker",
        "resource": "automl-job",
        "prefix": "sagemaker",
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:automl-job/${AutoMLJobJobName}"
    },
    {
        "service": "Amazon SageMaker",
        "resource": "monitoring-schedule",
        "prefix": "sagemaker",
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:monitoring-schedule/${MonitoringScheduleName}"
    },
    {
        "service": "Amazon SageMaker",
        "resource": "monitoring-schedule-alert",
        "prefix": "sagemaker",
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:monitoring-schedule/${MonitoringScheduleName}/alert/${MonitoringScheduleAlertName}"
    },
    {
        "service": "Amazon SageMaker",
        "resource": "data-quality-job-definition",
        "prefix": "sagemaker",
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:data-quality-job-definition/${DataQualityJobDefinitionName}"
    },
    {
        "service": "Amazon SageMaker",
        "resource": "model-quality-job-definition",
        "prefix": "sagemaker",
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:model-quality-job-definition/${ModelQualityJobDefinitionName}"
    },
    {
        "service": "Amazon SageMaker",
        "resource": "model-bias-job-definition",
        "prefix": "sagemaker",
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:model-bias-job-definition/${ModelBiasJobDefinitionName}"
    },
    {
        "service": "Amazon SageMaker",
        "resource": "model-explainability-job-definition",
        "prefix": "sagemaker",
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:model-explainability-job-definition/${ModelExplainabilityJobDefinitionName}"
    },
    {
        "service": "Amazon SageMaker",
        "resource": "experiment",
        "prefix": "sagemaker",
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:experiment/${ExperimentName}"
    },
    {
        "service": "Amazon SageMaker",
        "resource": "experiment-trial",
        "prefix": "sagemaker",
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:experiment-trial/${TrialName}"
    },
    {
        "service": "Amazon SageMaker",
        "resource": "experiment-trial-component",
        "prefix": "sagemaker",
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:experiment-trial-component/${TrialComponentName}"
    },
    {
        "service": "Amazon SageMaker",
        "resource": "feature-group",
        "prefix": "sagemaker",
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:feature-group/${FeatureGroupName}"
    },
    {
        "service": "Amazon SageMaker",
        "resource": "pipeline",
        "prefix": "sagemaker",
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:pipeline/${PipelineName}"
    },
    {
        "service": "Amazon SageMaker",
        "resource": "pipeline-execution",
        "prefix": "sagemaker",
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:pipeline/${PipelineName}/execution/${RandomString}"
    },
    {
        "service": "Amazon SageMaker",
        "resource": "artifact",
        "prefix": "sagemaker",
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:artifact/${HashOfArtifactSource}"
    },
    {
        "service": "Amazon SageMaker",
        "resource": "context",
        "prefix": "sagemaker",
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:context/${ContextName}"
    },
    {
        "service": "Amazon SageMaker",
        "resource": "action",
        "prefix": "sagemaker",
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:action/${ActionName}"
    },
    {
        "service": "Amazon SageMaker",
        "resource": "lineage-group",
        "prefix": "sagemaker",
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:lineage-group/${LineageGroupName}"
    },
    {
        "service": "Amazon SageMaker",
        "resource": "model-card",
        "prefix": "sagemaker",
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:model-card/${ModelCardName}"
    },
    {
        "service": "Amazon SageMaker",
        "resource": "model-card-export-job",
        "prefix": "sagemaker",
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:model-card/${ModelCardName}/export-job/${ExportJobName}"
    },
    {
        "service": "Amazon SageMaker",
        "resource": "shared-model",
        "prefix": "sagemaker",
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:shared-model/${SharedModelId}"
    },
    {
        "service": "Amazon SageMaker",
        "resource": "shared-model-event",
        "prefix": "sagemaker",
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:shared-model-event/${EventId}"
    },
    {
        "service": "Amazon SageMaker",
        "resource": "sagemaker-catalog",
        "prefix": "sagemaker",
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:sagemaker-catalog/${ResourceCatalogName}"
    },
    {
        "service": "Amazon SageMaker",
        "resource": "mlflow-tracking-server",
        "prefix": "sagemaker",
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:mlflow-tracking-server/${MlflowTrackingServerName}"
    },
    {
        "service": "Amazon SageMaker",
        "resource": "compute-quota",
        "prefix": "sagemaker",
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:compute-quota/${ComputeQuotaId}"
    },
    {
        "service": "Amazon SageMaker",
        "resource": "cluster-scheduler-config",
        "prefix": "sagemaker",
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:cluster-scheduler-config/${ClusterSchedulerConfigId}"
    },
    {
        "service": "Amazon SageMaker",
        "resource": "partner-app",
        "prefix": "sagemaker",
        "arn": "arn:${Partition}:sagemaker:${Region}:${Account}:partner-app/${AppId}"
    },
    {
        "service": "Amazon SageMaker geospatial capabilities",
        "resource": "EarthObservationJob",
        "prefix": "sagemaker-geospatial",
        "arn": "arn:${Partition}:sagemaker-geospatial:${Region}:${Account}:earth-observation-job/${JobID}"
    },
    {
        "service": "Amazon SageMaker geospatial capabilities",
        "resource": "RasterDataCollection",
        "prefix": "sagemaker-geospatial",
        "arn": "arn:${Partition}:sagemaker-geospatial:${Region}:${Account}:raster-data-collection/${CollectionID}"
    },
    {
        "service": "Amazon SageMaker geospatial capabilities",
        "resource": "VectorEnrichmentJob",
        "prefix": "sagemaker-geospatial",
        "arn": "arn:${Partition}:sagemaker-geospatial:${Region}:${Account}:vector-enrichment-job/${JobID}"
    },
    {
        "service": "AWS Savings Plans",
        "resource": "savingsplan",
        "prefix": "savingsplans",
        "arn": "arn:${Partition}:savingsplans::${Account}:savingsplan/${ResourceId}"
    },
    {
        "service": "AWS Secrets Manager",
        "resource": "Secret",
        "prefix": "secretsmanager",
        "arn": "arn:${Partition}:secretsmanager:${Region}:${Account}:secret:${SecretId}"
    },
    {
        "service": "AWS Security Hub",
        "resource": "hub",
        "prefix": "securityhub",
        "arn": "arn:${Partition}:securityhub:${Region}:${Account}:hub/default"
    },
    {
        "service": "AWS Security Hub",
        "resource": "product",
        "prefix": "securityhub",
        "arn": "arn:${Partition}:securityhub:${Region}:${Account}:product/${Company}/${ProductId}"
    },
    {
        "service": "AWS Security Hub",
        "resource": "finding-aggregator",
        "prefix": "securityhub",
        "arn": "arn:${Partition}:securityhub:${Region}:${Account}:finding-aggregator/${FindingAggregatorId}"
    },
    {
        "service": "AWS Security Hub",
        "resource": "automation-rule",
        "prefix": "securityhub",
        "arn": "arn:${Partition}:securityhub:${Region}:${Account}:automation-rule/${AutomationRuleId}"
    },
    {
        "service": "AWS Security Hub",
        "resource": "configuration-policy",
        "prefix": "securityhub",
        "arn": "arn:${Partition}:securityhub:${Region}:${Account}:configuration-policy/${ConfigurationPolicyId}"
    },
    {
        "service": "AWS Security Incident Response",
        "resource": "case",
        "prefix": "security-ir",
        "arn": "arn:${Partition}:security-ir:${Region}:${Account}:case/${CaseId}"
    },
    {
        "service": "AWS Security Incident Response",
        "resource": "membership",
        "prefix": "security-ir",
        "arn": "arn:${Partition}:security-ir:${Region}:${Account}:membership/${MembershipId}"
    },
    {
        "service": "Amazon Security Lake",
        "resource": "data-lake",
        "prefix": "securitylake",
        "arn": "arn:${Partition}:securitylake:${Region}:${Account}:data-lake/default"
    },
    {
        "service": "Amazon Security Lake",
        "resource": "subscriber",
        "prefix": "securitylake",
        "arn": "arn:${Partition}:securitylake:${Region}:${Account}:subscriber/${SubscriberId}"
    },
    {
        "service": "AWS Security Token Service",
        "resource": "self-session",
        "prefix": "sts",
        "arn": "arn:${Partition}:sts::${Account}:self"
    },
    {
        "service": "AWS Serverless Application Repository",
        "resource": "applications",
        "prefix": "serverlessrepo",
        "arn": "arn:${Partition}:serverlessrepo:${Region}:${Account}:applications/${ResourceId}"
    },
    {
        "service": "AWS Service Catalog",
        "resource": "Application",
        "prefix": "servicecatalog",
        "arn": "arn:${Partition}:servicecatalog:${Region}:${Account}:/applications/${ApplicationId}"
    },
    {
        "service": "AWS Service Catalog",
        "resource": "AttributeGroup",
        "prefix": "servicecatalog",
        "arn": "arn:${Partition}:servicecatalog:${Region}:${Account}:/attribute-groups/${AttributeGroupId}"
    },
    {
        "service": "AWS service providing managed private networks",
        "resource": "network",
        "prefix": "private-networks",
        "arn": "arn:${Partition}:private-networks:${Region}:${Account}:network/${NetworkName}"
    },
    {
        "service": "AWS service providing managed private networks",
        "resource": "network-site",
        "prefix": "private-networks",
        "arn": "arn:${Partition}:private-networks:${Region}:${Account}:network-site/${NetworkName}/${NetworkSiteName}"
    },
    {
        "service": "AWS service providing managed private networks",
        "resource": "network-resource",
        "prefix": "private-networks",
        "arn": "arn:${Partition}:private-networks:${Region}:${Account}:network-resource/${NetworkName}/${ResourceId}"
    },
    {
        "service": "AWS service providing managed private networks",
        "resource": "order",
        "prefix": "private-networks",
        "arn": "arn:${Partition}:private-networks:${Region}:${Account}:order/${NetworkName}/${OrderId}"
    },
    {
        "service": "AWS service providing managed private networks",
        "resource": "device-identifier",
        "prefix": "private-networks",
        "arn": "arn:${Partition}:private-networks:${Region}:${Account}:device-identifier/${NetworkName}/${DeviceId}"
    },
    {
        "service": "Service Quotas",
        "resource": "quota",
        "prefix": "servicequotas",
        "arn": "arn:${Partition}:servicequotas:${Region}:${Account}:${ServiceCode}/${QuotaCode}"
    },
    {
        "service": "Amazon SES",
        "resource": "custom-verification-email-template",
        "prefix": "ses",
        "arn": "arn:${Partition}:ses:${Region}:${Account}:custom-verification-email-template/${TemplateName}"
    },
    {
        "service": "Amazon SES",
        "resource": "template",
        "prefix": "ses",
        "arn": "arn:${Partition}:ses:${Region}:${Account}:template/${TemplateName}"
    },
    {
        "service": "AWS Shield",
        "resource": "attack",
        "prefix": "shield",
        "arn": "arn:${Partition}:shield::${Account}:attack/${Id}"
    },
    {
        "service": "AWS Shield",
        "resource": "protection",
        "prefix": "shield",
        "arn": "arn:${Partition}:shield::${Account}:protection/${Id}"
    },
    {
        "service": "AWS Shield",
        "resource": "protection-group",
        "prefix": "shield",
        "arn": "arn:${Partition}:shield::${Account}:protection-group/${Id}"
    },
    {
        "service": "AWS Signer",
        "resource": "signing-profile",
        "prefix": "signer",
        "arn": "arn:${Partition}:signer:${Region}:${Account}:/signing-profiles/${ProfileName}"
    },
    {
        "service": "AWS Signer",
        "resource": "signing-job",
        "prefix": "signer",
        "arn": "arn:${Partition}:signer:${Region}:${Account}:/signing-jobs/${JobId}"
    },
    {
        "service": "Amazon Simple Email Service - Mail Manager",
        "resource": "addon-instance",
        "prefix": "ses",
        "arn": "arn:${Partition}:ses:${Region}:${Account}:addon-instance/${AddonInstanceId}"
    },
    {
        "service": "Amazon Simple Email Service - Mail Manager",
        "resource": "addon-subscription",
        "prefix": "ses",
        "arn": "arn:${Partition}:ses:${Region}:${Account}:addon-subscription/${AddonSubscriptionId}"
    },
    {
        "service": "Amazon Simple Email Service - Mail Manager",
        "resource": "mailmanager-archive",
        "prefix": "ses",
        "arn": "arn:${Partition}:ses:${Region}:${Account}:mailmanager-archive/${ArchiveId}"
    },
    {
        "service": "Amazon Simple Email Service - Mail Manager",
        "resource": "mailmanager-ingress-point",
        "prefix": "ses",
        "arn": "arn:${Partition}:ses:${Region}:${Account}:mailmanager-ingress-point/${IngressPointId}"
    },
    {
        "service": "Amazon Simple Email Service - Mail Manager",
        "resource": "mailmanager-smtp-relay",
        "prefix": "ses",
        "arn": "arn:${Partition}:ses:${Region}:${Account}:mailmanager-smtp-relay/${RelayId}"
    },
    {
        "service": "Amazon Simple Email Service - Mail Manager",
        "resource": "mailmanager-rule-set",
        "prefix": "ses",
        "arn": "arn:${Partition}:ses:${Region}:${Account}:mailmanager-rule-set/${RuleSetId}"
    },
    {
        "service": "Amazon Simple Email Service - Mail Manager",
        "resource": "mailmanager-traffic-policy",
        "prefix": "ses",
        "arn": "arn:${Partition}:ses:${Region}:${Account}:mailmanager-traffic-policy/${TrafficPolicyId}"
    },
    {
        "service": "Amazon Simple Email Service - Mail Manager",
        "resource": "mailmanager-address-list",
        "prefix": "ses",
        "arn": "arn:${Partition}:ses:${Region}:${Account}:mailmanager-address-list/${AddressListId}"
    },
    {
        "service": "Amazon Simple Email Service v2",
        "resource": "contact-list",
        "prefix": "ses",
        "arn": "arn:${Partition}:ses:${Region}:${Account}:contact-list/${ContactListName}"
    },
    {
        "service": "Amazon Simple Email Service v2",
        "resource": "export-job",
        "prefix": "ses",
        "arn": "arn:${Partition}:ses:${Region}:${Account}:export-job/${ExportJobId}"
    },
    {
        "service": "Amazon Simple Email Service v2",
        "resource": "import-job",
        "prefix": "ses",
        "arn": "arn:${Partition}:ses:${Region}:${Account}:import-job/${ImportJobId}"
    },
    {
        "service": "Amazon Simple Email Service v2",
        "resource": "multi-region-endpoint",
        "prefix": "ses",
        "arn": "arn:${Partition}:ses:${Region}:${Account}:multi-region-endpoint/${EndpointName}"
    },
    {
        "service": "Amazon Simple Workflow Service",
        "resource": "domain",
        "prefix": "swf",
        "arn": "arn:${Partition}:swf::${Account}:/domain/${DomainName}"
    },
    {
        "service": "Amazon SimpleDB",
        "resource": "domain",
        "prefix": "sdb",
        "arn": "arn:${Partition}:sdb:${Region}:${Account}:domain/${DomainName}"
    },
    {
        "service": "AWS SimSpace Weaver",
        "resource": "Simulation",
        "prefix": "simspaceweaver",
        "arn": "arn:${Partition}:simspaceweaver:${Region}:${Account}:simulation/${SimulationName}"
    },
    {
        "service": "AWS Snow Device Management",
        "resource": "managed-device",
        "prefix": "snow-device-management",
        "arn": "arn:${Partition}:snow-device-management:${Region}:${Account}:managed-device/${ResourceId}"
    },
    {
        "service": "AWS Snow Device Management",
        "resource": "task",
        "prefix": "snow-device-management",
        "arn": "arn:${Partition}:snow-device-management:${Region}:${Account}:task/${ResourceId}"
    },
    {
        "service": "Amazon SNS",
        "resource": "topic",
        "prefix": "sns",
        "arn": "arn:${Partition}:sns:${Region}:${Account}:${TopicName}"
    },
    {
        "service": "AWS SQL Workbench",
        "resource": "connection",
        "prefix": "sqlworkbench",
        "arn": "arn:${Partition}:sqlworkbench:${Region}:${Account}:connection/${ResourceId}"
    },
    {
        "service": "AWS SQL Workbench",
        "resource": "query",
        "prefix": "sqlworkbench",
        "arn": "arn:${Partition}:sqlworkbench:${Region}:${Account}:query/${ResourceId}"
    },
    {
        "service": "AWS SQL Workbench",
        "resource": "chart",
        "prefix": "sqlworkbench",
        "arn": "arn:${Partition}:sqlworkbench:${Region}:${Account}:chart/${ResourceId}"
    },
    {
        "service": "AWS SQL Workbench",
        "resource": "notebook",
        "prefix": "sqlworkbench",
        "arn": "arn:${Partition}:sqlworkbench:${Region}:${Account}:notebook/${ResourceId}"
    },
    {
        "service": "Amazon SQS",
        "resource": "queue",
        "prefix": "sqs",
        "arn": "arn:${Partition}:sqs:${Region}:${Account}:${QueueName}"
    },
    {
        "service": "AWS Step Functions",
        "resource": "activity",
        "prefix": "states",
        "arn": "arn:${Partition}:states:${Region}:${Account}:activity:${ActivityName}"
    },
    {
        "service": "AWS Step Functions",
        "resource": "execution",
        "prefix": "states",
        "arn": "arn:${Partition}:states:${Region}:${Account}:execution:${StateMachineName}:${ExecutionId}"
    },
    {
        "service": "AWS Step Functions",
        "resource": "express",
        "prefix": "states",
        "arn": "arn:${Partition}:states:${Region}:${Account}:express:${StateMachineName}:${ExecutionId}:${ExpressId}"
    },
    {
        "service": "AWS Step Functions",
        "resource": "statemachine",
        "prefix": "states",
        "arn": "arn:${Partition}:states:${Region}:${Account}:stateMachine:${StateMachineName}"
    },
    {
        "service": "AWS Step Functions",
        "resource": "statemachineversion",
        "prefix": "states",
        "arn": "arn:${Partition}:states:${Region}:${Account}:stateMachine:${StateMachineName}:${StateMachineVersionId}"
    },
    {
        "service": "AWS Step Functions",
        "resource": "statemachinealias",
        "prefix": "states",
        "arn": "arn:${Partition}:states:${Region}:${Account}:stateMachine:${StateMachineName}:${StateMachineAliasName}"
    },
    {
        "service": "AWS Step Functions",
        "resource": "maprun",
        "prefix": "states",
        "arn": "arn:${Partition}:states:${Region}:${Account}:mapRun:${StateMachineName}/${MapRunLabel}:${MapRunId}"
    },
    {
        "service": "AWS Step Functions",
        "resource": "labelled execution",
        "prefix": "states",
        "arn": "arn:${Partition}:states:${Region}:${Account}:execution:${StateMachineName}/${MapRunLabel}:${ExecutionId}"
    },
    {
        "service": "AWS Step Functions",
        "resource": "labelled express",
        "prefix": "states",
        "arn": "arn:${Partition}:states:${Region}:${Account}:express:${StateMachineName}/${MapRunLabel}:${ExecutionId}:${ExpressId}"
    },
    {
        "service": "AWS Storage Gateway",
        "resource": "cache-report",
        "prefix": "storagegateway",
        "arn": "arn:${Partition}:storagegateway:${Region}:${Account}:share/${ShareId}/cache-report/${CacheReportId}"
    },
    {
        "service": "AWS Storage Gateway",
        "resource": "device",
        "prefix": "storagegateway",
        "arn": "arn:${Partition}:storagegateway:${Region}:${Account}:gateway/${GatewayId}/device/${Vtldevice}"
    },
    {
        "service": "AWS Storage Gateway",
        "resource": "fs-association",
        "prefix": "storagegateway",
        "arn": "arn:${Partition}:storagegateway:${Region}:${Account}:fs-association/${FsaId}"
    },
    {
        "service": "AWS Storage Gateway",
        "resource": "gateway",
        "prefix": "storagegateway",
        "arn": "arn:${Partition}:storagegateway:${Region}:${Account}:gateway/${GatewayId}"
    },
    {
        "service": "AWS Storage Gateway",
        "resource": "share",
        "prefix": "storagegateway",
        "arn": "arn:${Partition}:storagegateway:${Region}:${Account}:share/${ShareId}"
    },
    {
        "service": "AWS Storage Gateway",
        "resource": "tape",
        "prefix": "storagegateway",
        "arn": "arn:${Partition}:storagegateway:${Region}:${Account}:tape/${TapeBarcode}"
    },
    {
        "service": "AWS Storage Gateway",
        "resource": "tapepool",
        "prefix": "storagegateway",
        "arn": "arn:${Partition}:storagegateway:${Region}:${Account}:tapepool/${PoolId}"
    },
    {
        "service": "AWS Storage Gateway",
        "resource": "target",
        "prefix": "storagegateway",
        "arn": "arn:${Partition}:storagegateway:${Region}:${Account}:gateway/${GatewayId}/target/${IscsiTarget}"
    },
    {
        "service": "AWS Storage Gateway",
        "resource": "volume",
        "prefix": "storagegateway",
        "arn": "arn:${Partition}:storagegateway:${Region}:${Account}:gateway/${GatewayId}/volume/${VolumeId}"
    },
    {
        "service": "AWS Supply Chain",
        "resource": "instance",
        "prefix": "scn",
        "arn": "arn:${Partition}:scn:${Region}:${Account}:instance/${InstanceId}"
    },
    {
        "service": "AWS Supply Chain",
        "resource": "bill-of-materials-import-job",
        "prefix": "scn",
        "arn": "arn:${Partition}:scn:${Region}:${Account}:instance/${InstanceId}/bill-of-materials-import-job/${JobId}"
    },
    {
        "service": "AWS Supply Chain",
        "resource": "data-integration-flow",
        "prefix": "scn",
        "arn": "arn:${Partition}:scn:${Region}:${Account}:instance/${InstanceId}/data-integration-flows/${FlowName}"
    },
    {
        "service": "AWS Supply Chain",
        "resource": "namespace",
        "prefix": "scn",
        "arn": "arn:${Partition}:scn:${Region}:${Account}:instance/${InstanceId}/namespaces/${Namespace}"
    },
    {
        "service": "AWS Supply Chain",
        "resource": "dataset",
        "prefix": "scn",
        "arn": "arn:${Partition}:scn:${Region}:${Account}:instance/${InstanceId}/namespaces/${Namespace}/datasets/${DatasetName}"
    },
    {
        "service": "AWS Systems Manager",
        "resource": "association",
        "prefix": "ssm",
        "arn": "arn:${Partition}:ssm:${Region}:${Account}:association/${AssociationId}"
    },
    {
        "service": "AWS Systems Manager",
        "resource": "automation-execution",
        "prefix": "ssm",
        "arn": "arn:${Partition}:ssm:${Region}:${Account}:automation-execution/${AutomationExecutionId}"
    },
    {
        "service": "AWS Systems Manager",
        "resource": "automation-definition",
        "prefix": "ssm",
        "arn": "arn:${Partition}:ssm:${Region}:${Account}:automation-definition/${AutomationDefinitionName}:${VersionId}"
    },
    {
        "service": "AWS Systems Manager",
        "resource": "document",
        "prefix": "ssm",
        "arn": "arn:${Partition}:ssm:${Region}:${Account}:document/${DocumentName}"
    },
    {
        "service": "AWS Systems Manager",
        "resource": "maintenancewindow",
        "prefix": "ssm",
        "arn": "arn:${Partition}:ssm:${Region}:${Account}:maintenancewindow/${ResourceId}"
    },
    {
        "service": "AWS Systems Manager",
        "resource": "managed-instance",
        "prefix": "ssm",
        "arn": "arn:${Partition}:ssm:${Region}:${Account}:managed-instance/${InstanceId}"
    },
    {
        "service": "AWS Systems Manager",
        "resource": "managed-instance-inventory",
        "prefix": "ssm",
        "arn": "arn:${Partition}:ssm:${Region}:${Account}:managed-instance-inventory/${InstanceId}"
    },
    {
        "service": "AWS Systems Manager",
        "resource": "opsitem",
        "prefix": "ssm",
        "arn": "arn:${Partition}:ssm:${Region}:${Account}:opsitem/${ResourceId}"
    },
    {
        "service": "AWS Systems Manager",
        "resource": "opsitemgroup",
        "prefix": "ssm",
        "arn": "arn:${Partition}:ssm:${Region}:${Account}:opsitemgroup/default"
    },
    {
        "service": "AWS Systems Manager",
        "resource": "opsmetadata",
        "prefix": "ssm",
        "arn": "arn:${Partition}:ssm:${Region}:${Account}:opsmetadata/${ResourceId}"
    },
    {
        "service": "AWS Systems Manager",
        "resource": "parameter",
        "prefix": "ssm",
        "arn": "arn:${Partition}:ssm:${Region}:${Account}:parameter/${ParameterNameWithoutLeadingSlash}"
    },
    {
        "service": "AWS Systems Manager",
        "resource": "patchbaseline",
        "prefix": "ssm",
        "arn": "arn:${Partition}:ssm:${Region}:${Account}:patchbaseline/${PatchBaselineIdResourceId}"
    },
    {
        "service": "AWS Systems Manager",
        "resource": "session",
        "prefix": "ssm",
        "arn": "arn:${Partition}:ssm:${Region}:${Account}:session/${SessionId}"
    },
    {
        "service": "AWS Systems Manager",
        "resource": "resourcedatasync",
        "prefix": "ssm",
        "arn": "arn:${Partition}:ssm:${Region}:${Account}:resource-data-sync/${SyncName}"
    },
    {
        "service": "AWS Systems Manager",
        "resource": "servicesetting",
        "prefix": "ssm",
        "arn": "arn:${Partition}:ssm:${Region}:${Account}:servicesetting/${ResourceId}"
    },
    {
        "service": "AWS Systems Manager",
        "resource": "windowtarget",
        "prefix": "ssm",
        "arn": "arn:${Partition}:ssm:${Region}:${Account}:windowtarget/${WindowTargetId}"
    },
    {
        "service": "AWS Systems Manager",
        "resource": "windowtask",
        "prefix": "ssm",
        "arn": "arn:${Partition}:ssm:${Region}:${Account}:windowtask/${WindowTaskId}"
    },
    {
        "service": "AWS Systems Manager for SAP",
        "resource": "application",
        "prefix": "ssm-sap",
        "arn": "arn:${Partition}:ssm-sap:${Region}:${Account}:${ApplicationType}/${ApplicationId}"
    },
    {
        "service": "AWS Systems Manager for SAP",
        "resource": "component",
        "prefix": "ssm-sap",
        "arn": "arn:${Partition}:ssm-sap:${Region}:${Account}:${ApplicationType}/${ApplicationId}/COMPONENT/${ComponentId}"
    },
    {
        "service": "AWS Systems Manager for SAP",
        "resource": "database",
        "prefix": "ssm-sap",
        "arn": "arn:${Partition}:ssm-sap:${Region}:${Account}:${ApplicationType}/${ApplicationId}/DB/${DatabaseId}"
    },
    {
        "service": "AWS Systems Manager Incident Manager",
        "resource": "response-plan",
        "prefix": "ssm-incidents",
        "arn": "arn:${Partition}:ssm-incidents::${Account}:response-plan/${ResponsePlan}"
    },
    {
        "service": "AWS Systems Manager Incident Manager",
        "resource": "incident-record",
        "prefix": "ssm-incidents",
        "arn": "arn:${Partition}:ssm-incidents::${Account}:incident-record/${ResponsePlan}/${IncidentRecord}"
    },
    {
        "service": "AWS Systems Manager Incident Manager",
        "resource": "replication-set",
        "prefix": "ssm-incidents",
        "arn": "arn:${Partition}:ssm-incidents::${Account}:replication-set/${ReplicationSet}"
    },
    {
        "service": "AWS Systems Manager Incident Manager Contacts",
        "resource": "contact",
        "prefix": "ssm-contacts",
        "arn": "arn:${Partition}:ssm-contacts:${Region}:${Account}:contact/${ContactAlias}"
    },
    {
        "service": "AWS Systems Manager Incident Manager Contacts",
        "resource": "contactchannel",
        "prefix": "ssm-contacts",
        "arn": "arn:${Partition}:ssm-contacts:${Region}:${Account}:contactchannel/${ContactAlias}/${ContactChannelId}"
    },
    {
        "service": "AWS Systems Manager Incident Manager Contacts",
        "resource": "engagement",
        "prefix": "ssm-contacts",
        "arn": "arn:${Partition}:ssm-contacts:${Region}:${Account}:engagement/${ContactAlias}/${EngagementId}"
    },
    {
        "service": "AWS Systems Manager Incident Manager Contacts",
        "resource": "page",
        "prefix": "ssm-contacts",
        "arn": "arn:${Partition}:ssm-contacts:${Region}:${Account}:page/${ContactAlias}/${PageId}"
    },
    {
        "service": "AWS Systems Manager Incident Manager Contacts",
        "resource": "rotation",
        "prefix": "ssm-contacts",
        "arn": "arn:${Partition}:ssm-contacts:${Region}:${Account}:rotation/${RotationId}"
    },
    {
        "service": "AWS Systems Manager Quick Setup",
        "resource": "configuration-manager",
        "prefix": "ssm-quicksetup",
        "arn": "arn:${Partition}:ssm-quicksetup:${Region}:${Account}:configuration-manager/${ConfigurationManagerId}"
    },
    {
        "service": "AWS Telco Network Builder",
        "resource": "function-package",
        "prefix": "tnb",
        "arn": "arn:${Partition}:tnb:${Region}:${Account}:function-package/${FunctionPackageId}"
    },
    {
        "service": "AWS Telco Network Builder",
        "resource": "network-package",
        "prefix": "tnb",
        "arn": "arn:${Partition}:tnb:${Region}:${Account}:network-package/${NetworkPackageId}"
    },
    {
        "service": "AWS Telco Network Builder",
        "resource": "network-instance",
        "prefix": "tnb",
        "arn": "arn:${Partition}:tnb:${Region}:${Account}:network-instance/${NetworkInstanceId}"
    },
    {
        "service": "AWS Telco Network Builder",
        "resource": "function-instance",
        "prefix": "tnb",
        "arn": "arn:${Partition}:tnb:${Region}:${Account}:function-instance/${FunctionInstanceId}"
    },
    {
        "service": "AWS Telco Network Builder",
        "resource": "network-operation",
        "prefix": "tnb",
        "arn": "arn:${Partition}:tnb:${Region}:${Account}:network-operation/${NetworkOperationId}"
    },
    {
        "service": "Amazon Textract",
        "resource": "adapter",
        "prefix": "textract",
        "arn": "arn:${Partition}:textract:${Region}:${Account}:/adapters/${AdapterId}"
    },
    {
        "service": "Amazon Textract",
        "resource": "adapterversion",
        "prefix": "textract",
        "arn": "arn:${Partition}:textract:${Region}:${Account}:/adapters/${AdapterId}/versions/${AdapterVersion}"
    },
    {
        "service": "Amazon Timestream",
        "resource": "database",
        "prefix": "timestream",
        "arn": "arn:${Partition}:timestream:${Region}:${Account}:database/${DatabaseName}"
    },
    {
        "service": "Amazon Timestream",
        "resource": "table",
        "prefix": "timestream",
        "arn": "arn:${Partition}:timestream:${Region}:${Account}:database/${DatabaseName}/table/${TableName}"
    },
    {
        "service": "Amazon Timestream",
        "resource": "scheduled-query",
        "prefix": "timestream",
        "arn": "arn:${Partition}:timestream:${Region}:${Account}:scheduled-query/${ScheduledQueryName}"
    },
    {
        "service": "Amazon Timestream InfluxDB",
        "resource": "db-cluster",
        "prefix": "timestream-influxdb",
        "arn": "arn:${Partition}:timestream-influxdb:${Region}:${Account}:db-cluster/${DbClusterId}"
    },
    {
        "service": "Amazon Timestream InfluxDB",
        "resource": "db-instance",
        "prefix": "timestream-influxdb",
        "arn": "arn:${Partition}:timestream-influxdb:${Region}:${Account}:db-instance/${DbInstanceIdentifier}"
    },
    {
        "service": "Amazon Timestream InfluxDB",
        "resource": "db-parameter-group",
        "prefix": "timestream-influxdb",
        "arn": "arn:${Partition}:timestream-influxdb:${Region}:${Account}:db-parameter-group/${DbParameterGroupIdentifier}"
    },
    {
        "service": "Amazon Transcribe",
        "resource": "transcriptionjob",
        "prefix": "transcribe",
        "arn": "arn:${Partition}:transcribe:${Region}:${Account}:transcription-job/${JobName}"
    },
    {
        "service": "Amazon Transcribe",
        "resource": "vocabulary",
        "prefix": "transcribe",
        "arn": "arn:${Partition}:transcribe:${Region}:${Account}:vocabulary/${VocabularyName}"
    },
    {
        "service": "Amazon Transcribe",
        "resource": "vocabularyfilter",
        "prefix": "transcribe",
        "arn": "arn:${Partition}:transcribe:${Region}:${Account}:vocabulary-filter/${VocabularyFilterName}"
    },
    {
        "service": "Amazon Transcribe",
        "resource": "languagemodel",
        "prefix": "transcribe",
        "arn": "arn:${Partition}:transcribe:${Region}:${Account}:language-model/${ModelName}"
    },
    {
        "service": "Amazon Transcribe",
        "resource": "medicaltranscriptionjob",
        "prefix": "transcribe",
        "arn": "arn:${Partition}:transcribe:${Region}:${Account}:medical-transcription-job/${JobName}"
    },
    {
        "service": "Amazon Transcribe",
        "resource": "medicalvocabulary",
        "prefix": "transcribe",
        "arn": "arn:${Partition}:transcribe:${Region}:${Account}:medical-vocabulary/${VocabularyName}"
    },
    {
        "service": "Amazon Transcribe",
        "resource": "callanalyticsjob",
        "prefix": "transcribe",
        "arn": "arn:${Partition}:transcribe:${Region}:${Account}:analytics/${JobName}"
    },
    {
        "service": "Amazon Transcribe",
        "resource": "callanalyticscategory",
        "prefix": "transcribe",
        "arn": "arn:${Partition}:transcribe:${Region}:${Account}:analytics-category/${CategoryName}"
    },
    {
        "service": "Amazon Transcribe",
        "resource": "medicalscribejob",
        "prefix": "transcribe",
        "arn": "arn:${Partition}:transcribe:${Region}:${Account}:medical-scribe-job/${JobName}"
    },
    {
        "service": "AWS Transfer Family",
        "resource": "user",
        "prefix": "transfer",
        "arn": "arn:${Partition}:transfer:${Region}:${Account}:user/${ServerId}/${UserName}"
    },
    {
        "service": "AWS Transfer Family",
        "resource": "server",
        "prefix": "transfer",
        "arn": "arn:${Partition}:transfer:${Region}:${Account}:server/${ServerId}"
    },
    {
        "service": "AWS Transfer Family",
        "resource": "workflow",
        "prefix": "transfer",
        "arn": "arn:${Partition}:transfer:${Region}:${Account}:workflow/${WorkflowId}"
    },
    {
        "service": "AWS Transfer Family",
        "resource": "certificate",
        "prefix": "transfer",
        "arn": "arn:${Partition}:transfer:${Region}:${Account}:certificate/${CertificateId}"
    },
    {
        "service": "AWS Transfer Family",
        "resource": "connector",
        "prefix": "transfer",
        "arn": "arn:${Partition}:transfer:${Region}:${Account}:connector/${ConnectorId}"
    },
    {
        "service": "AWS Transfer Family",
        "resource": "profile",
        "prefix": "transfer",
        "arn": "arn:${Partition}:transfer:${Region}:${Account}:profile/${ProfileId}"
    },
    {
        "service": "AWS Transfer Family",
        "resource": "agreement",
        "prefix": "transfer",
        "arn": "arn:${Partition}:transfer:${Region}:${Account}:agreement/${ServerId}/${AgreementId}"
    },
    {
        "service": "AWS Transfer Family",
        "resource": "host-key",
        "prefix": "transfer",
        "arn": "arn:${Partition}:transfer:${Region}:${Account}:host-key/${ServerId}/${HostKeyId}"
    },
    {
        "service": "AWS Transfer Family",
        "resource": "webapp",
        "prefix": "transfer",
        "arn": "arn:${Partition}:transfer:${Region}:${Account}:webapp/${WebAppId}"
    },
    {
        "service": "AWS Transform",
        "resource": "profile",
        "prefix": "transform",
        "arn": "arn:${Partition}:transform:${Region}:${Account}:profile/${Identifier}"
    },
    {
        "service": "Amazon Translate",
        "resource": "terminology",
        "prefix": "translate",
        "arn": "arn:${Partition}:translate:${Region}:${Account}:terminology/${ResourceName}"
    },
    {
        "service": "Amazon Translate",
        "resource": "parallel-data",
        "prefix": "translate",
        "arn": "arn:${Partition}:translate:${Region}:${Account}:parallel-data/${ResourceName}"
    },
    {
        "service": "AWS Trusted Advisor",
        "resource": "checks",
        "prefix": "trustedadvisor",
        "arn": "arn:${Partition}:trustedadvisor:${Region}:${Account}:checks/${CategoryCode}/${CheckId}"
    },
    {
        "service": "AWS User Notifications",
        "resource": "EventRule",
        "prefix": "notifications",
        "arn": "arn:${Partition}:notifications::${Account}:configuration/${NotificationConfigurationId}/rule/${EventRuleId}"
    },
    {
        "service": "AWS User Notifications",
        "resource": "NotificationConfiguration",
        "prefix": "notifications",
        "arn": "arn:${Partition}:notifications::${Account}:configuration/${NotificationConfigurationId}"
    },
    {
        "service": "AWS User Notifications",
        "resource": "NotificationEvent",
        "prefix": "notifications",
        "arn": "arn:${Partition}:notifications:${Region}:${Account}:configuration/${NotificationConfigurationId}/event/${NotificationEventId}"
    },
    {
        "service": "AWS User Notifications",
        "resource": "ManagedNotificationChildEvent",
        "prefix": "notifications",
        "arn": "arn:${Partition}:notifications::${Account}:managed-notification-configuration/category/${Category}/sub-category/${Subcategory}/event/${NotificationEventId}/child-event/${NotificationChildEventId}"
    },
    {
        "service": "AWS User Notifications",
        "resource": "ManagedNotificationConfiguration",
        "prefix": "notifications",
        "arn": "arn:${Partition}:notifications::${Account}:managed-notification-configuration/category/${Category}/sub-category/${Subcategory}"
    },
    {
        "service": "AWS User Notifications",
        "resource": "ManagedNotificationEvent",
        "prefix": "notifications",
        "arn": "arn:${Partition}:notifications::${Account}:managed-notification-configuration/category/${Category}/sub-category/${Subcategory}/event/${NotificationEventId}"
    },
    {
        "service": "AWS User Notifications Contacts",
        "resource": "EmailContactResource",
        "prefix": "notifications-contacts",
        "arn": "arn:${Partition}:notifications-contacts::${Account}:emailcontact/${EmailContactId}"
    },
    {
        "service": "Amazon Verified Permissions",
        "resource": "policy-store",
        "prefix": "verifiedpermissions",
        "arn": "arn:${Partition}:verifiedpermissions::${Account}:policy-store/${PolicyStoreId}"
    },
    {
        "service": "Amazon VPC Lattice",
        "resource": "AccessLogSubscription",
        "prefix": "vpc-lattice",
        "arn": "arn:${Partition}:vpc-lattice:${Region}:${Account}:accesslogsubscription/${AccessLogSubscriptionId}"
    },
    {
        "service": "Amazon VPC Lattice",
        "resource": "Listener",
        "prefix": "vpc-lattice",
        "arn": "arn:${Partition}:vpc-lattice:${Region}:${Account}:service/${ServiceId}/listener/${ListenerId}"
    },
    {
        "service": "Amazon VPC Lattice",
        "resource": "ResourceConfiguration",
        "prefix": "vpc-lattice",
        "arn": "arn:${Partition}:vpc-lattice:${Region}:${Account}:resourceconfiguration/${ResourceConfigurationId}"
    },
    {
        "service": "Amazon VPC Lattice",
        "resource": "ResourceEndpointAssociation",
        "prefix": "vpc-lattice",
        "arn": "arn:${Partition}:vpc-lattice:${Region}:${Account}:resourceendpointassociation/${ResourceEndpointAssociationId}"
    },
    {
        "service": "Amazon VPC Lattice",
        "resource": "ResourceGateway",
        "prefix": "vpc-lattice",
        "arn": "arn:${Partition}:vpc-lattice:${Region}:${Account}:resourcegateway/${ResourceGatewayId}"
    },
    {
        "service": "Amazon VPC Lattice",
        "resource": "Rule",
        "prefix": "vpc-lattice",
        "arn": "arn:${Partition}:vpc-lattice:${Region}:${Account}:service/${ServiceId}/listener/${ListenerId}/rule/${RuleId}"
    },
    {
        "service": "Amazon VPC Lattice",
        "resource": "Service",
        "prefix": "vpc-lattice",
        "arn": "arn:${Partition}:vpc-lattice:${Region}:${Account}:service/${ServiceId}"
    },
    {
        "service": "Amazon VPC Lattice",
        "resource": "ServiceNetwork",
        "prefix": "vpc-lattice",
        "arn": "arn:${Partition}:vpc-lattice:${Region}:${Account}:servicenetwork/${ServiceNetworkId}"
    },
    {
        "service": "Amazon VPC Lattice",
        "resource": "ServiceNetworkResourceAssociation",
        "prefix": "vpc-lattice",
        "arn": "arn:${Partition}:vpc-lattice:${Region}:${Account}:servicenetworkresourceassociation/${ServiceNetworkResourceAssociationId}"
    },
    {
        "service": "Amazon VPC Lattice",
        "resource": "ServiceNetworkServiceAssociation",
        "prefix": "vpc-lattice",
        "arn": "arn:${Partition}:vpc-lattice:${Region}:${Account}:servicenetworkserviceassociation/${ServiceNetworkServiceAssociationId}"
    },
    {
        "service": "Amazon VPC Lattice",
        "resource": "ServiceNetworkVpcAssociation",
        "prefix": "vpc-lattice",
        "arn": "arn:${Partition}:vpc-lattice:${Region}:${Account}:servicenetworkvpcassociation/${ServiceNetworkVpcAssociationId}"
    },
    {
        "service": "Amazon VPC Lattice",
        "resource": "TargetGroup",
        "prefix": "vpc-lattice",
        "arn": "arn:${Partition}:vpc-lattice:${Region}:${Account}:targetgroup/${TargetGroupId}"
    },
    {
        "service": "AWS WAF",
        "resource": "bytematchset",
        "prefix": "waf",
        "arn": "arn:${Partition}:waf::${Account}:bytematchset/${Id}"
    },
    {
        "service": "AWS WAF",
        "resource": "ipset",
        "prefix": "waf",
        "arn": "arn:${Partition}:waf::${Account}:ipset/${Id}"
    },
    {
        "service": "AWS WAF",
        "resource": "ratebasedrule",
        "prefix": "waf",
        "arn": "arn:${Partition}:waf::${Account}:ratebasedrule/${Id}"
    },
    {
        "service": "AWS WAF",
        "resource": "rule",
        "prefix": "waf",
        "arn": "arn:${Partition}:waf::${Account}:rule/${Id}"
    },
    {
        "service": "AWS WAF",
        "resource": "sizeconstraintset",
        "prefix": "waf",
        "arn": "arn:${Partition}:waf::${Account}:sizeconstraintset/${Id}"
    },
    {
        "service": "AWS WAF",
        "resource": "sqlinjectionmatchset",
        "prefix": "waf",
        "arn": "arn:${Partition}:waf::${Account}:sqlinjectionset/${Id}"
    },
    {
        "service": "AWS WAF",
        "resource": "webacl",
        "prefix": "waf",
        "arn": "arn:${Partition}:waf::${Account}:webacl/${Id}"
    },
    {
        "service": "AWS WAF",
        "resource": "xssmatchset",
        "prefix": "waf",
        "arn": "arn:${Partition}:waf::${Account}:xssmatchset/${Id}"
    },
    {
        "service": "AWS WAF",
        "resource": "regexmatchset",
        "prefix": "waf",
        "arn": "arn:${Partition}:waf::${Account}:regexmatch/${Id}"
    },
    {
        "service": "AWS WAF",
        "resource": "regexpatternset",
        "prefix": "waf",
        "arn": "arn:${Partition}:waf::${Account}:regexpatternset/${Id}"
    },
    {
        "service": "AWS WAF",
        "resource": "geomatchset",
        "prefix": "waf",
        "arn": "arn:${Partition}:waf::${Account}:geomatchset/${Id}"
    },
    {
        "service": "AWS WAF",
        "resource": "rulegroup",
        "prefix": "waf",
        "arn": "arn:${Partition}:waf::${Account}:rulegroup/${Id}"
    },
    {
        "service": "AWS WAF Regional",
        "resource": "bytematchset",
        "prefix": "waf-regional",
        "arn": "arn:${Partition}:waf-regional:${Region}:${Account}:bytematchset/${Id}"
    },
    {
        "service": "AWS WAF Regional",
        "resource": "ipset",
        "prefix": "waf-regional",
        "arn": "arn:${Partition}:waf-regional:${Region}:${Account}:ipset/${Id}"
    },
    {
        "service": "AWS WAF Regional",
        "resource": "ratebasedrule",
        "prefix": "waf-regional",
        "arn": "arn:${Partition}:waf-regional:${Region}:${Account}:ratebasedrule/${Id}"
    },
    {
        "service": "AWS WAF Regional",
        "resource": "rule",
        "prefix": "waf-regional",
        "arn": "arn:${Partition}:waf-regional:${Region}:${Account}:rule/${Id}"
    },
    {
        "service": "AWS WAF Regional",
        "resource": "sizeconstraintset",
        "prefix": "waf-regional",
        "arn": "arn:${Partition}:waf-regional:${Region}:${Account}:sizeconstraintset/${Id}"
    },
    {
        "service": "AWS WAF Regional",
        "resource": "sqlinjectionmatchset",
        "prefix": "waf-regional",
        "arn": "arn:${Partition}:waf-regional:${Region}:${Account}:sqlinjectionset/${Id}"
    },
    {
        "service": "AWS WAF Regional",
        "resource": "webacl",
        "prefix": "waf-regional",
        "arn": "arn:${Partition}:waf-regional:${Region}:${Account}:webacl/${Id}"
    },
    {
        "service": "AWS WAF Regional",
        "resource": "xssmatchset",
        "prefix": "waf-regional",
        "arn": "arn:${Partition}:waf-regional:${Region}:${Account}:xssmatchset/${Id}"
    },
    {
        "service": "AWS WAF Regional",
        "resource": "regexmatchset",
        "prefix": "waf-regional",
        "arn": "arn:${Partition}:waf-regional:${Region}:${Account}:regexmatch/${Id}"
    },
    {
        "service": "AWS WAF Regional",
        "resource": "regexpatternset",
        "prefix": "waf-regional",
        "arn": "arn:${Partition}:waf-regional:${Region}:${Account}:regexpatternset/${Id}"
    },
    {
        "service": "AWS WAF Regional",
        "resource": "geomatchset",
        "prefix": "waf-regional",
        "arn": "arn:${Partition}:waf-regional:${Region}:${Account}:geomatchset/${Id}"
    },
    {
        "service": "AWS WAF Regional",
        "resource": "rulegroup",
        "prefix": "waf-regional",
        "arn": "arn:${Partition}:waf-regional:${Region}:${Account}:rulegroup/${Id}"
    },
    {
        "service": "AWS WAF V2",
        "resource": "webacl",
        "prefix": "wafv2",
        "arn": "arn:${Partition}:wafv2:${Region}:${Account}:${Scope}/webacl/${Name}/${Id}"
    },
    {
        "service": "AWS WAF V2",
        "resource": "ipset",
        "prefix": "wafv2",
        "arn": "arn:${Partition}:wafv2:${Region}:${Account}:${Scope}/ipset/${Name}/${Id}"
    },
    {
        "service": "AWS WAF V2",
        "resource": "managedruleset",
        "prefix": "wafv2",
        "arn": "arn:${Partition}:wafv2:${Region}:${Account}:${Scope}/managedruleset/${Name}/${Id}"
    },
    {
        "service": "AWS WAF V2",
        "resource": "rulegroup",
        "prefix": "wafv2",
        "arn": "arn:${Partition}:wafv2:${Region}:${Account}:${Scope}/rulegroup/${Name}/${Id}"
    },
    {
        "service": "AWS WAF V2",
        "resource": "regexpatternset",
        "prefix": "wafv2",
        "arn": "arn:${Partition}:wafv2:${Region}:${Account}:${Scope}/regexpatternset/${Name}/${Id}"
    },
    {
        "service": "AWS Well-Architected Tool",
        "resource": "workload",
        "prefix": "wellarchitected",
        "arn": "arn:${Partition}:wellarchitected:${Region}:${Account}:workload/${ResourceId}"
    },
    {
        "service": "AWS Well-Architected Tool",
        "resource": "lens",
        "prefix": "wellarchitected",
        "arn": "arn:${Partition}:wellarchitected:${Region}:${Account}:lens/${ResourceId}"
    },
    {
        "service": "AWS Well-Architected Tool",
        "resource": "profile",
        "prefix": "wellarchitected",
        "arn": "arn:${Partition}:wellarchitected:${Region}:${Account}:profile/${ResourceId}"
    },
    {
        "service": "AWS Well-Architected Tool",
        "resource": "review-template",
        "prefix": "wellarchitected",
        "arn": "arn:${Partition}:wellarchitected:${Region}:${Account}:review-template/${ResourceId}"
    },
    {
        "service": "AWS Wickr",
        "resource": "network",
        "prefix": "wickr",
        "arn": "arn:${Partition}:wickr:${Region}:${Account}:network/${NetworkId}"
    },
    {
        "service": "Amazon WorkDocs",
        "resource": "organization",
        "prefix": "workdocs",
        "arn": "arn:${Partition}:workdocs:${Region}:${Account}:organization/${ResourceId}"
    },
    {
        "service": "Amazon WorkLink",
        "resource": "fleet",
        "prefix": "worklink",
        "arn": "arn:${Partition}:worklink::${Account}:fleet/${FleetName}"
    },
    {
        "service": "Amazon WorkMail",
        "resource": "organization",
        "prefix": "workmail",
        "arn": "arn:${Partition}:workmail:${Region}:${Account}:organization/${ResourceId}"
    },
    {
        "service": "Amazon WorkMail Message Flow",
        "resource": "RawMessage",
        "prefix": "workmailmessageflow",
        "arn": "arn:${Partition}:workmailmessageflow:${Region}:${Account}:message/${OrganizationId}/${Context}/${MessageId}"
    },
    {
        "service": "Amazon WorkSpaces",
        "resource": "directoryid",
        "prefix": "workspaces",
        "arn": "arn:${Partition}:workspaces:${Region}:${Account}:directory/${DirectoryId}"
    },
    {
        "service": "Amazon WorkSpaces",
        "resource": "workspacebundle",
        "prefix": "workspaces",
        "arn": "arn:${Partition}:workspaces:${Region}:${Account}:workspacebundle/${BundleId}"
    },
    {
        "service": "Amazon WorkSpaces",
        "resource": "workspaceid",
        "prefix": "workspaces",
        "arn": "arn:${Partition}:workspaces:${Region}:${Account}:workspace/${WorkspaceId}"
    },
    {
        "service": "Amazon WorkSpaces",
        "resource": "workspaceimage",
        "prefix": "workspaces",
        "arn": "arn:${Partition}:workspaces:${Region}:${Account}:workspaceimage/${ImageId}"
    },
    {
        "service": "Amazon WorkSpaces",
        "resource": "workspaceipgroup",
        "prefix": "workspaces",
        "arn": "arn:${Partition}:workspaces:${Region}:${Account}:workspaceipgroup/${GroupId}"
    },
    {
        "service": "Amazon WorkSpaces",
        "resource": "workspacespoolid",
        "prefix": "workspaces",
        "arn": "arn:${Partition}:workspaces:${Region}:${Account}:workspacespool/${PoolId}"
    },
    {
        "service": "Amazon WorkSpaces",
        "resource": "connectionalias",
        "prefix": "workspaces",
        "arn": "arn:${Partition}:workspaces:${Region}:${Account}:connectionalias/${ConnectionAliasId}"
    },
    {
        "service": "Amazon WorkSpaces",
        "resource": "workspaceapplication",
        "prefix": "workspaces",
        "arn": "arn:${Partition}:workspaces:${Region}:${Account}:workspaceapplication/${WorkSpaceApplicationId}"
    },
    {
        "service": "Amazon WorkSpaces Secure Browser",
        "resource": "browserSettings",
        "prefix": "workspaces-web",
        "arn": "arn:${Partition}:workspaces-web:${Region}:${Account}:browserSettings/${BrowserSettingsId}"
    },
    {
        "service": "Amazon WorkSpaces Secure Browser",
        "resource": "identityProvider",
        "prefix": "workspaces-web",
        "arn": "arn:${Partition}:workspaces-web:${Region}:${Account}:identityProvider/${PortalId}/${IdentityProviderId}"
    },
    {
        "service": "Amazon WorkSpaces Secure Browser",
        "resource": "networkSettings",
        "prefix": "workspaces-web",
        "arn": "arn:${Partition}:workspaces-web:${Region}:${Account}:networkSettings/${NetworkSettingsId}"
    },
    {
        "service": "Amazon WorkSpaces Secure Browser",
        "resource": "portal",
        "prefix": "workspaces-web",
        "arn": "arn:${Partition}:workspaces-web:${Region}:${Account}:portal/${PortalId}"
    },
    {
        "service": "Amazon WorkSpaces Secure Browser",
        "resource": "trustStore",
        "prefix": "workspaces-web",
        "arn": "arn:${Partition}:workspaces-web:${Region}:${Account}:trustStore/${TrustStoreId}"
    },
    {
        "service": "Amazon WorkSpaces Secure Browser",
        "resource": "userSettings",
        "prefix": "workspaces-web",
        "arn": "arn:${Partition}:workspaces-web:${Region}:${Account}:userSettings/${UserSettingsId}"
    },
    {
        "service": "Amazon WorkSpaces Secure Browser",
        "resource": "userAccessLoggingSettings",
        "prefix": "workspaces-web",
        "arn": "arn:${Partition}:workspaces-web:${Region}:${Account}:userAccessLoggingSettings/${UserAccessLoggingSettingsId}"
    },
    {
        "service": "Amazon WorkSpaces Secure Browser",
        "resource": "ipAccessSettings",
        "prefix": "workspaces-web",
        "arn": "arn:${Partition}:workspaces-web:${Region}:${Account}:ipAccessSettings/${IpAccessSettingsId}"
    },
    {
        "service": "Amazon WorkSpaces Secure Browser",
        "resource": "dataProtectionSettings",
        "prefix": "workspaces-web",
        "arn": "arn:${Partition}:workspaces-web:${Region}:${Account}:dataProtectionSettings/${DataProtectionSettingsId}"
    },
    {
        "service": "Amazon WorkSpaces Thin Client",
        "resource": "environment",
        "prefix": "thinclient",
        "arn": "arn:${Partition}:thinclient:${Region}:${Account}:environment/${EnvironmentId}"
    },
    {
        "service": "Amazon WorkSpaces Thin Client",
        "resource": "device",
        "prefix": "thinclient",
        "arn": "arn:${Partition}:thinclient:${Region}:${Account}:device/${DeviceId}"
    },
    {
        "service": "Amazon WorkSpaces Thin Client",
        "resource": "softwareset",
        "prefix": "thinclient",
        "arn": "arn:${Partition}:thinclient:${Region}:${Account}:softwareset/${SoftwareSetId}"
    },
    {
        "service": "AWS X-Ray",
        "resource": "group",
        "prefix": "xray",
        "arn": "arn:${Partition}:xray:${Region}:${Account}:group/${GroupName}/${Id}"
    },
    {
        "service": "AWS X-Ray",
        "resource": "sampling-rule",
        "prefix": "xray",
        "arn": "arn:${Partition}:xray:${Region}:${Account}:sampling-rule/${SamplingRuleName}"
    }
]